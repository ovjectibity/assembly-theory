/* automatically generated by rust-bindgen 0.72.0 */

pub const __WORDSIZE: u32 = 64;
pub const __has_safe_buffers: u32 = 1;
pub const __DARWIN_ONLY_64_BIT_INO_T: u32 = 1;
pub const __DARWIN_ONLY_UNIX_CONFORMANCE: u32 = 1;
pub const __DARWIN_ONLY_VERS_1050: u32 = 1;
pub const __DARWIN_UNIX03: u32 = 1;
pub const __DARWIN_64_BIT_INO_T: u32 = 1;
pub const __DARWIN_VERS_1050: u32 = 1;
pub const __DARWIN_NON_CANCELABLE: u32 = 0;
pub const __DARWIN_SUF_EXTSN: &[u8; 14] = b"$DARWIN_EXTSN\0";
pub const __DARWIN_C_ANSI: u32 = 4096;
pub const __DARWIN_C_FULL: u32 = 900000;
pub const __DARWIN_C_LEVEL: u32 = 900000;
pub const __STDC_WANT_LIB_EXT1__: u32 = 1;
pub const __DARWIN_NO_LONG_LONG: u32 = 0;
pub const _DARWIN_FEATURE_64_BIT_INODE: u32 = 1;
pub const _DARWIN_FEATURE_ONLY_64_BIT_INODE: u32 = 1;
pub const _DARWIN_FEATURE_ONLY_VERS_1050: u32 = 1;
pub const _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE: u32 = 1;
pub const _DARWIN_FEATURE_UNIX_CONFORMANCE: u32 = 3;
pub const __has_ptrcheck: u32 = 0;
pub const USE_CLANG_TYPES: u32 = 0;
pub const __PTHREAD_SIZE__: u32 = 8176;
pub const __PTHREAD_ATTR_SIZE__: u32 = 56;
pub const __PTHREAD_MUTEXATTR_SIZE__: u32 = 8;
pub const __PTHREAD_MUTEX_SIZE__: u32 = 56;
pub const __PTHREAD_CONDATTR_SIZE__: u32 = 8;
pub const __PTHREAD_COND_SIZE__: u32 = 40;
pub const __PTHREAD_ONCE_SIZE__: u32 = 8;
pub const __PTHREAD_RWLOCK_SIZE__: u32 = 192;
pub const __PTHREAD_RWLOCKATTR_SIZE__: u32 = 16;
pub const INT8_MAX: u32 = 127;
pub const INT16_MAX: u32 = 32767;
pub const INT32_MAX: u32 = 2147483647;
pub const INT64_MAX: u64 = 9223372036854775807;
pub const INT8_MIN: i32 = -128;
pub const INT16_MIN: i32 = -32768;
pub const INT32_MIN: i32 = -2147483648;
pub const INT64_MIN: i64 = -9223372036854775808;
pub const UINT8_MAX: u32 = 255;
pub const UINT16_MAX: u32 = 65535;
pub const UINT32_MAX: u32 = 4294967295;
pub const UINT64_MAX: i32 = -1;
pub const INT_LEAST8_MIN: i32 = -128;
pub const INT_LEAST16_MIN: i32 = -32768;
pub const INT_LEAST32_MIN: i32 = -2147483648;
pub const INT_LEAST64_MIN: i64 = -9223372036854775808;
pub const INT_LEAST8_MAX: u32 = 127;
pub const INT_LEAST16_MAX: u32 = 32767;
pub const INT_LEAST32_MAX: u32 = 2147483647;
pub const INT_LEAST64_MAX: u64 = 9223372036854775807;
pub const UINT_LEAST8_MAX: u32 = 255;
pub const UINT_LEAST16_MAX: u32 = 65535;
pub const UINT_LEAST32_MAX: u32 = 4294967295;
pub const UINT_LEAST64_MAX: i32 = -1;
pub const INT_FAST8_MIN: i32 = -128;
pub const INT_FAST16_MIN: i32 = -32768;
pub const INT_FAST32_MIN: i32 = -2147483648;
pub const INT_FAST64_MIN: i64 = -9223372036854775808;
pub const INT_FAST8_MAX: u32 = 127;
pub const INT_FAST16_MAX: u32 = 32767;
pub const INT_FAST32_MAX: u32 = 2147483647;
pub const INT_FAST64_MAX: u64 = 9223372036854775807;
pub const UINT_FAST8_MAX: u32 = 255;
pub const UINT_FAST16_MAX: u32 = 65535;
pub const UINT_FAST32_MAX: u32 = 4294967295;
pub const UINT_FAST64_MAX: i32 = -1;
pub const INTPTR_MAX: u64 = 9223372036854775807;
pub const INTPTR_MIN: i64 = -9223372036854775808;
pub const UINTPTR_MAX: i32 = -1;
pub const SIZE_MAX: i32 = -1;
pub const RSIZE_MAX: i32 = -1;
pub const WINT_MIN: i32 = -2147483648;
pub const WINT_MAX: u32 = 2147483647;
pub const SIG_ATOMIC_MIN: i32 = -2147483648;
pub const SIG_ATOMIC_MAX: u32 = 2147483647;
pub const mjMINVAL: f64 = 0.000000000000001;
pub const mjPI: f64 = 3.141592653589793;
pub const mjMAXVAL: f64 = 10000000000.0;
pub const mjMINMU: f64 = 0.00001;
pub const mjMINIMP: f64 = 0.0001;
pub const mjMAXIMP: f64 = 0.9999;
pub const mjMAXCONPAIR: u32 = 50;
pub const mjMAXTREEDEPTH: u32 = 50;
pub const mjMAXFLEXNODES: u32 = 27;
pub const mjNEQDATA: u32 = 11;
pub const mjNDYN: u32 = 10;
pub const mjNGAIN: u32 = 10;
pub const mjNBIAS: u32 = 10;
pub const mjNFLUID: u32 = 12;
pub const mjNREF: u32 = 2;
pub const mjNIMP: u32 = 5;
pub const mjNSOLVER: u32 = 200;
pub const mjNISLAND: u32 = 20;
pub const mjMAXTHREAD: u32 = 128;
pub type wchar_t = ::std::os::raw::c_int;
pub type max_align_t = f64;
pub type int_least8_t = i8;
pub type int_least16_t = i16;
pub type int_least32_t = i32;
pub type int_least64_t = i64;
pub type uint_least8_t = u8;
pub type uint_least16_t = u16;
pub type uint_least32_t = u32;
pub type uint_least64_t = u64;
pub type int_fast8_t = i8;
pub type int_fast16_t = i16;
pub type int_fast32_t = i32;
pub type int_fast64_t = i64;
pub type uint_fast8_t = u8;
pub type uint_fast16_t = u16;
pub type uint_fast32_t = u32;
pub type uint_fast64_t = u64;
pub type __int8_t = ::std::os::raw::c_schar;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_longlong;
pub type __uint64_t = ::std::os::raw::c_ulonglong;
pub type __darwin_intptr_t = ::std::os::raw::c_long;
pub type __darwin_natural_t = ::std::os::raw::c_uint;
pub type __darwin_ct_rune_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
pub union __mbstate_t {
    pub __mbstate8: [::std::os::raw::c_char; 128usize],
    pub _mbstateL: ::std::os::raw::c_longlong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __mbstate_t"][::std::mem::size_of::<__mbstate_t>() - 128usize];
    ["Alignment of __mbstate_t"][::std::mem::align_of::<__mbstate_t>() - 8usize];
    ["Offset of field: __mbstate_t::__mbstate8"]
        [::std::mem::offset_of!(__mbstate_t, __mbstate8) - 0usize];
    ["Offset of field: __mbstate_t::_mbstateL"]
        [::std::mem::offset_of!(__mbstate_t, _mbstateL) - 0usize];
};
pub type __darwin_mbstate_t = __mbstate_t;
pub type __darwin_ptrdiff_t = ::std::os::raw::c_long;
pub type __darwin_size_t = ::std::os::raw::c_ulong;
pub type __darwin_va_list = __builtin_va_list;
pub type __darwin_wchar_t = ::std::os::raw::c_int;
pub type __darwin_rune_t = __darwin_wchar_t;
pub type __darwin_wint_t = ::std::os::raw::c_int;
pub type __darwin_clock_t = ::std::os::raw::c_ulong;
pub type __darwin_socklen_t = __uint32_t;
pub type __darwin_ssize_t = ::std::os::raw::c_long;
pub type __darwin_time_t = ::std::os::raw::c_long;
pub type __darwin_blkcnt_t = __int64_t;
pub type __darwin_blksize_t = __int32_t;
pub type __darwin_dev_t = __int32_t;
pub type __darwin_fsblkcnt_t = ::std::os::raw::c_uint;
pub type __darwin_fsfilcnt_t = ::std::os::raw::c_uint;
pub type __darwin_gid_t = __uint32_t;
pub type __darwin_id_t = __uint32_t;
pub type __darwin_ino64_t = __uint64_t;
pub type __darwin_ino_t = __darwin_ino64_t;
pub type __darwin_mach_port_name_t = __darwin_natural_t;
pub type __darwin_mach_port_t = __darwin_mach_port_name_t;
pub type __darwin_mode_t = __uint16_t;
pub type __darwin_off_t = __int64_t;
pub type __darwin_pid_t = __int32_t;
pub type __darwin_sigset_t = __uint32_t;
pub type __darwin_suseconds_t = __int32_t;
pub type __darwin_uid_t = __uint32_t;
pub type __darwin_useconds_t = __uint32_t;
pub type __darwin_uuid_t = [::std::os::raw::c_uchar; 16usize];
pub type __darwin_uuid_string_t = [::std::os::raw::c_char; 37usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_pthread_handler_rec {
    pub __routine: ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
    pub __arg: *mut ::std::os::raw::c_void,
    pub __next: *mut __darwin_pthread_handler_rec,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_pthread_handler_rec"]
        [::std::mem::size_of::<__darwin_pthread_handler_rec>() - 24usize];
    ["Alignment of __darwin_pthread_handler_rec"]
        [::std::mem::align_of::<__darwin_pthread_handler_rec>() - 8usize];
    ["Offset of field: __darwin_pthread_handler_rec::__routine"]
        [::std::mem::offset_of!(__darwin_pthread_handler_rec, __routine) - 0usize];
    ["Offset of field: __darwin_pthread_handler_rec::__arg"]
        [::std::mem::offset_of!(__darwin_pthread_handler_rec, __arg) - 8usize];
    ["Offset of field: __darwin_pthread_handler_rec::__next"]
        [::std::mem::offset_of!(__darwin_pthread_handler_rec, __next) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_attr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 56usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_attr_t"][::std::mem::size_of::<_opaque_pthread_attr_t>() - 64usize];
    ["Alignment of _opaque_pthread_attr_t"]
        [::std::mem::align_of::<_opaque_pthread_attr_t>() - 8usize];
    ["Offset of field: _opaque_pthread_attr_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_attr_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_attr_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_attr_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_cond_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 40usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_cond_t"][::std::mem::size_of::<_opaque_pthread_cond_t>() - 48usize];
    ["Alignment of _opaque_pthread_cond_t"]
        [::std::mem::align_of::<_opaque_pthread_cond_t>() - 8usize];
    ["Offset of field: _opaque_pthread_cond_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_cond_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_cond_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_cond_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_condattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_condattr_t"]
        [::std::mem::size_of::<_opaque_pthread_condattr_t>() - 16usize];
    ["Alignment of _opaque_pthread_condattr_t"]
        [::std::mem::align_of::<_opaque_pthread_condattr_t>() - 8usize];
    ["Offset of field: _opaque_pthread_condattr_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_condattr_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_condattr_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_condattr_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_mutex_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 56usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_mutex_t"][::std::mem::size_of::<_opaque_pthread_mutex_t>() - 64usize];
    ["Alignment of _opaque_pthread_mutex_t"]
        [::std::mem::align_of::<_opaque_pthread_mutex_t>() - 8usize];
    ["Offset of field: _opaque_pthread_mutex_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_mutex_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_mutex_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_mutex_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_mutexattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_mutexattr_t"]
        [::std::mem::size_of::<_opaque_pthread_mutexattr_t>() - 16usize];
    ["Alignment of _opaque_pthread_mutexattr_t"]
        [::std::mem::align_of::<_opaque_pthread_mutexattr_t>() - 8usize];
    ["Offset of field: _opaque_pthread_mutexattr_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_mutexattr_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_mutexattr_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_mutexattr_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_once_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_once_t"][::std::mem::size_of::<_opaque_pthread_once_t>() - 16usize];
    ["Alignment of _opaque_pthread_once_t"]
        [::std::mem::align_of::<_opaque_pthread_once_t>() - 8usize];
    ["Offset of field: _opaque_pthread_once_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_once_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_once_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_once_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_rwlock_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 192usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_rwlock_t"]
        [::std::mem::size_of::<_opaque_pthread_rwlock_t>() - 200usize];
    ["Alignment of _opaque_pthread_rwlock_t"]
        [::std::mem::align_of::<_opaque_pthread_rwlock_t>() - 8usize];
    ["Offset of field: _opaque_pthread_rwlock_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_rwlock_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_rwlock_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_rwlock_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_rwlockattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 16usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_rwlockattr_t"]
        [::std::mem::size_of::<_opaque_pthread_rwlockattr_t>() - 24usize];
    ["Alignment of _opaque_pthread_rwlockattr_t"]
        [::std::mem::align_of::<_opaque_pthread_rwlockattr_t>() - 8usize];
    ["Offset of field: _opaque_pthread_rwlockattr_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_rwlockattr_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_rwlockattr_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_rwlockattr_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_t {
    pub __sig: ::std::os::raw::c_long,
    pub __cleanup_stack: *mut __darwin_pthread_handler_rec,
    pub __opaque: [::std::os::raw::c_char; 8176usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_t"][::std::mem::size_of::<_opaque_pthread_t>() - 8192usize];
    ["Alignment of _opaque_pthread_t"][::std::mem::align_of::<_opaque_pthread_t>() - 8usize];
    ["Offset of field: _opaque_pthread_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_t::__cleanup_stack"]
        [::std::mem::offset_of!(_opaque_pthread_t, __cleanup_stack) - 8usize];
    ["Offset of field: _opaque_pthread_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_t, __opaque) - 16usize];
};
pub type __darwin_pthread_attr_t = _opaque_pthread_attr_t;
pub type __darwin_pthread_cond_t = _opaque_pthread_cond_t;
pub type __darwin_pthread_condattr_t = _opaque_pthread_condattr_t;
pub type __darwin_pthread_key_t = ::std::os::raw::c_ulong;
pub type __darwin_pthread_mutex_t = _opaque_pthread_mutex_t;
pub type __darwin_pthread_mutexattr_t = _opaque_pthread_mutexattr_t;
pub type __darwin_pthread_once_t = _opaque_pthread_once_t;
pub type __darwin_pthread_rwlock_t = _opaque_pthread_rwlock_t;
pub type __darwin_pthread_rwlockattr_t = _opaque_pthread_rwlockattr_t;
pub type __darwin_pthread_t = *mut _opaque_pthread_t;
pub type intmax_t = ::std::os::raw::c_long;
pub type uintmax_t = ::std::os::raw::c_ulong;
pub type mjtNum = f64;
pub type mjtByte = ::std::os::raw::c_uchar;
pub type rsize_t = ::std::os::raw::c_ulong;
pub const mjtDisableBit__mjDSBL_CONSTRAINT: mjtDisableBit_ = 1;
pub const mjtDisableBit__mjDSBL_EQUALITY: mjtDisableBit_ = 2;
pub const mjtDisableBit__mjDSBL_FRICTIONLOSS: mjtDisableBit_ = 4;
pub const mjtDisableBit__mjDSBL_LIMIT: mjtDisableBit_ = 8;
pub const mjtDisableBit__mjDSBL_CONTACT: mjtDisableBit_ = 16;
pub const mjtDisableBit__mjDSBL_PASSIVE: mjtDisableBit_ = 32;
pub const mjtDisableBit__mjDSBL_GRAVITY: mjtDisableBit_ = 64;
pub const mjtDisableBit__mjDSBL_CLAMPCTRL: mjtDisableBit_ = 128;
pub const mjtDisableBit__mjDSBL_WARMSTART: mjtDisableBit_ = 256;
pub const mjtDisableBit__mjDSBL_FILTERPARENT: mjtDisableBit_ = 512;
pub const mjtDisableBit__mjDSBL_ACTUATION: mjtDisableBit_ = 1024;
pub const mjtDisableBit__mjDSBL_REFSAFE: mjtDisableBit_ = 2048;
pub const mjtDisableBit__mjDSBL_SENSOR: mjtDisableBit_ = 4096;
pub const mjtDisableBit__mjDSBL_MIDPHASE: mjtDisableBit_ = 8192;
pub const mjtDisableBit__mjDSBL_EULERDAMP: mjtDisableBit_ = 16384;
pub const mjtDisableBit__mjDSBL_AUTORESET: mjtDisableBit_ = 32768;
pub const mjtDisableBit__mjDSBL_NATIVECCD: mjtDisableBit_ = 65536;
pub const mjtDisableBit__mjNDISABLE: mjtDisableBit_ = 17;
pub type mjtDisableBit_ = ::std::os::raw::c_uint;
pub use self::mjtDisableBit_ as mjtDisableBit;
pub const mjtEnableBit__mjENBL_OVERRIDE: mjtEnableBit_ = 1;
pub const mjtEnableBit__mjENBL_ENERGY: mjtEnableBit_ = 2;
pub const mjtEnableBit__mjENBL_FWDINV: mjtEnableBit_ = 4;
pub const mjtEnableBit__mjENBL_INVDISCRETE: mjtEnableBit_ = 8;
pub const mjtEnableBit__mjENBL_MULTICCD: mjtEnableBit_ = 16;
pub const mjtEnableBit__mjENBL_ISLAND: mjtEnableBit_ = 32;
pub const mjtEnableBit__mjNENABLE: mjtEnableBit_ = 6;
pub type mjtEnableBit_ = ::std::os::raw::c_uint;
pub use self::mjtEnableBit_ as mjtEnableBit;
pub const mjtJoint__mjJNT_FREE: mjtJoint_ = 0;
pub const mjtJoint__mjJNT_BALL: mjtJoint_ = 1;
pub const mjtJoint__mjJNT_SLIDE: mjtJoint_ = 2;
pub const mjtJoint__mjJNT_HINGE: mjtJoint_ = 3;
pub type mjtJoint_ = ::std::os::raw::c_uint;
pub use self::mjtJoint_ as mjtJoint;
pub const mjtGeom__mjGEOM_PLANE: mjtGeom_ = 0;
pub const mjtGeom__mjGEOM_HFIELD: mjtGeom_ = 1;
pub const mjtGeom__mjGEOM_SPHERE: mjtGeom_ = 2;
pub const mjtGeom__mjGEOM_CAPSULE: mjtGeom_ = 3;
pub const mjtGeom__mjGEOM_ELLIPSOID: mjtGeom_ = 4;
pub const mjtGeom__mjGEOM_CYLINDER: mjtGeom_ = 5;
pub const mjtGeom__mjGEOM_BOX: mjtGeom_ = 6;
pub const mjtGeom__mjGEOM_MESH: mjtGeom_ = 7;
pub const mjtGeom__mjGEOM_SDF: mjtGeom_ = 8;
pub const mjtGeom__mjNGEOMTYPES: mjtGeom_ = 9;
pub const mjtGeom__mjGEOM_ARROW: mjtGeom_ = 100;
pub const mjtGeom__mjGEOM_ARROW1: mjtGeom_ = 101;
pub const mjtGeom__mjGEOM_ARROW2: mjtGeom_ = 102;
pub const mjtGeom__mjGEOM_LINE: mjtGeom_ = 103;
pub const mjtGeom__mjGEOM_LINEBOX: mjtGeom_ = 104;
pub const mjtGeom__mjGEOM_FLEX: mjtGeom_ = 105;
pub const mjtGeom__mjGEOM_SKIN: mjtGeom_ = 106;
pub const mjtGeom__mjGEOM_LABEL: mjtGeom_ = 107;
pub const mjtGeom__mjGEOM_TRIANGLE: mjtGeom_ = 108;
pub const mjtGeom__mjGEOM_NONE: mjtGeom_ = 1001;
pub type mjtGeom_ = ::std::os::raw::c_uint;
pub use self::mjtGeom_ as mjtGeom;
pub const mjtCamLight__mjCAMLIGHT_FIXED: mjtCamLight_ = 0;
pub const mjtCamLight__mjCAMLIGHT_TRACK: mjtCamLight_ = 1;
pub const mjtCamLight__mjCAMLIGHT_TRACKCOM: mjtCamLight_ = 2;
pub const mjtCamLight__mjCAMLIGHT_TARGETBODY: mjtCamLight_ = 3;
pub const mjtCamLight__mjCAMLIGHT_TARGETBODYCOM: mjtCamLight_ = 4;
pub type mjtCamLight_ = ::std::os::raw::c_uint;
pub use self::mjtCamLight_ as mjtCamLight;
pub const mjtLightType__mjLIGHT_SPOT: mjtLightType_ = 0;
pub const mjtLightType__mjLIGHT_DIRECTIONAL: mjtLightType_ = 1;
pub const mjtLightType__mjLIGHT_POINT: mjtLightType_ = 2;
pub const mjtLightType__mjLIGHT_IMAGE: mjtLightType_ = 3;
pub type mjtLightType_ = ::std::os::raw::c_uint;
pub use self::mjtLightType_ as mjtLightType;
pub const mjtTexture__mjTEXTURE_2D: mjtTexture_ = 0;
pub const mjtTexture__mjTEXTURE_CUBE: mjtTexture_ = 1;
pub const mjtTexture__mjTEXTURE_SKYBOX: mjtTexture_ = 2;
pub type mjtTexture_ = ::std::os::raw::c_uint;
pub use self::mjtTexture_ as mjtTexture;
pub const mjtTextureRole__mjTEXROLE_USER: mjtTextureRole_ = 0;
pub const mjtTextureRole__mjTEXROLE_RGB: mjtTextureRole_ = 1;
pub const mjtTextureRole__mjTEXROLE_OCCLUSION: mjtTextureRole_ = 2;
pub const mjtTextureRole__mjTEXROLE_ROUGHNESS: mjtTextureRole_ = 3;
pub const mjtTextureRole__mjTEXROLE_METALLIC: mjtTextureRole_ = 4;
pub const mjtTextureRole__mjTEXROLE_NORMAL: mjtTextureRole_ = 5;
pub const mjtTextureRole__mjTEXROLE_OPACITY: mjtTextureRole_ = 6;
pub const mjtTextureRole__mjTEXROLE_EMISSIVE: mjtTextureRole_ = 7;
pub const mjtTextureRole__mjTEXROLE_RGBA: mjtTextureRole_ = 8;
pub const mjtTextureRole__mjTEXROLE_ORM: mjtTextureRole_ = 9;
pub const mjtTextureRole__mjNTEXROLE: mjtTextureRole_ = 10;
pub type mjtTextureRole_ = ::std::os::raw::c_uint;
pub use self::mjtTextureRole_ as mjtTextureRole;
pub const mjtColorSpace__mjCOLORSPACE_AUTO: mjtColorSpace_ = 0;
pub const mjtColorSpace__mjCOLORSPACE_LINEAR: mjtColorSpace_ = 1;
pub const mjtColorSpace__mjCOLORSPACE_SRGB: mjtColorSpace_ = 2;
pub type mjtColorSpace_ = ::std::os::raw::c_uint;
pub use self::mjtColorSpace_ as mjtColorSpace;
pub const mjtIntegrator__mjINT_EULER: mjtIntegrator_ = 0;
pub const mjtIntegrator__mjINT_RK4: mjtIntegrator_ = 1;
pub const mjtIntegrator__mjINT_IMPLICIT: mjtIntegrator_ = 2;
pub const mjtIntegrator__mjINT_IMPLICITFAST: mjtIntegrator_ = 3;
pub type mjtIntegrator_ = ::std::os::raw::c_uint;
pub use self::mjtIntegrator_ as mjtIntegrator;
pub const mjtCone__mjCONE_PYRAMIDAL: mjtCone_ = 0;
pub const mjtCone__mjCONE_ELLIPTIC: mjtCone_ = 1;
pub type mjtCone_ = ::std::os::raw::c_uint;
pub use self::mjtCone_ as mjtCone;
pub const mjtJacobian__mjJAC_DENSE: mjtJacobian_ = 0;
pub const mjtJacobian__mjJAC_SPARSE: mjtJacobian_ = 1;
pub const mjtJacobian__mjJAC_AUTO: mjtJacobian_ = 2;
pub type mjtJacobian_ = ::std::os::raw::c_uint;
pub use self::mjtJacobian_ as mjtJacobian;
pub const mjtSolver__mjSOL_PGS: mjtSolver_ = 0;
pub const mjtSolver__mjSOL_CG: mjtSolver_ = 1;
pub const mjtSolver__mjSOL_NEWTON: mjtSolver_ = 2;
pub type mjtSolver_ = ::std::os::raw::c_uint;
pub use self::mjtSolver_ as mjtSolver;
pub const mjtEq__mjEQ_CONNECT: mjtEq_ = 0;
pub const mjtEq__mjEQ_WELD: mjtEq_ = 1;
pub const mjtEq__mjEQ_JOINT: mjtEq_ = 2;
pub const mjtEq__mjEQ_TENDON: mjtEq_ = 3;
pub const mjtEq__mjEQ_FLEX: mjtEq_ = 4;
pub const mjtEq__mjEQ_DISTANCE: mjtEq_ = 5;
pub type mjtEq_ = ::std::os::raw::c_uint;
pub use self::mjtEq_ as mjtEq;
pub const mjtWrap__mjWRAP_NONE: mjtWrap_ = 0;
pub const mjtWrap__mjWRAP_JOINT: mjtWrap_ = 1;
pub const mjtWrap__mjWRAP_PULLEY: mjtWrap_ = 2;
pub const mjtWrap__mjWRAP_SITE: mjtWrap_ = 3;
pub const mjtWrap__mjWRAP_SPHERE: mjtWrap_ = 4;
pub const mjtWrap__mjWRAP_CYLINDER: mjtWrap_ = 5;
pub type mjtWrap_ = ::std::os::raw::c_uint;
pub use self::mjtWrap_ as mjtWrap;
pub const mjtTrn__mjTRN_JOINT: mjtTrn_ = 0;
pub const mjtTrn__mjTRN_JOINTINPARENT: mjtTrn_ = 1;
pub const mjtTrn__mjTRN_SLIDERCRANK: mjtTrn_ = 2;
pub const mjtTrn__mjTRN_TENDON: mjtTrn_ = 3;
pub const mjtTrn__mjTRN_SITE: mjtTrn_ = 4;
pub const mjtTrn__mjTRN_BODY: mjtTrn_ = 5;
pub const mjtTrn__mjTRN_UNDEFINED: mjtTrn_ = 1000;
pub type mjtTrn_ = ::std::os::raw::c_uint;
pub use self::mjtTrn_ as mjtTrn;
pub const mjtDyn__mjDYN_NONE: mjtDyn_ = 0;
pub const mjtDyn__mjDYN_INTEGRATOR: mjtDyn_ = 1;
pub const mjtDyn__mjDYN_FILTER: mjtDyn_ = 2;
pub const mjtDyn__mjDYN_FILTEREXACT: mjtDyn_ = 3;
pub const mjtDyn__mjDYN_MUSCLE: mjtDyn_ = 4;
pub const mjtDyn__mjDYN_USER: mjtDyn_ = 5;
pub type mjtDyn_ = ::std::os::raw::c_uint;
pub use self::mjtDyn_ as mjtDyn;
pub const mjtGain__mjGAIN_FIXED: mjtGain_ = 0;
pub const mjtGain__mjGAIN_AFFINE: mjtGain_ = 1;
pub const mjtGain__mjGAIN_MUSCLE: mjtGain_ = 2;
pub const mjtGain__mjGAIN_USER: mjtGain_ = 3;
pub type mjtGain_ = ::std::os::raw::c_uint;
pub use self::mjtGain_ as mjtGain;
pub const mjtBias__mjBIAS_NONE: mjtBias_ = 0;
pub const mjtBias__mjBIAS_AFFINE: mjtBias_ = 1;
pub const mjtBias__mjBIAS_MUSCLE: mjtBias_ = 2;
pub const mjtBias__mjBIAS_USER: mjtBias_ = 3;
pub type mjtBias_ = ::std::os::raw::c_uint;
pub use self::mjtBias_ as mjtBias;
pub const mjtObj__mjOBJ_UNKNOWN: mjtObj_ = 0;
pub const mjtObj__mjOBJ_BODY: mjtObj_ = 1;
pub const mjtObj__mjOBJ_XBODY: mjtObj_ = 2;
pub const mjtObj__mjOBJ_JOINT: mjtObj_ = 3;
pub const mjtObj__mjOBJ_DOF: mjtObj_ = 4;
pub const mjtObj__mjOBJ_GEOM: mjtObj_ = 5;
pub const mjtObj__mjOBJ_SITE: mjtObj_ = 6;
pub const mjtObj__mjOBJ_CAMERA: mjtObj_ = 7;
pub const mjtObj__mjOBJ_LIGHT: mjtObj_ = 8;
pub const mjtObj__mjOBJ_FLEX: mjtObj_ = 9;
pub const mjtObj__mjOBJ_MESH: mjtObj_ = 10;
pub const mjtObj__mjOBJ_SKIN: mjtObj_ = 11;
pub const mjtObj__mjOBJ_HFIELD: mjtObj_ = 12;
pub const mjtObj__mjOBJ_TEXTURE: mjtObj_ = 13;
pub const mjtObj__mjOBJ_MATERIAL: mjtObj_ = 14;
pub const mjtObj__mjOBJ_PAIR: mjtObj_ = 15;
pub const mjtObj__mjOBJ_EXCLUDE: mjtObj_ = 16;
pub const mjtObj__mjOBJ_EQUALITY: mjtObj_ = 17;
pub const mjtObj__mjOBJ_TENDON: mjtObj_ = 18;
pub const mjtObj__mjOBJ_ACTUATOR: mjtObj_ = 19;
pub const mjtObj__mjOBJ_SENSOR: mjtObj_ = 20;
pub const mjtObj__mjOBJ_NUMERIC: mjtObj_ = 21;
pub const mjtObj__mjOBJ_TEXT: mjtObj_ = 22;
pub const mjtObj__mjOBJ_TUPLE: mjtObj_ = 23;
pub const mjtObj__mjOBJ_KEY: mjtObj_ = 24;
pub const mjtObj__mjOBJ_PLUGIN: mjtObj_ = 25;
pub const mjtObj__mjNOBJECT: mjtObj_ = 26;
pub const mjtObj__mjOBJ_FRAME: mjtObj_ = 100;
pub const mjtObj__mjOBJ_DEFAULT: mjtObj_ = 101;
pub const mjtObj__mjOBJ_MODEL: mjtObj_ = 102;
pub type mjtObj_ = ::std::os::raw::c_uint;
pub use self::mjtObj_ as mjtObj;
pub const mjtConstraint__mjCNSTR_EQUALITY: mjtConstraint_ = 0;
pub const mjtConstraint__mjCNSTR_FRICTION_DOF: mjtConstraint_ = 1;
pub const mjtConstraint__mjCNSTR_FRICTION_TENDON: mjtConstraint_ = 2;
pub const mjtConstraint__mjCNSTR_LIMIT_JOINT: mjtConstraint_ = 3;
pub const mjtConstraint__mjCNSTR_LIMIT_TENDON: mjtConstraint_ = 4;
pub const mjtConstraint__mjCNSTR_CONTACT_FRICTIONLESS: mjtConstraint_ = 5;
pub const mjtConstraint__mjCNSTR_CONTACT_PYRAMIDAL: mjtConstraint_ = 6;
pub const mjtConstraint__mjCNSTR_CONTACT_ELLIPTIC: mjtConstraint_ = 7;
pub type mjtConstraint_ = ::std::os::raw::c_uint;
pub use self::mjtConstraint_ as mjtConstraint;
pub const mjtConstraintState__mjCNSTRSTATE_SATISFIED: mjtConstraintState_ = 0;
pub const mjtConstraintState__mjCNSTRSTATE_QUADRATIC: mjtConstraintState_ = 1;
pub const mjtConstraintState__mjCNSTRSTATE_LINEARNEG: mjtConstraintState_ = 2;
pub const mjtConstraintState__mjCNSTRSTATE_LINEARPOS: mjtConstraintState_ = 3;
pub const mjtConstraintState__mjCNSTRSTATE_CONE: mjtConstraintState_ = 4;
pub type mjtConstraintState_ = ::std::os::raw::c_uint;
pub use self::mjtConstraintState_ as mjtConstraintState;
pub const mjtSensor__mjSENS_TOUCH: mjtSensor_ = 0;
pub const mjtSensor__mjSENS_ACCELEROMETER: mjtSensor_ = 1;
pub const mjtSensor__mjSENS_VELOCIMETER: mjtSensor_ = 2;
pub const mjtSensor__mjSENS_GYRO: mjtSensor_ = 3;
pub const mjtSensor__mjSENS_FORCE: mjtSensor_ = 4;
pub const mjtSensor__mjSENS_TORQUE: mjtSensor_ = 5;
pub const mjtSensor__mjSENS_MAGNETOMETER: mjtSensor_ = 6;
pub const mjtSensor__mjSENS_RANGEFINDER: mjtSensor_ = 7;
pub const mjtSensor__mjSENS_CAMPROJECTION: mjtSensor_ = 8;
pub const mjtSensor__mjSENS_JOINTPOS: mjtSensor_ = 9;
pub const mjtSensor__mjSENS_JOINTVEL: mjtSensor_ = 10;
pub const mjtSensor__mjSENS_TENDONPOS: mjtSensor_ = 11;
pub const mjtSensor__mjSENS_TENDONVEL: mjtSensor_ = 12;
pub const mjtSensor__mjSENS_ACTUATORPOS: mjtSensor_ = 13;
pub const mjtSensor__mjSENS_ACTUATORVEL: mjtSensor_ = 14;
pub const mjtSensor__mjSENS_ACTUATORFRC: mjtSensor_ = 15;
pub const mjtSensor__mjSENS_JOINTACTFRC: mjtSensor_ = 16;
pub const mjtSensor__mjSENS_TENDONACTFRC: mjtSensor_ = 17;
pub const mjtSensor__mjSENS_BALLQUAT: mjtSensor_ = 18;
pub const mjtSensor__mjSENS_BALLANGVEL: mjtSensor_ = 19;
pub const mjtSensor__mjSENS_JOINTLIMITPOS: mjtSensor_ = 20;
pub const mjtSensor__mjSENS_JOINTLIMITVEL: mjtSensor_ = 21;
pub const mjtSensor__mjSENS_JOINTLIMITFRC: mjtSensor_ = 22;
pub const mjtSensor__mjSENS_TENDONLIMITPOS: mjtSensor_ = 23;
pub const mjtSensor__mjSENS_TENDONLIMITVEL: mjtSensor_ = 24;
pub const mjtSensor__mjSENS_TENDONLIMITFRC: mjtSensor_ = 25;
pub const mjtSensor__mjSENS_FRAMEPOS: mjtSensor_ = 26;
pub const mjtSensor__mjSENS_FRAMEQUAT: mjtSensor_ = 27;
pub const mjtSensor__mjSENS_FRAMEXAXIS: mjtSensor_ = 28;
pub const mjtSensor__mjSENS_FRAMEYAXIS: mjtSensor_ = 29;
pub const mjtSensor__mjSENS_FRAMEZAXIS: mjtSensor_ = 30;
pub const mjtSensor__mjSENS_FRAMELINVEL: mjtSensor_ = 31;
pub const mjtSensor__mjSENS_FRAMEANGVEL: mjtSensor_ = 32;
pub const mjtSensor__mjSENS_FRAMELINACC: mjtSensor_ = 33;
pub const mjtSensor__mjSENS_FRAMEANGACC: mjtSensor_ = 34;
pub const mjtSensor__mjSENS_SUBTREECOM: mjtSensor_ = 35;
pub const mjtSensor__mjSENS_SUBTREELINVEL: mjtSensor_ = 36;
pub const mjtSensor__mjSENS_SUBTREEANGMOM: mjtSensor_ = 37;
pub const mjtSensor__mjSENS_GEOMDIST: mjtSensor_ = 38;
pub const mjtSensor__mjSENS_GEOMNORMAL: mjtSensor_ = 39;
pub const mjtSensor__mjSENS_GEOMFROMTO: mjtSensor_ = 40;
pub const mjtSensor__mjSENS_E_POTENTIAL: mjtSensor_ = 41;
pub const mjtSensor__mjSENS_E_KINETIC: mjtSensor_ = 42;
pub const mjtSensor__mjSENS_CLOCK: mjtSensor_ = 43;
pub const mjtSensor__mjSENS_PLUGIN: mjtSensor_ = 44;
pub const mjtSensor__mjSENS_USER: mjtSensor_ = 45;
pub type mjtSensor_ = ::std::os::raw::c_uint;
pub use self::mjtSensor_ as mjtSensor;
pub const mjtStage__mjSTAGE_NONE: mjtStage_ = 0;
pub const mjtStage__mjSTAGE_POS: mjtStage_ = 1;
pub const mjtStage__mjSTAGE_VEL: mjtStage_ = 2;
pub const mjtStage__mjSTAGE_ACC: mjtStage_ = 3;
pub type mjtStage_ = ::std::os::raw::c_uint;
pub use self::mjtStage_ as mjtStage;
pub const mjtDataType__mjDATATYPE_REAL: mjtDataType_ = 0;
pub const mjtDataType__mjDATATYPE_POSITIVE: mjtDataType_ = 1;
pub const mjtDataType__mjDATATYPE_AXIS: mjtDataType_ = 2;
pub const mjtDataType__mjDATATYPE_QUATERNION: mjtDataType_ = 3;
pub type mjtDataType_ = ::std::os::raw::c_uint;
pub use self::mjtDataType_ as mjtDataType;
pub const mjtSameFrame__mjSAMEFRAME_NONE: mjtSameFrame_ = 0;
pub const mjtSameFrame__mjSAMEFRAME_BODY: mjtSameFrame_ = 1;
pub const mjtSameFrame__mjSAMEFRAME_INERTIA: mjtSameFrame_ = 2;
pub const mjtSameFrame__mjSAMEFRAME_BODYROT: mjtSameFrame_ = 3;
pub const mjtSameFrame__mjSAMEFRAME_INERTIAROT: mjtSameFrame_ = 4;
pub type mjtSameFrame_ = ::std::os::raw::c_uint;
pub use self::mjtSameFrame_ as mjtSameFrame;
pub const mjtLRMode__mjLRMODE_NONE: mjtLRMode_ = 0;
pub const mjtLRMode__mjLRMODE_MUSCLE: mjtLRMode_ = 1;
pub const mjtLRMode__mjLRMODE_MUSCLEUSER: mjtLRMode_ = 2;
pub const mjtLRMode__mjLRMODE_ALL: mjtLRMode_ = 3;
pub type mjtLRMode_ = ::std::os::raw::c_uint;
pub use self::mjtLRMode_ as mjtLRMode;
pub const mjtFlexSelf__mjFLEXSELF_NONE: mjtFlexSelf_ = 0;
pub const mjtFlexSelf__mjFLEXSELF_NARROW: mjtFlexSelf_ = 1;
pub const mjtFlexSelf__mjFLEXSELF_BVH: mjtFlexSelf_ = 2;
pub const mjtFlexSelf__mjFLEXSELF_SAP: mjtFlexSelf_ = 3;
pub const mjtFlexSelf__mjFLEXSELF_AUTO: mjtFlexSelf_ = 4;
pub type mjtFlexSelf_ = ::std::os::raw::c_uint;
pub use self::mjtFlexSelf_ as mjtFlexSelf;
pub const mjtSDFType__mjSDFTYPE_SINGLE: mjtSDFType_ = 0;
pub const mjtSDFType__mjSDFTYPE_INTERSECTION: mjtSDFType_ = 1;
pub const mjtSDFType__mjSDFTYPE_MIDSURFACE: mjtSDFType_ = 2;
pub const mjtSDFType__mjSDFTYPE_COLLISION: mjtSDFType_ = 3;
pub type mjtSDFType_ = ::std::os::raw::c_uint;
pub use self::mjtSDFType_ as mjtSDFType;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjLROpt_ {
    pub mode: ::std::os::raw::c_int,
    pub useexisting: ::std::os::raw::c_int,
    pub uselimit: ::std::os::raw::c_int,
    pub accel: mjtNum,
    pub maxforce: mjtNum,
    pub timeconst: mjtNum,
    pub timestep: mjtNum,
    pub inttotal: mjtNum,
    pub interval: mjtNum,
    pub tolrange: mjtNum,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjLROpt_"][::std::mem::size_of::<mjLROpt_>() - 72usize];
    ["Alignment of mjLROpt_"][::std::mem::align_of::<mjLROpt_>() - 8usize];
    ["Offset of field: mjLROpt_::mode"][::std::mem::offset_of!(mjLROpt_, mode) - 0usize];
    ["Offset of field: mjLROpt_::useexisting"]
        [::std::mem::offset_of!(mjLROpt_, useexisting) - 4usize];
    ["Offset of field: mjLROpt_::uselimit"][::std::mem::offset_of!(mjLROpt_, uselimit) - 8usize];
    ["Offset of field: mjLROpt_::accel"][::std::mem::offset_of!(mjLROpt_, accel) - 16usize];
    ["Offset of field: mjLROpt_::maxforce"][::std::mem::offset_of!(mjLROpt_, maxforce) - 24usize];
    ["Offset of field: mjLROpt_::timeconst"][::std::mem::offset_of!(mjLROpt_, timeconst) - 32usize];
    ["Offset of field: mjLROpt_::timestep"][::std::mem::offset_of!(mjLROpt_, timestep) - 40usize];
    ["Offset of field: mjLROpt_::inttotal"][::std::mem::offset_of!(mjLROpt_, inttotal) - 48usize];
    ["Offset of field: mjLROpt_::interval"][::std::mem::offset_of!(mjLROpt_, interval) - 56usize];
    ["Offset of field: mjLROpt_::tolrange"][::std::mem::offset_of!(mjLROpt_, tolrange) - 64usize];
};
pub type mjLROpt = mjLROpt_;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjVFS_ {
    pub impl_: *mut ::std::os::raw::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjVFS_"][::std::mem::size_of::<mjVFS_>() - 8usize];
    ["Alignment of mjVFS_"][::std::mem::align_of::<mjVFS_>() - 8usize];
    ["Offset of field: mjVFS_::impl_"][::std::mem::offset_of!(mjVFS_, impl_) - 0usize];
};
pub type mjVFS = mjVFS_;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjOption_ {
    pub timestep: mjtNum,
    pub apirate: mjtNum,
    pub impratio: mjtNum,
    pub tolerance: mjtNum,
    pub ls_tolerance: mjtNum,
    pub noslip_tolerance: mjtNum,
    pub ccd_tolerance: mjtNum,
    pub gravity: [mjtNum; 3usize],
    pub wind: [mjtNum; 3usize],
    pub magnetic: [mjtNum; 3usize],
    pub density: mjtNum,
    pub viscosity: mjtNum,
    pub o_margin: mjtNum,
    pub o_solref: [mjtNum; 2usize],
    pub o_solimp: [mjtNum; 5usize],
    pub o_friction: [mjtNum; 5usize],
    pub integrator: ::std::os::raw::c_int,
    pub cone: ::std::os::raw::c_int,
    pub jacobian: ::std::os::raw::c_int,
    pub solver: ::std::os::raw::c_int,
    pub iterations: ::std::os::raw::c_int,
    pub ls_iterations: ::std::os::raw::c_int,
    pub noslip_iterations: ::std::os::raw::c_int,
    pub ccd_iterations: ::std::os::raw::c_int,
    pub disableflags: ::std::os::raw::c_int,
    pub enableflags: ::std::os::raw::c_int,
    pub disableactuator: ::std::os::raw::c_int,
    pub sdf_initpoints: ::std::os::raw::c_int,
    pub sdf_iterations: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjOption_"][::std::mem::size_of::<mjOption_>() - 304usize];
    ["Alignment of mjOption_"][::std::mem::align_of::<mjOption_>() - 8usize];
    ["Offset of field: mjOption_::timestep"][::std::mem::offset_of!(mjOption_, timestep) - 0usize];
    ["Offset of field: mjOption_::apirate"][::std::mem::offset_of!(mjOption_, apirate) - 8usize];
    ["Offset of field: mjOption_::impratio"][::std::mem::offset_of!(mjOption_, impratio) - 16usize];
    ["Offset of field: mjOption_::tolerance"]
        [::std::mem::offset_of!(mjOption_, tolerance) - 24usize];
    ["Offset of field: mjOption_::ls_tolerance"]
        [::std::mem::offset_of!(mjOption_, ls_tolerance) - 32usize];
    ["Offset of field: mjOption_::noslip_tolerance"]
        [::std::mem::offset_of!(mjOption_, noslip_tolerance) - 40usize];
    ["Offset of field: mjOption_::ccd_tolerance"]
        [::std::mem::offset_of!(mjOption_, ccd_tolerance) - 48usize];
    ["Offset of field: mjOption_::gravity"][::std::mem::offset_of!(mjOption_, gravity) - 56usize];
    ["Offset of field: mjOption_::wind"][::std::mem::offset_of!(mjOption_, wind) - 80usize];
    ["Offset of field: mjOption_::magnetic"]
        [::std::mem::offset_of!(mjOption_, magnetic) - 104usize];
    ["Offset of field: mjOption_::density"][::std::mem::offset_of!(mjOption_, density) - 128usize];
    ["Offset of field: mjOption_::viscosity"]
        [::std::mem::offset_of!(mjOption_, viscosity) - 136usize];
    ["Offset of field: mjOption_::o_margin"]
        [::std::mem::offset_of!(mjOption_, o_margin) - 144usize];
    ["Offset of field: mjOption_::o_solref"]
        [::std::mem::offset_of!(mjOption_, o_solref) - 152usize];
    ["Offset of field: mjOption_::o_solimp"]
        [::std::mem::offset_of!(mjOption_, o_solimp) - 168usize];
    ["Offset of field: mjOption_::o_friction"]
        [::std::mem::offset_of!(mjOption_, o_friction) - 208usize];
    ["Offset of field: mjOption_::integrator"]
        [::std::mem::offset_of!(mjOption_, integrator) - 248usize];
    ["Offset of field: mjOption_::cone"][::std::mem::offset_of!(mjOption_, cone) - 252usize];
    ["Offset of field: mjOption_::jacobian"]
        [::std::mem::offset_of!(mjOption_, jacobian) - 256usize];
    ["Offset of field: mjOption_::solver"][::std::mem::offset_of!(mjOption_, solver) - 260usize];
    ["Offset of field: mjOption_::iterations"]
        [::std::mem::offset_of!(mjOption_, iterations) - 264usize];
    ["Offset of field: mjOption_::ls_iterations"]
        [::std::mem::offset_of!(mjOption_, ls_iterations) - 268usize];
    ["Offset of field: mjOption_::noslip_iterations"]
        [::std::mem::offset_of!(mjOption_, noslip_iterations) - 272usize];
    ["Offset of field: mjOption_::ccd_iterations"]
        [::std::mem::offset_of!(mjOption_, ccd_iterations) - 276usize];
    ["Offset of field: mjOption_::disableflags"]
        [::std::mem::offset_of!(mjOption_, disableflags) - 280usize];
    ["Offset of field: mjOption_::enableflags"]
        [::std::mem::offset_of!(mjOption_, enableflags) - 284usize];
    ["Offset of field: mjOption_::disableactuator"]
        [::std::mem::offset_of!(mjOption_, disableactuator) - 288usize];
    ["Offset of field: mjOption_::sdf_initpoints"]
        [::std::mem::offset_of!(mjOption_, sdf_initpoints) - 292usize];
    ["Offset of field: mjOption_::sdf_iterations"]
        [::std::mem::offset_of!(mjOption_, sdf_iterations) - 296usize];
};
pub type mjOption = mjOption_;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjVisual_ {
    pub global: mjVisual___bindgen_ty_1,
    pub quality: mjVisual___bindgen_ty_2,
    pub headlight: mjVisual___bindgen_ty_3,
    pub map: mjVisual___bindgen_ty_4,
    pub scale: mjVisual___bindgen_ty_5,
    pub rgba: mjVisual___bindgen_ty_6,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjVisual___bindgen_ty_1 {
    pub cameraid: ::std::os::raw::c_int,
    pub orthographic: ::std::os::raw::c_int,
    pub fovy: f32,
    pub ipd: f32,
    pub azimuth: f32,
    pub elevation: f32,
    pub linewidth: f32,
    pub glow: f32,
    pub realtime: f32,
    pub offwidth: ::std::os::raw::c_int,
    pub offheight: ::std::os::raw::c_int,
    pub ellipsoidinertia: ::std::os::raw::c_int,
    pub bvactive: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjVisual___bindgen_ty_1"][::std::mem::size_of::<mjVisual___bindgen_ty_1>() - 52usize];
    ["Alignment of mjVisual___bindgen_ty_1"]
        [::std::mem::align_of::<mjVisual___bindgen_ty_1>() - 4usize];
    ["Offset of field: mjVisual___bindgen_ty_1::cameraid"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_1, cameraid) - 0usize];
    ["Offset of field: mjVisual___bindgen_ty_1::orthographic"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_1, orthographic) - 4usize];
    ["Offset of field: mjVisual___bindgen_ty_1::fovy"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_1, fovy) - 8usize];
    ["Offset of field: mjVisual___bindgen_ty_1::ipd"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_1, ipd) - 12usize];
    ["Offset of field: mjVisual___bindgen_ty_1::azimuth"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_1, azimuth) - 16usize];
    ["Offset of field: mjVisual___bindgen_ty_1::elevation"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_1, elevation) - 20usize];
    ["Offset of field: mjVisual___bindgen_ty_1::linewidth"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_1, linewidth) - 24usize];
    ["Offset of field: mjVisual___bindgen_ty_1::glow"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_1, glow) - 28usize];
    ["Offset of field: mjVisual___bindgen_ty_1::realtime"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_1, realtime) - 32usize];
    ["Offset of field: mjVisual___bindgen_ty_1::offwidth"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_1, offwidth) - 36usize];
    ["Offset of field: mjVisual___bindgen_ty_1::offheight"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_1, offheight) - 40usize];
    ["Offset of field: mjVisual___bindgen_ty_1::ellipsoidinertia"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_1, ellipsoidinertia) - 44usize];
    ["Offset of field: mjVisual___bindgen_ty_1::bvactive"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_1, bvactive) - 48usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjVisual___bindgen_ty_2 {
    pub shadowsize: ::std::os::raw::c_int,
    pub offsamples: ::std::os::raw::c_int,
    pub numslices: ::std::os::raw::c_int,
    pub numstacks: ::std::os::raw::c_int,
    pub numquads: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjVisual___bindgen_ty_2"][::std::mem::size_of::<mjVisual___bindgen_ty_2>() - 20usize];
    ["Alignment of mjVisual___bindgen_ty_2"]
        [::std::mem::align_of::<mjVisual___bindgen_ty_2>() - 4usize];
    ["Offset of field: mjVisual___bindgen_ty_2::shadowsize"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_2, shadowsize) - 0usize];
    ["Offset of field: mjVisual___bindgen_ty_2::offsamples"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_2, offsamples) - 4usize];
    ["Offset of field: mjVisual___bindgen_ty_2::numslices"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_2, numslices) - 8usize];
    ["Offset of field: mjVisual___bindgen_ty_2::numstacks"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_2, numstacks) - 12usize];
    ["Offset of field: mjVisual___bindgen_ty_2::numquads"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_2, numquads) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjVisual___bindgen_ty_3 {
    pub ambient: [f32; 3usize],
    pub diffuse: [f32; 3usize],
    pub specular: [f32; 3usize],
    pub active: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjVisual___bindgen_ty_3"][::std::mem::size_of::<mjVisual___bindgen_ty_3>() - 40usize];
    ["Alignment of mjVisual___bindgen_ty_3"]
        [::std::mem::align_of::<mjVisual___bindgen_ty_3>() - 4usize];
    ["Offset of field: mjVisual___bindgen_ty_3::ambient"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_3, ambient) - 0usize];
    ["Offset of field: mjVisual___bindgen_ty_3::diffuse"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_3, diffuse) - 12usize];
    ["Offset of field: mjVisual___bindgen_ty_3::specular"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_3, specular) - 24usize];
    ["Offset of field: mjVisual___bindgen_ty_3::active"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_3, active) - 36usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjVisual___bindgen_ty_4 {
    pub stiffness: f32,
    pub stiffnessrot: f32,
    pub force: f32,
    pub torque: f32,
    pub alpha: f32,
    pub fogstart: f32,
    pub fogend: f32,
    pub znear: f32,
    pub zfar: f32,
    pub haze: f32,
    pub shadowclip: f32,
    pub shadowscale: f32,
    pub actuatortendon: f32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjVisual___bindgen_ty_4"][::std::mem::size_of::<mjVisual___bindgen_ty_4>() - 52usize];
    ["Alignment of mjVisual___bindgen_ty_4"]
        [::std::mem::align_of::<mjVisual___bindgen_ty_4>() - 4usize];
    ["Offset of field: mjVisual___bindgen_ty_4::stiffness"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_4, stiffness) - 0usize];
    ["Offset of field: mjVisual___bindgen_ty_4::stiffnessrot"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_4, stiffnessrot) - 4usize];
    ["Offset of field: mjVisual___bindgen_ty_4::force"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_4, force) - 8usize];
    ["Offset of field: mjVisual___bindgen_ty_4::torque"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_4, torque) - 12usize];
    ["Offset of field: mjVisual___bindgen_ty_4::alpha"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_4, alpha) - 16usize];
    ["Offset of field: mjVisual___bindgen_ty_4::fogstart"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_4, fogstart) - 20usize];
    ["Offset of field: mjVisual___bindgen_ty_4::fogend"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_4, fogend) - 24usize];
    ["Offset of field: mjVisual___bindgen_ty_4::znear"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_4, znear) - 28usize];
    ["Offset of field: mjVisual___bindgen_ty_4::zfar"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_4, zfar) - 32usize];
    ["Offset of field: mjVisual___bindgen_ty_4::haze"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_4, haze) - 36usize];
    ["Offset of field: mjVisual___bindgen_ty_4::shadowclip"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_4, shadowclip) - 40usize];
    ["Offset of field: mjVisual___bindgen_ty_4::shadowscale"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_4, shadowscale) - 44usize];
    ["Offset of field: mjVisual___bindgen_ty_4::actuatortendon"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_4, actuatortendon) - 48usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjVisual___bindgen_ty_5 {
    pub forcewidth: f32,
    pub contactwidth: f32,
    pub contactheight: f32,
    pub connect: f32,
    pub com: f32,
    pub camera: f32,
    pub light: f32,
    pub selectpoint: f32,
    pub jointlength: f32,
    pub jointwidth: f32,
    pub actuatorlength: f32,
    pub actuatorwidth: f32,
    pub framelength: f32,
    pub framewidth: f32,
    pub constraint: f32,
    pub slidercrank: f32,
    pub frustum: f32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjVisual___bindgen_ty_5"][::std::mem::size_of::<mjVisual___bindgen_ty_5>() - 68usize];
    ["Alignment of mjVisual___bindgen_ty_5"]
        [::std::mem::align_of::<mjVisual___bindgen_ty_5>() - 4usize];
    ["Offset of field: mjVisual___bindgen_ty_5::forcewidth"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_5, forcewidth) - 0usize];
    ["Offset of field: mjVisual___bindgen_ty_5::contactwidth"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_5, contactwidth) - 4usize];
    ["Offset of field: mjVisual___bindgen_ty_5::contactheight"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_5, contactheight) - 8usize];
    ["Offset of field: mjVisual___bindgen_ty_5::connect"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_5, connect) - 12usize];
    ["Offset of field: mjVisual___bindgen_ty_5::com"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_5, com) - 16usize];
    ["Offset of field: mjVisual___bindgen_ty_5::camera"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_5, camera) - 20usize];
    ["Offset of field: mjVisual___bindgen_ty_5::light"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_5, light) - 24usize];
    ["Offset of field: mjVisual___bindgen_ty_5::selectpoint"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_5, selectpoint) - 28usize];
    ["Offset of field: mjVisual___bindgen_ty_5::jointlength"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_5, jointlength) - 32usize];
    ["Offset of field: mjVisual___bindgen_ty_5::jointwidth"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_5, jointwidth) - 36usize];
    ["Offset of field: mjVisual___bindgen_ty_5::actuatorlength"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_5, actuatorlength) - 40usize];
    ["Offset of field: mjVisual___bindgen_ty_5::actuatorwidth"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_5, actuatorwidth) - 44usize];
    ["Offset of field: mjVisual___bindgen_ty_5::framelength"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_5, framelength) - 48usize];
    ["Offset of field: mjVisual___bindgen_ty_5::framewidth"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_5, framewidth) - 52usize];
    ["Offset of field: mjVisual___bindgen_ty_5::constraint"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_5, constraint) - 56usize];
    ["Offset of field: mjVisual___bindgen_ty_5::slidercrank"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_5, slidercrank) - 60usize];
    ["Offset of field: mjVisual___bindgen_ty_5::frustum"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_5, frustum) - 64usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjVisual___bindgen_ty_6 {
    pub fog: [f32; 4usize],
    pub haze: [f32; 4usize],
    pub force: [f32; 4usize],
    pub inertia: [f32; 4usize],
    pub joint: [f32; 4usize],
    pub actuator: [f32; 4usize],
    pub actuatornegative: [f32; 4usize],
    pub actuatorpositive: [f32; 4usize],
    pub com: [f32; 4usize],
    pub camera: [f32; 4usize],
    pub light: [f32; 4usize],
    pub selectpoint: [f32; 4usize],
    pub connect: [f32; 4usize],
    pub contactpoint: [f32; 4usize],
    pub contactforce: [f32; 4usize],
    pub contactfriction: [f32; 4usize],
    pub contacttorque: [f32; 4usize],
    pub contactgap: [f32; 4usize],
    pub rangefinder: [f32; 4usize],
    pub constraint: [f32; 4usize],
    pub slidercrank: [f32; 4usize],
    pub crankbroken: [f32; 4usize],
    pub frustum: [f32; 4usize],
    pub bv: [f32; 4usize],
    pub bvactive: [f32; 4usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjVisual___bindgen_ty_6"]
        [::std::mem::size_of::<mjVisual___bindgen_ty_6>() - 400usize];
    ["Alignment of mjVisual___bindgen_ty_6"]
        [::std::mem::align_of::<mjVisual___bindgen_ty_6>() - 4usize];
    ["Offset of field: mjVisual___bindgen_ty_6::fog"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, fog) - 0usize];
    ["Offset of field: mjVisual___bindgen_ty_6::haze"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, haze) - 16usize];
    ["Offset of field: mjVisual___bindgen_ty_6::force"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, force) - 32usize];
    ["Offset of field: mjVisual___bindgen_ty_6::inertia"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, inertia) - 48usize];
    ["Offset of field: mjVisual___bindgen_ty_6::joint"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, joint) - 64usize];
    ["Offset of field: mjVisual___bindgen_ty_6::actuator"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, actuator) - 80usize];
    ["Offset of field: mjVisual___bindgen_ty_6::actuatornegative"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, actuatornegative) - 96usize];
    ["Offset of field: mjVisual___bindgen_ty_6::actuatorpositive"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, actuatorpositive) - 112usize];
    ["Offset of field: mjVisual___bindgen_ty_6::com"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, com) - 128usize];
    ["Offset of field: mjVisual___bindgen_ty_6::camera"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, camera) - 144usize];
    ["Offset of field: mjVisual___bindgen_ty_6::light"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, light) - 160usize];
    ["Offset of field: mjVisual___bindgen_ty_6::selectpoint"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, selectpoint) - 176usize];
    ["Offset of field: mjVisual___bindgen_ty_6::connect"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, connect) - 192usize];
    ["Offset of field: mjVisual___bindgen_ty_6::contactpoint"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, contactpoint) - 208usize];
    ["Offset of field: mjVisual___bindgen_ty_6::contactforce"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, contactforce) - 224usize];
    ["Offset of field: mjVisual___bindgen_ty_6::contactfriction"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, contactfriction) - 240usize];
    ["Offset of field: mjVisual___bindgen_ty_6::contacttorque"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, contacttorque) - 256usize];
    ["Offset of field: mjVisual___bindgen_ty_6::contactgap"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, contactgap) - 272usize];
    ["Offset of field: mjVisual___bindgen_ty_6::rangefinder"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, rangefinder) - 288usize];
    ["Offset of field: mjVisual___bindgen_ty_6::constraint"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, constraint) - 304usize];
    ["Offset of field: mjVisual___bindgen_ty_6::slidercrank"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, slidercrank) - 320usize];
    ["Offset of field: mjVisual___bindgen_ty_6::crankbroken"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, crankbroken) - 336usize];
    ["Offset of field: mjVisual___bindgen_ty_6::frustum"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, frustum) - 352usize];
    ["Offset of field: mjVisual___bindgen_ty_6::bv"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, bv) - 368usize];
    ["Offset of field: mjVisual___bindgen_ty_6::bvactive"]
        [::std::mem::offset_of!(mjVisual___bindgen_ty_6, bvactive) - 384usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjVisual_"][::std::mem::size_of::<mjVisual_>() - 632usize];
    ["Alignment of mjVisual_"][::std::mem::align_of::<mjVisual_>() - 4usize];
    ["Offset of field: mjVisual_::global"][::std::mem::offset_of!(mjVisual_, global) - 0usize];
    ["Offset of field: mjVisual_::quality"][::std::mem::offset_of!(mjVisual_, quality) - 52usize];
    ["Offset of field: mjVisual_::headlight"]
        [::std::mem::offset_of!(mjVisual_, headlight) - 72usize];
    ["Offset of field: mjVisual_::map"][::std::mem::offset_of!(mjVisual_, map) - 112usize];
    ["Offset of field: mjVisual_::scale"][::std::mem::offset_of!(mjVisual_, scale) - 164usize];
    ["Offset of field: mjVisual_::rgba"][::std::mem::offset_of!(mjVisual_, rgba) - 232usize];
};
pub type mjVisual = mjVisual_;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjStatistic_ {
    pub meaninertia: mjtNum,
    pub meanmass: mjtNum,
    pub meansize: mjtNum,
    pub extent: mjtNum,
    pub center: [mjtNum; 3usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjStatistic_"][::std::mem::size_of::<mjStatistic_>() - 56usize];
    ["Alignment of mjStatistic_"][::std::mem::align_of::<mjStatistic_>() - 8usize];
    ["Offset of field: mjStatistic_::meaninertia"]
        [::std::mem::offset_of!(mjStatistic_, meaninertia) - 0usize];
    ["Offset of field: mjStatistic_::meanmass"]
        [::std::mem::offset_of!(mjStatistic_, meanmass) - 8usize];
    ["Offset of field: mjStatistic_::meansize"]
        [::std::mem::offset_of!(mjStatistic_, meansize) - 16usize];
    ["Offset of field: mjStatistic_::extent"]
        [::std::mem::offset_of!(mjStatistic_, extent) - 24usize];
    ["Offset of field: mjStatistic_::center"]
        [::std::mem::offset_of!(mjStatistic_, center) - 32usize];
};
pub type mjStatistic = mjStatistic_;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjModel_ {
    pub nq: ::std::os::raw::c_int,
    pub nv: ::std::os::raw::c_int,
    pub nu: ::std::os::raw::c_int,
    pub na: ::std::os::raw::c_int,
    pub nbody: ::std::os::raw::c_int,
    pub nbvh: ::std::os::raw::c_int,
    pub nbvhstatic: ::std::os::raw::c_int,
    pub nbvhdynamic: ::std::os::raw::c_int,
    pub njnt: ::std::os::raw::c_int,
    pub ngeom: ::std::os::raw::c_int,
    pub nsite: ::std::os::raw::c_int,
    pub ncam: ::std::os::raw::c_int,
    pub nlight: ::std::os::raw::c_int,
    pub nflex: ::std::os::raw::c_int,
    pub nflexnode: ::std::os::raw::c_int,
    pub nflexvert: ::std::os::raw::c_int,
    pub nflexedge: ::std::os::raw::c_int,
    pub nflexelem: ::std::os::raw::c_int,
    pub nflexelemdata: ::std::os::raw::c_int,
    pub nflexelemedge: ::std::os::raw::c_int,
    pub nflexshelldata: ::std::os::raw::c_int,
    pub nflexevpair: ::std::os::raw::c_int,
    pub nflextexcoord: ::std::os::raw::c_int,
    pub nmesh: ::std::os::raw::c_int,
    pub nmeshvert: ::std::os::raw::c_int,
    pub nmeshnormal: ::std::os::raw::c_int,
    pub nmeshtexcoord: ::std::os::raw::c_int,
    pub nmeshface: ::std::os::raw::c_int,
    pub nmeshgraph: ::std::os::raw::c_int,
    pub nmeshpoly: ::std::os::raw::c_int,
    pub nmeshpolyvert: ::std::os::raw::c_int,
    pub nmeshpolymap: ::std::os::raw::c_int,
    pub nskin: ::std::os::raw::c_int,
    pub nskinvert: ::std::os::raw::c_int,
    pub nskintexvert: ::std::os::raw::c_int,
    pub nskinface: ::std::os::raw::c_int,
    pub nskinbone: ::std::os::raw::c_int,
    pub nskinbonevert: ::std::os::raw::c_int,
    pub nhfield: ::std::os::raw::c_int,
    pub nhfielddata: ::std::os::raw::c_int,
    pub ntex: ::std::os::raw::c_int,
    pub ntexdata: ::std::os::raw::c_int,
    pub nmat: ::std::os::raw::c_int,
    pub npair: ::std::os::raw::c_int,
    pub nexclude: ::std::os::raw::c_int,
    pub neq: ::std::os::raw::c_int,
    pub ntendon: ::std::os::raw::c_int,
    pub nwrap: ::std::os::raw::c_int,
    pub nsensor: ::std::os::raw::c_int,
    pub nnumeric: ::std::os::raw::c_int,
    pub nnumericdata: ::std::os::raw::c_int,
    pub ntext: ::std::os::raw::c_int,
    pub ntextdata: ::std::os::raw::c_int,
    pub ntuple: ::std::os::raw::c_int,
    pub ntupledata: ::std::os::raw::c_int,
    pub nkey: ::std::os::raw::c_int,
    pub nmocap: ::std::os::raw::c_int,
    pub nplugin: ::std::os::raw::c_int,
    pub npluginattr: ::std::os::raw::c_int,
    pub nuser_body: ::std::os::raw::c_int,
    pub nuser_jnt: ::std::os::raw::c_int,
    pub nuser_geom: ::std::os::raw::c_int,
    pub nuser_site: ::std::os::raw::c_int,
    pub nuser_cam: ::std::os::raw::c_int,
    pub nuser_tendon: ::std::os::raw::c_int,
    pub nuser_actuator: ::std::os::raw::c_int,
    pub nuser_sensor: ::std::os::raw::c_int,
    pub nnames: ::std::os::raw::c_int,
    pub npaths: ::std::os::raw::c_int,
    pub nnames_map: ::std::os::raw::c_int,
    pub nM: ::std::os::raw::c_int,
    pub nB: ::std::os::raw::c_int,
    pub nC: ::std::os::raw::c_int,
    pub nD: ::std::os::raw::c_int,
    pub nJmom: ::std::os::raw::c_int,
    pub ntree: ::std::os::raw::c_int,
    pub ngravcomp: ::std::os::raw::c_int,
    pub nemax: ::std::os::raw::c_int,
    pub njmax: ::std::os::raw::c_int,
    pub nconmax: ::std::os::raw::c_int,
    pub nuserdata: ::std::os::raw::c_int,
    pub nsensordata: ::std::os::raw::c_int,
    pub npluginstate: ::std::os::raw::c_int,
    pub narena: usize,
    pub nbuffer: usize,
    pub opt: mjOption,
    pub vis: mjVisual,
    pub stat: mjStatistic,
    pub buffer: *mut ::std::os::raw::c_void,
    pub qpos0: *mut mjtNum,
    pub qpos_spring: *mut mjtNum,
    pub body_parentid: *mut ::std::os::raw::c_int,
    pub body_rootid: *mut ::std::os::raw::c_int,
    pub body_weldid: *mut ::std::os::raw::c_int,
    pub body_mocapid: *mut ::std::os::raw::c_int,
    pub body_jntnum: *mut ::std::os::raw::c_int,
    pub body_jntadr: *mut ::std::os::raw::c_int,
    pub body_dofnum: *mut ::std::os::raw::c_int,
    pub body_dofadr: *mut ::std::os::raw::c_int,
    pub body_treeid: *mut ::std::os::raw::c_int,
    pub body_geomnum: *mut ::std::os::raw::c_int,
    pub body_geomadr: *mut ::std::os::raw::c_int,
    pub body_simple: *mut mjtByte,
    pub body_sameframe: *mut mjtByte,
    pub body_pos: *mut mjtNum,
    pub body_quat: *mut mjtNum,
    pub body_ipos: *mut mjtNum,
    pub body_iquat: *mut mjtNum,
    pub body_mass: *mut mjtNum,
    pub body_subtreemass: *mut mjtNum,
    pub body_inertia: *mut mjtNum,
    pub body_invweight0: *mut mjtNum,
    pub body_gravcomp: *mut mjtNum,
    pub body_margin: *mut mjtNum,
    pub body_user: *mut mjtNum,
    pub body_plugin: *mut ::std::os::raw::c_int,
    pub body_contype: *mut ::std::os::raw::c_int,
    pub body_conaffinity: *mut ::std::os::raw::c_int,
    pub body_bvhadr: *mut ::std::os::raw::c_int,
    pub body_bvhnum: *mut ::std::os::raw::c_int,
    pub bvh_depth: *mut ::std::os::raw::c_int,
    pub bvh_child: *mut ::std::os::raw::c_int,
    pub bvh_nodeid: *mut ::std::os::raw::c_int,
    pub bvh_aabb: *mut mjtNum,
    pub jnt_type: *mut ::std::os::raw::c_int,
    pub jnt_qposadr: *mut ::std::os::raw::c_int,
    pub jnt_dofadr: *mut ::std::os::raw::c_int,
    pub jnt_bodyid: *mut ::std::os::raw::c_int,
    pub jnt_group: *mut ::std::os::raw::c_int,
    pub jnt_limited: *mut mjtByte,
    pub jnt_actfrclimited: *mut mjtByte,
    pub jnt_actgravcomp: *mut mjtByte,
    pub jnt_solref: *mut mjtNum,
    pub jnt_solimp: *mut mjtNum,
    pub jnt_pos: *mut mjtNum,
    pub jnt_axis: *mut mjtNum,
    pub jnt_stiffness: *mut mjtNum,
    pub jnt_range: *mut mjtNum,
    pub jnt_actfrcrange: *mut mjtNum,
    pub jnt_margin: *mut mjtNum,
    pub jnt_user: *mut mjtNum,
    pub dof_bodyid: *mut ::std::os::raw::c_int,
    pub dof_jntid: *mut ::std::os::raw::c_int,
    pub dof_parentid: *mut ::std::os::raw::c_int,
    pub dof_treeid: *mut ::std::os::raw::c_int,
    pub dof_Madr: *mut ::std::os::raw::c_int,
    pub dof_simplenum: *mut ::std::os::raw::c_int,
    pub dof_solref: *mut mjtNum,
    pub dof_solimp: *mut mjtNum,
    pub dof_frictionloss: *mut mjtNum,
    pub dof_armature: *mut mjtNum,
    pub dof_damping: *mut mjtNum,
    pub dof_invweight0: *mut mjtNum,
    pub dof_M0: *mut mjtNum,
    pub geom_type: *mut ::std::os::raw::c_int,
    pub geom_contype: *mut ::std::os::raw::c_int,
    pub geom_conaffinity: *mut ::std::os::raw::c_int,
    pub geom_condim: *mut ::std::os::raw::c_int,
    pub geom_bodyid: *mut ::std::os::raw::c_int,
    pub geom_dataid: *mut ::std::os::raw::c_int,
    pub geom_matid: *mut ::std::os::raw::c_int,
    pub geom_group: *mut ::std::os::raw::c_int,
    pub geom_priority: *mut ::std::os::raw::c_int,
    pub geom_plugin: *mut ::std::os::raw::c_int,
    pub geom_sameframe: *mut mjtByte,
    pub geom_solmix: *mut mjtNum,
    pub geom_solref: *mut mjtNum,
    pub geom_solimp: *mut mjtNum,
    pub geom_size: *mut mjtNum,
    pub geom_aabb: *mut mjtNum,
    pub geom_rbound: *mut mjtNum,
    pub geom_pos: *mut mjtNum,
    pub geom_quat: *mut mjtNum,
    pub geom_friction: *mut mjtNum,
    pub geom_margin: *mut mjtNum,
    pub geom_gap: *mut mjtNum,
    pub geom_fluid: *mut mjtNum,
    pub geom_user: *mut mjtNum,
    pub geom_rgba: *mut f32,
    pub site_type: *mut ::std::os::raw::c_int,
    pub site_bodyid: *mut ::std::os::raw::c_int,
    pub site_matid: *mut ::std::os::raw::c_int,
    pub site_group: *mut ::std::os::raw::c_int,
    pub site_sameframe: *mut mjtByte,
    pub site_size: *mut mjtNum,
    pub site_pos: *mut mjtNum,
    pub site_quat: *mut mjtNum,
    pub site_user: *mut mjtNum,
    pub site_rgba: *mut f32,
    pub cam_mode: *mut ::std::os::raw::c_int,
    pub cam_bodyid: *mut ::std::os::raw::c_int,
    pub cam_targetbodyid: *mut ::std::os::raw::c_int,
    pub cam_pos: *mut mjtNum,
    pub cam_quat: *mut mjtNum,
    pub cam_poscom0: *mut mjtNum,
    pub cam_pos0: *mut mjtNum,
    pub cam_mat0: *mut mjtNum,
    pub cam_orthographic: *mut ::std::os::raw::c_int,
    pub cam_fovy: *mut mjtNum,
    pub cam_ipd: *mut mjtNum,
    pub cam_resolution: *mut ::std::os::raw::c_int,
    pub cam_sensorsize: *mut f32,
    pub cam_intrinsic: *mut f32,
    pub cam_user: *mut mjtNum,
    pub light_mode: *mut ::std::os::raw::c_int,
    pub light_bodyid: *mut ::std::os::raw::c_int,
    pub light_targetbodyid: *mut ::std::os::raw::c_int,
    pub light_type: *mut ::std::os::raw::c_int,
    pub light_texid: *mut ::std::os::raw::c_int,
    pub light_castshadow: *mut mjtByte,
    pub light_bulbradius: *mut f32,
    pub light_intensity: *mut f32,
    pub light_range: *mut f32,
    pub light_active: *mut mjtByte,
    pub light_pos: *mut mjtNum,
    pub light_dir: *mut mjtNum,
    pub light_poscom0: *mut mjtNum,
    pub light_pos0: *mut mjtNum,
    pub light_dir0: *mut mjtNum,
    pub light_attenuation: *mut f32,
    pub light_cutoff: *mut f32,
    pub light_exponent: *mut f32,
    pub light_ambient: *mut f32,
    pub light_diffuse: *mut f32,
    pub light_specular: *mut f32,
    pub flex_contype: *mut ::std::os::raw::c_int,
    pub flex_conaffinity: *mut ::std::os::raw::c_int,
    pub flex_condim: *mut ::std::os::raw::c_int,
    pub flex_priority: *mut ::std::os::raw::c_int,
    pub flex_solmix: *mut mjtNum,
    pub flex_solref: *mut mjtNum,
    pub flex_solimp: *mut mjtNum,
    pub flex_friction: *mut mjtNum,
    pub flex_margin: *mut mjtNum,
    pub flex_gap: *mut mjtNum,
    pub flex_internal: *mut mjtByte,
    pub flex_selfcollide: *mut ::std::os::raw::c_int,
    pub flex_activelayers: *mut ::std::os::raw::c_int,
    pub flex_dim: *mut ::std::os::raw::c_int,
    pub flex_matid: *mut ::std::os::raw::c_int,
    pub flex_group: *mut ::std::os::raw::c_int,
    pub flex_interp: *mut ::std::os::raw::c_int,
    pub flex_nodeadr: *mut ::std::os::raw::c_int,
    pub flex_nodenum: *mut ::std::os::raw::c_int,
    pub flex_vertadr: *mut ::std::os::raw::c_int,
    pub flex_vertnum: *mut ::std::os::raw::c_int,
    pub flex_edgeadr: *mut ::std::os::raw::c_int,
    pub flex_edgenum: *mut ::std::os::raw::c_int,
    pub flex_elemadr: *mut ::std::os::raw::c_int,
    pub flex_elemnum: *mut ::std::os::raw::c_int,
    pub flex_elemdataadr: *mut ::std::os::raw::c_int,
    pub flex_elemedgeadr: *mut ::std::os::raw::c_int,
    pub flex_shellnum: *mut ::std::os::raw::c_int,
    pub flex_shelldataadr: *mut ::std::os::raw::c_int,
    pub flex_evpairadr: *mut ::std::os::raw::c_int,
    pub flex_evpairnum: *mut ::std::os::raw::c_int,
    pub flex_texcoordadr: *mut ::std::os::raw::c_int,
    pub flex_nodebodyid: *mut ::std::os::raw::c_int,
    pub flex_vertbodyid: *mut ::std::os::raw::c_int,
    pub flex_edge: *mut ::std::os::raw::c_int,
    pub flex_edgeflap: *mut ::std::os::raw::c_int,
    pub flex_elem: *mut ::std::os::raw::c_int,
    pub flex_elemtexcoord: *mut ::std::os::raw::c_int,
    pub flex_elemedge: *mut ::std::os::raw::c_int,
    pub flex_elemlayer: *mut ::std::os::raw::c_int,
    pub flex_shell: *mut ::std::os::raw::c_int,
    pub flex_evpair: *mut ::std::os::raw::c_int,
    pub flex_vert: *mut mjtNum,
    pub flex_vert0: *mut mjtNum,
    pub flex_node: *mut mjtNum,
    pub flex_node0: *mut mjtNum,
    pub flexedge_length0: *mut mjtNum,
    pub flexedge_invweight0: *mut mjtNum,
    pub flex_radius: *mut mjtNum,
    pub flex_stiffness: *mut mjtNum,
    pub flex_bending: *mut mjtNum,
    pub flex_damping: *mut mjtNum,
    pub flex_edgestiffness: *mut mjtNum,
    pub flex_edgedamping: *mut mjtNum,
    pub flex_edgeequality: *mut mjtByte,
    pub flex_rigid: *mut mjtByte,
    pub flexedge_rigid: *mut mjtByte,
    pub flex_centered: *mut mjtByte,
    pub flex_flatskin: *mut mjtByte,
    pub flex_bvhadr: *mut ::std::os::raw::c_int,
    pub flex_bvhnum: *mut ::std::os::raw::c_int,
    pub flex_rgba: *mut f32,
    pub flex_texcoord: *mut f32,
    pub mesh_vertadr: *mut ::std::os::raw::c_int,
    pub mesh_vertnum: *mut ::std::os::raw::c_int,
    pub mesh_faceadr: *mut ::std::os::raw::c_int,
    pub mesh_facenum: *mut ::std::os::raw::c_int,
    pub mesh_bvhadr: *mut ::std::os::raw::c_int,
    pub mesh_bvhnum: *mut ::std::os::raw::c_int,
    pub mesh_normaladr: *mut ::std::os::raw::c_int,
    pub mesh_normalnum: *mut ::std::os::raw::c_int,
    pub mesh_texcoordadr: *mut ::std::os::raw::c_int,
    pub mesh_texcoordnum: *mut ::std::os::raw::c_int,
    pub mesh_graphadr: *mut ::std::os::raw::c_int,
    pub mesh_vert: *mut f32,
    pub mesh_normal: *mut f32,
    pub mesh_texcoord: *mut f32,
    pub mesh_face: *mut ::std::os::raw::c_int,
    pub mesh_facenormal: *mut ::std::os::raw::c_int,
    pub mesh_facetexcoord: *mut ::std::os::raw::c_int,
    pub mesh_graph: *mut ::std::os::raw::c_int,
    pub mesh_scale: *mut mjtNum,
    pub mesh_pos: *mut mjtNum,
    pub mesh_quat: *mut mjtNum,
    pub mesh_pathadr: *mut ::std::os::raw::c_int,
    pub mesh_polynum: *mut ::std::os::raw::c_int,
    pub mesh_polyadr: *mut ::std::os::raw::c_int,
    pub mesh_polynormal: *mut mjtNum,
    pub mesh_polyvertadr: *mut ::std::os::raw::c_int,
    pub mesh_polyvertnum: *mut ::std::os::raw::c_int,
    pub mesh_polyvert: *mut ::std::os::raw::c_int,
    pub mesh_polymapadr: *mut ::std::os::raw::c_int,
    pub mesh_polymapnum: *mut ::std::os::raw::c_int,
    pub mesh_polymap: *mut ::std::os::raw::c_int,
    pub skin_matid: *mut ::std::os::raw::c_int,
    pub skin_group: *mut ::std::os::raw::c_int,
    pub skin_rgba: *mut f32,
    pub skin_inflate: *mut f32,
    pub skin_vertadr: *mut ::std::os::raw::c_int,
    pub skin_vertnum: *mut ::std::os::raw::c_int,
    pub skin_texcoordadr: *mut ::std::os::raw::c_int,
    pub skin_faceadr: *mut ::std::os::raw::c_int,
    pub skin_facenum: *mut ::std::os::raw::c_int,
    pub skin_boneadr: *mut ::std::os::raw::c_int,
    pub skin_bonenum: *mut ::std::os::raw::c_int,
    pub skin_vert: *mut f32,
    pub skin_texcoord: *mut f32,
    pub skin_face: *mut ::std::os::raw::c_int,
    pub skin_bonevertadr: *mut ::std::os::raw::c_int,
    pub skin_bonevertnum: *mut ::std::os::raw::c_int,
    pub skin_bonebindpos: *mut f32,
    pub skin_bonebindquat: *mut f32,
    pub skin_bonebodyid: *mut ::std::os::raw::c_int,
    pub skin_bonevertid: *mut ::std::os::raw::c_int,
    pub skin_bonevertweight: *mut f32,
    pub skin_pathadr: *mut ::std::os::raw::c_int,
    pub hfield_size: *mut mjtNum,
    pub hfield_nrow: *mut ::std::os::raw::c_int,
    pub hfield_ncol: *mut ::std::os::raw::c_int,
    pub hfield_adr: *mut ::std::os::raw::c_int,
    pub hfield_data: *mut f32,
    pub hfield_pathadr: *mut ::std::os::raw::c_int,
    pub tex_type: *mut ::std::os::raw::c_int,
    pub tex_colorspace: *mut ::std::os::raw::c_int,
    pub tex_height: *mut ::std::os::raw::c_int,
    pub tex_width: *mut ::std::os::raw::c_int,
    pub tex_nchannel: *mut ::std::os::raw::c_int,
    pub tex_adr: *mut ::std::os::raw::c_int,
    pub tex_data: *mut mjtByte,
    pub tex_pathadr: *mut ::std::os::raw::c_int,
    pub mat_texid: *mut ::std::os::raw::c_int,
    pub mat_texuniform: *mut mjtByte,
    pub mat_texrepeat: *mut f32,
    pub mat_emission: *mut f32,
    pub mat_specular: *mut f32,
    pub mat_shininess: *mut f32,
    pub mat_reflectance: *mut f32,
    pub mat_metallic: *mut f32,
    pub mat_roughness: *mut f32,
    pub mat_rgba: *mut f32,
    pub pair_dim: *mut ::std::os::raw::c_int,
    pub pair_geom1: *mut ::std::os::raw::c_int,
    pub pair_geom2: *mut ::std::os::raw::c_int,
    pub pair_signature: *mut ::std::os::raw::c_int,
    pub pair_solref: *mut mjtNum,
    pub pair_solreffriction: *mut mjtNum,
    pub pair_solimp: *mut mjtNum,
    pub pair_margin: *mut mjtNum,
    pub pair_gap: *mut mjtNum,
    pub pair_friction: *mut mjtNum,
    pub exclude_signature: *mut ::std::os::raw::c_int,
    pub eq_type: *mut ::std::os::raw::c_int,
    pub eq_obj1id: *mut ::std::os::raw::c_int,
    pub eq_obj2id: *mut ::std::os::raw::c_int,
    pub eq_objtype: *mut ::std::os::raw::c_int,
    pub eq_active0: *mut mjtByte,
    pub eq_solref: *mut mjtNum,
    pub eq_solimp: *mut mjtNum,
    pub eq_data: *mut mjtNum,
    pub tendon_adr: *mut ::std::os::raw::c_int,
    pub tendon_num: *mut ::std::os::raw::c_int,
    pub tendon_matid: *mut ::std::os::raw::c_int,
    pub tendon_group: *mut ::std::os::raw::c_int,
    pub tendon_limited: *mut mjtByte,
    pub tendon_actfrclimited: *mut mjtByte,
    pub tendon_width: *mut mjtNum,
    pub tendon_solref_lim: *mut mjtNum,
    pub tendon_solimp_lim: *mut mjtNum,
    pub tendon_solref_fri: *mut mjtNum,
    pub tendon_solimp_fri: *mut mjtNum,
    pub tendon_range: *mut mjtNum,
    pub tendon_actfrcrange: *mut mjtNum,
    pub tendon_margin: *mut mjtNum,
    pub tendon_stiffness: *mut mjtNum,
    pub tendon_damping: *mut mjtNum,
    pub tendon_armature: *mut mjtNum,
    pub tendon_frictionloss: *mut mjtNum,
    pub tendon_lengthspring: *mut mjtNum,
    pub tendon_length0: *mut mjtNum,
    pub tendon_invweight0: *mut mjtNum,
    pub tendon_user: *mut mjtNum,
    pub tendon_rgba: *mut f32,
    pub wrap_type: *mut ::std::os::raw::c_int,
    pub wrap_objid: *mut ::std::os::raw::c_int,
    pub wrap_prm: *mut mjtNum,
    pub actuator_trntype: *mut ::std::os::raw::c_int,
    pub actuator_dyntype: *mut ::std::os::raw::c_int,
    pub actuator_gaintype: *mut ::std::os::raw::c_int,
    pub actuator_biastype: *mut ::std::os::raw::c_int,
    pub actuator_trnid: *mut ::std::os::raw::c_int,
    pub actuator_actadr: *mut ::std::os::raw::c_int,
    pub actuator_actnum: *mut ::std::os::raw::c_int,
    pub actuator_group: *mut ::std::os::raw::c_int,
    pub actuator_ctrllimited: *mut mjtByte,
    pub actuator_forcelimited: *mut mjtByte,
    pub actuator_actlimited: *mut mjtByte,
    pub actuator_dynprm: *mut mjtNum,
    pub actuator_gainprm: *mut mjtNum,
    pub actuator_biasprm: *mut mjtNum,
    pub actuator_actearly: *mut mjtByte,
    pub actuator_ctrlrange: *mut mjtNum,
    pub actuator_forcerange: *mut mjtNum,
    pub actuator_actrange: *mut mjtNum,
    pub actuator_gear: *mut mjtNum,
    pub actuator_cranklength: *mut mjtNum,
    pub actuator_acc0: *mut mjtNum,
    pub actuator_length0: *mut mjtNum,
    pub actuator_lengthrange: *mut mjtNum,
    pub actuator_user: *mut mjtNum,
    pub actuator_plugin: *mut ::std::os::raw::c_int,
    pub sensor_type: *mut ::std::os::raw::c_int,
    pub sensor_datatype: *mut ::std::os::raw::c_int,
    pub sensor_needstage: *mut ::std::os::raw::c_int,
    pub sensor_objtype: *mut ::std::os::raw::c_int,
    pub sensor_objid: *mut ::std::os::raw::c_int,
    pub sensor_reftype: *mut ::std::os::raw::c_int,
    pub sensor_refid: *mut ::std::os::raw::c_int,
    pub sensor_dim: *mut ::std::os::raw::c_int,
    pub sensor_adr: *mut ::std::os::raw::c_int,
    pub sensor_cutoff: *mut mjtNum,
    pub sensor_noise: *mut mjtNum,
    pub sensor_user: *mut mjtNum,
    pub sensor_plugin: *mut ::std::os::raw::c_int,
    pub plugin: *mut ::std::os::raw::c_int,
    pub plugin_stateadr: *mut ::std::os::raw::c_int,
    pub plugin_statenum: *mut ::std::os::raw::c_int,
    pub plugin_attr: *mut ::std::os::raw::c_char,
    pub plugin_attradr: *mut ::std::os::raw::c_int,
    pub numeric_adr: *mut ::std::os::raw::c_int,
    pub numeric_size: *mut ::std::os::raw::c_int,
    pub numeric_data: *mut mjtNum,
    pub text_adr: *mut ::std::os::raw::c_int,
    pub text_size: *mut ::std::os::raw::c_int,
    pub text_data: *mut ::std::os::raw::c_char,
    pub tuple_adr: *mut ::std::os::raw::c_int,
    pub tuple_size: *mut ::std::os::raw::c_int,
    pub tuple_objtype: *mut ::std::os::raw::c_int,
    pub tuple_objid: *mut ::std::os::raw::c_int,
    pub tuple_objprm: *mut mjtNum,
    pub key_time: *mut mjtNum,
    pub key_qpos: *mut mjtNum,
    pub key_qvel: *mut mjtNum,
    pub key_act: *mut mjtNum,
    pub key_mpos: *mut mjtNum,
    pub key_mquat: *mut mjtNum,
    pub key_ctrl: *mut mjtNum,
    pub name_bodyadr: *mut ::std::os::raw::c_int,
    pub name_jntadr: *mut ::std::os::raw::c_int,
    pub name_geomadr: *mut ::std::os::raw::c_int,
    pub name_siteadr: *mut ::std::os::raw::c_int,
    pub name_camadr: *mut ::std::os::raw::c_int,
    pub name_lightadr: *mut ::std::os::raw::c_int,
    pub name_flexadr: *mut ::std::os::raw::c_int,
    pub name_meshadr: *mut ::std::os::raw::c_int,
    pub name_skinadr: *mut ::std::os::raw::c_int,
    pub name_hfieldadr: *mut ::std::os::raw::c_int,
    pub name_texadr: *mut ::std::os::raw::c_int,
    pub name_matadr: *mut ::std::os::raw::c_int,
    pub name_pairadr: *mut ::std::os::raw::c_int,
    pub name_excludeadr: *mut ::std::os::raw::c_int,
    pub name_eqadr: *mut ::std::os::raw::c_int,
    pub name_tendonadr: *mut ::std::os::raw::c_int,
    pub name_actuatoradr: *mut ::std::os::raw::c_int,
    pub name_sensoradr: *mut ::std::os::raw::c_int,
    pub name_numericadr: *mut ::std::os::raw::c_int,
    pub name_textadr: *mut ::std::os::raw::c_int,
    pub name_tupleadr: *mut ::std::os::raw::c_int,
    pub name_keyadr: *mut ::std::os::raw::c_int,
    pub name_pluginadr: *mut ::std::os::raw::c_int,
    pub names: *mut ::std::os::raw::c_char,
    pub names_map: *mut ::std::os::raw::c_int,
    pub paths: *mut ::std::os::raw::c_char,
    pub signature: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjModel_"][::std::mem::size_of::<mjModel_>() - 4624usize];
    ["Alignment of mjModel_"][::std::mem::align_of::<mjModel_>() - 8usize];
    ["Offset of field: mjModel_::nq"][::std::mem::offset_of!(mjModel_, nq) - 0usize];
    ["Offset of field: mjModel_::nv"][::std::mem::offset_of!(mjModel_, nv) - 4usize];
    ["Offset of field: mjModel_::nu"][::std::mem::offset_of!(mjModel_, nu) - 8usize];
    ["Offset of field: mjModel_::na"][::std::mem::offset_of!(mjModel_, na) - 12usize];
    ["Offset of field: mjModel_::nbody"][::std::mem::offset_of!(mjModel_, nbody) - 16usize];
    ["Offset of field: mjModel_::nbvh"][::std::mem::offset_of!(mjModel_, nbvh) - 20usize];
    ["Offset of field: mjModel_::nbvhstatic"]
        [::std::mem::offset_of!(mjModel_, nbvhstatic) - 24usize];
    ["Offset of field: mjModel_::nbvhdynamic"]
        [::std::mem::offset_of!(mjModel_, nbvhdynamic) - 28usize];
    ["Offset of field: mjModel_::njnt"][::std::mem::offset_of!(mjModel_, njnt) - 32usize];
    ["Offset of field: mjModel_::ngeom"][::std::mem::offset_of!(mjModel_, ngeom) - 36usize];
    ["Offset of field: mjModel_::nsite"][::std::mem::offset_of!(mjModel_, nsite) - 40usize];
    ["Offset of field: mjModel_::ncam"][::std::mem::offset_of!(mjModel_, ncam) - 44usize];
    ["Offset of field: mjModel_::nlight"][::std::mem::offset_of!(mjModel_, nlight) - 48usize];
    ["Offset of field: mjModel_::nflex"][::std::mem::offset_of!(mjModel_, nflex) - 52usize];
    ["Offset of field: mjModel_::nflexnode"][::std::mem::offset_of!(mjModel_, nflexnode) - 56usize];
    ["Offset of field: mjModel_::nflexvert"][::std::mem::offset_of!(mjModel_, nflexvert) - 60usize];
    ["Offset of field: mjModel_::nflexedge"][::std::mem::offset_of!(mjModel_, nflexedge) - 64usize];
    ["Offset of field: mjModel_::nflexelem"][::std::mem::offset_of!(mjModel_, nflexelem) - 68usize];
    ["Offset of field: mjModel_::nflexelemdata"]
        [::std::mem::offset_of!(mjModel_, nflexelemdata) - 72usize];
    ["Offset of field: mjModel_::nflexelemedge"]
        [::std::mem::offset_of!(mjModel_, nflexelemedge) - 76usize];
    ["Offset of field: mjModel_::nflexshelldata"]
        [::std::mem::offset_of!(mjModel_, nflexshelldata) - 80usize];
    ["Offset of field: mjModel_::nflexevpair"]
        [::std::mem::offset_of!(mjModel_, nflexevpair) - 84usize];
    ["Offset of field: mjModel_::nflextexcoord"]
        [::std::mem::offset_of!(mjModel_, nflextexcoord) - 88usize];
    ["Offset of field: mjModel_::nmesh"][::std::mem::offset_of!(mjModel_, nmesh) - 92usize];
    ["Offset of field: mjModel_::nmeshvert"][::std::mem::offset_of!(mjModel_, nmeshvert) - 96usize];
    ["Offset of field: mjModel_::nmeshnormal"]
        [::std::mem::offset_of!(mjModel_, nmeshnormal) - 100usize];
    ["Offset of field: mjModel_::nmeshtexcoord"]
        [::std::mem::offset_of!(mjModel_, nmeshtexcoord) - 104usize];
    ["Offset of field: mjModel_::nmeshface"]
        [::std::mem::offset_of!(mjModel_, nmeshface) - 108usize];
    ["Offset of field: mjModel_::nmeshgraph"]
        [::std::mem::offset_of!(mjModel_, nmeshgraph) - 112usize];
    ["Offset of field: mjModel_::nmeshpoly"]
        [::std::mem::offset_of!(mjModel_, nmeshpoly) - 116usize];
    ["Offset of field: mjModel_::nmeshpolyvert"]
        [::std::mem::offset_of!(mjModel_, nmeshpolyvert) - 120usize];
    ["Offset of field: mjModel_::nmeshpolymap"]
        [::std::mem::offset_of!(mjModel_, nmeshpolymap) - 124usize];
    ["Offset of field: mjModel_::nskin"][::std::mem::offset_of!(mjModel_, nskin) - 128usize];
    ["Offset of field: mjModel_::nskinvert"]
        [::std::mem::offset_of!(mjModel_, nskinvert) - 132usize];
    ["Offset of field: mjModel_::nskintexvert"]
        [::std::mem::offset_of!(mjModel_, nskintexvert) - 136usize];
    ["Offset of field: mjModel_::nskinface"]
        [::std::mem::offset_of!(mjModel_, nskinface) - 140usize];
    ["Offset of field: mjModel_::nskinbone"]
        [::std::mem::offset_of!(mjModel_, nskinbone) - 144usize];
    ["Offset of field: mjModel_::nskinbonevert"]
        [::std::mem::offset_of!(mjModel_, nskinbonevert) - 148usize];
    ["Offset of field: mjModel_::nhfield"][::std::mem::offset_of!(mjModel_, nhfield) - 152usize];
    ["Offset of field: mjModel_::nhfielddata"]
        [::std::mem::offset_of!(mjModel_, nhfielddata) - 156usize];
    ["Offset of field: mjModel_::ntex"][::std::mem::offset_of!(mjModel_, ntex) - 160usize];
    ["Offset of field: mjModel_::ntexdata"][::std::mem::offset_of!(mjModel_, ntexdata) - 164usize];
    ["Offset of field: mjModel_::nmat"][::std::mem::offset_of!(mjModel_, nmat) - 168usize];
    ["Offset of field: mjModel_::npair"][::std::mem::offset_of!(mjModel_, npair) - 172usize];
    ["Offset of field: mjModel_::nexclude"][::std::mem::offset_of!(mjModel_, nexclude) - 176usize];
    ["Offset of field: mjModel_::neq"][::std::mem::offset_of!(mjModel_, neq) - 180usize];
    ["Offset of field: mjModel_::ntendon"][::std::mem::offset_of!(mjModel_, ntendon) - 184usize];
    ["Offset of field: mjModel_::nwrap"][::std::mem::offset_of!(mjModel_, nwrap) - 188usize];
    ["Offset of field: mjModel_::nsensor"][::std::mem::offset_of!(mjModel_, nsensor) - 192usize];
    ["Offset of field: mjModel_::nnumeric"][::std::mem::offset_of!(mjModel_, nnumeric) - 196usize];
    ["Offset of field: mjModel_::nnumericdata"]
        [::std::mem::offset_of!(mjModel_, nnumericdata) - 200usize];
    ["Offset of field: mjModel_::ntext"][::std::mem::offset_of!(mjModel_, ntext) - 204usize];
    ["Offset of field: mjModel_::ntextdata"]
        [::std::mem::offset_of!(mjModel_, ntextdata) - 208usize];
    ["Offset of field: mjModel_::ntuple"][::std::mem::offset_of!(mjModel_, ntuple) - 212usize];
    ["Offset of field: mjModel_::ntupledata"]
        [::std::mem::offset_of!(mjModel_, ntupledata) - 216usize];
    ["Offset of field: mjModel_::nkey"][::std::mem::offset_of!(mjModel_, nkey) - 220usize];
    ["Offset of field: mjModel_::nmocap"][::std::mem::offset_of!(mjModel_, nmocap) - 224usize];
    ["Offset of field: mjModel_::nplugin"][::std::mem::offset_of!(mjModel_, nplugin) - 228usize];
    ["Offset of field: mjModel_::npluginattr"]
        [::std::mem::offset_of!(mjModel_, npluginattr) - 232usize];
    ["Offset of field: mjModel_::nuser_body"]
        [::std::mem::offset_of!(mjModel_, nuser_body) - 236usize];
    ["Offset of field: mjModel_::nuser_jnt"]
        [::std::mem::offset_of!(mjModel_, nuser_jnt) - 240usize];
    ["Offset of field: mjModel_::nuser_geom"]
        [::std::mem::offset_of!(mjModel_, nuser_geom) - 244usize];
    ["Offset of field: mjModel_::nuser_site"]
        [::std::mem::offset_of!(mjModel_, nuser_site) - 248usize];
    ["Offset of field: mjModel_::nuser_cam"]
        [::std::mem::offset_of!(mjModel_, nuser_cam) - 252usize];
    ["Offset of field: mjModel_::nuser_tendon"]
        [::std::mem::offset_of!(mjModel_, nuser_tendon) - 256usize];
    ["Offset of field: mjModel_::nuser_actuator"]
        [::std::mem::offset_of!(mjModel_, nuser_actuator) - 260usize];
    ["Offset of field: mjModel_::nuser_sensor"]
        [::std::mem::offset_of!(mjModel_, nuser_sensor) - 264usize];
    ["Offset of field: mjModel_::nnames"][::std::mem::offset_of!(mjModel_, nnames) - 268usize];
    ["Offset of field: mjModel_::npaths"][::std::mem::offset_of!(mjModel_, npaths) - 272usize];
    ["Offset of field: mjModel_::nnames_map"]
        [::std::mem::offset_of!(mjModel_, nnames_map) - 276usize];
    ["Offset of field: mjModel_::nM"][::std::mem::offset_of!(mjModel_, nM) - 280usize];
    ["Offset of field: mjModel_::nB"][::std::mem::offset_of!(mjModel_, nB) - 284usize];
    ["Offset of field: mjModel_::nC"][::std::mem::offset_of!(mjModel_, nC) - 288usize];
    ["Offset of field: mjModel_::nD"][::std::mem::offset_of!(mjModel_, nD) - 292usize];
    ["Offset of field: mjModel_::nJmom"][::std::mem::offset_of!(mjModel_, nJmom) - 296usize];
    ["Offset of field: mjModel_::ntree"][::std::mem::offset_of!(mjModel_, ntree) - 300usize];
    ["Offset of field: mjModel_::ngravcomp"]
        [::std::mem::offset_of!(mjModel_, ngravcomp) - 304usize];
    ["Offset of field: mjModel_::nemax"][::std::mem::offset_of!(mjModel_, nemax) - 308usize];
    ["Offset of field: mjModel_::njmax"][::std::mem::offset_of!(mjModel_, njmax) - 312usize];
    ["Offset of field: mjModel_::nconmax"][::std::mem::offset_of!(mjModel_, nconmax) - 316usize];
    ["Offset of field: mjModel_::nuserdata"]
        [::std::mem::offset_of!(mjModel_, nuserdata) - 320usize];
    ["Offset of field: mjModel_::nsensordata"]
        [::std::mem::offset_of!(mjModel_, nsensordata) - 324usize];
    ["Offset of field: mjModel_::npluginstate"]
        [::std::mem::offset_of!(mjModel_, npluginstate) - 328usize];
    ["Offset of field: mjModel_::narena"][::std::mem::offset_of!(mjModel_, narena) - 336usize];
    ["Offset of field: mjModel_::nbuffer"][::std::mem::offset_of!(mjModel_, nbuffer) - 344usize];
    ["Offset of field: mjModel_::opt"][::std::mem::offset_of!(mjModel_, opt) - 352usize];
    ["Offset of field: mjModel_::vis"][::std::mem::offset_of!(mjModel_, vis) - 656usize];
    ["Offset of field: mjModel_::stat"][::std::mem::offset_of!(mjModel_, stat) - 1288usize];
    ["Offset of field: mjModel_::buffer"][::std::mem::offset_of!(mjModel_, buffer) - 1344usize];
    ["Offset of field: mjModel_::qpos0"][::std::mem::offset_of!(mjModel_, qpos0) - 1352usize];
    ["Offset of field: mjModel_::qpos_spring"]
        [::std::mem::offset_of!(mjModel_, qpos_spring) - 1360usize];
    ["Offset of field: mjModel_::body_parentid"]
        [::std::mem::offset_of!(mjModel_, body_parentid) - 1368usize];
    ["Offset of field: mjModel_::body_rootid"]
        [::std::mem::offset_of!(mjModel_, body_rootid) - 1376usize];
    ["Offset of field: mjModel_::body_weldid"]
        [::std::mem::offset_of!(mjModel_, body_weldid) - 1384usize];
    ["Offset of field: mjModel_::body_mocapid"]
        [::std::mem::offset_of!(mjModel_, body_mocapid) - 1392usize];
    ["Offset of field: mjModel_::body_jntnum"]
        [::std::mem::offset_of!(mjModel_, body_jntnum) - 1400usize];
    ["Offset of field: mjModel_::body_jntadr"]
        [::std::mem::offset_of!(mjModel_, body_jntadr) - 1408usize];
    ["Offset of field: mjModel_::body_dofnum"]
        [::std::mem::offset_of!(mjModel_, body_dofnum) - 1416usize];
    ["Offset of field: mjModel_::body_dofadr"]
        [::std::mem::offset_of!(mjModel_, body_dofadr) - 1424usize];
    ["Offset of field: mjModel_::body_treeid"]
        [::std::mem::offset_of!(mjModel_, body_treeid) - 1432usize];
    ["Offset of field: mjModel_::body_geomnum"]
        [::std::mem::offset_of!(mjModel_, body_geomnum) - 1440usize];
    ["Offset of field: mjModel_::body_geomadr"]
        [::std::mem::offset_of!(mjModel_, body_geomadr) - 1448usize];
    ["Offset of field: mjModel_::body_simple"]
        [::std::mem::offset_of!(mjModel_, body_simple) - 1456usize];
    ["Offset of field: mjModel_::body_sameframe"]
        [::std::mem::offset_of!(mjModel_, body_sameframe) - 1464usize];
    ["Offset of field: mjModel_::body_pos"][::std::mem::offset_of!(mjModel_, body_pos) - 1472usize];
    ["Offset of field: mjModel_::body_quat"]
        [::std::mem::offset_of!(mjModel_, body_quat) - 1480usize];
    ["Offset of field: mjModel_::body_ipos"]
        [::std::mem::offset_of!(mjModel_, body_ipos) - 1488usize];
    ["Offset of field: mjModel_::body_iquat"]
        [::std::mem::offset_of!(mjModel_, body_iquat) - 1496usize];
    ["Offset of field: mjModel_::body_mass"]
        [::std::mem::offset_of!(mjModel_, body_mass) - 1504usize];
    ["Offset of field: mjModel_::body_subtreemass"]
        [::std::mem::offset_of!(mjModel_, body_subtreemass) - 1512usize];
    ["Offset of field: mjModel_::body_inertia"]
        [::std::mem::offset_of!(mjModel_, body_inertia) - 1520usize];
    ["Offset of field: mjModel_::body_invweight0"]
        [::std::mem::offset_of!(mjModel_, body_invweight0) - 1528usize];
    ["Offset of field: mjModel_::body_gravcomp"]
        [::std::mem::offset_of!(mjModel_, body_gravcomp) - 1536usize];
    ["Offset of field: mjModel_::body_margin"]
        [::std::mem::offset_of!(mjModel_, body_margin) - 1544usize];
    ["Offset of field: mjModel_::body_user"]
        [::std::mem::offset_of!(mjModel_, body_user) - 1552usize];
    ["Offset of field: mjModel_::body_plugin"]
        [::std::mem::offset_of!(mjModel_, body_plugin) - 1560usize];
    ["Offset of field: mjModel_::body_contype"]
        [::std::mem::offset_of!(mjModel_, body_contype) - 1568usize];
    ["Offset of field: mjModel_::body_conaffinity"]
        [::std::mem::offset_of!(mjModel_, body_conaffinity) - 1576usize];
    ["Offset of field: mjModel_::body_bvhadr"]
        [::std::mem::offset_of!(mjModel_, body_bvhadr) - 1584usize];
    ["Offset of field: mjModel_::body_bvhnum"]
        [::std::mem::offset_of!(mjModel_, body_bvhnum) - 1592usize];
    ["Offset of field: mjModel_::bvh_depth"]
        [::std::mem::offset_of!(mjModel_, bvh_depth) - 1600usize];
    ["Offset of field: mjModel_::bvh_child"]
        [::std::mem::offset_of!(mjModel_, bvh_child) - 1608usize];
    ["Offset of field: mjModel_::bvh_nodeid"]
        [::std::mem::offset_of!(mjModel_, bvh_nodeid) - 1616usize];
    ["Offset of field: mjModel_::bvh_aabb"][::std::mem::offset_of!(mjModel_, bvh_aabb) - 1624usize];
    ["Offset of field: mjModel_::jnt_type"][::std::mem::offset_of!(mjModel_, jnt_type) - 1632usize];
    ["Offset of field: mjModel_::jnt_qposadr"]
        [::std::mem::offset_of!(mjModel_, jnt_qposadr) - 1640usize];
    ["Offset of field: mjModel_::jnt_dofadr"]
        [::std::mem::offset_of!(mjModel_, jnt_dofadr) - 1648usize];
    ["Offset of field: mjModel_::jnt_bodyid"]
        [::std::mem::offset_of!(mjModel_, jnt_bodyid) - 1656usize];
    ["Offset of field: mjModel_::jnt_group"]
        [::std::mem::offset_of!(mjModel_, jnt_group) - 1664usize];
    ["Offset of field: mjModel_::jnt_limited"]
        [::std::mem::offset_of!(mjModel_, jnt_limited) - 1672usize];
    ["Offset of field: mjModel_::jnt_actfrclimited"]
        [::std::mem::offset_of!(mjModel_, jnt_actfrclimited) - 1680usize];
    ["Offset of field: mjModel_::jnt_actgravcomp"]
        [::std::mem::offset_of!(mjModel_, jnt_actgravcomp) - 1688usize];
    ["Offset of field: mjModel_::jnt_solref"]
        [::std::mem::offset_of!(mjModel_, jnt_solref) - 1696usize];
    ["Offset of field: mjModel_::jnt_solimp"]
        [::std::mem::offset_of!(mjModel_, jnt_solimp) - 1704usize];
    ["Offset of field: mjModel_::jnt_pos"][::std::mem::offset_of!(mjModel_, jnt_pos) - 1712usize];
    ["Offset of field: mjModel_::jnt_axis"][::std::mem::offset_of!(mjModel_, jnt_axis) - 1720usize];
    ["Offset of field: mjModel_::jnt_stiffness"]
        [::std::mem::offset_of!(mjModel_, jnt_stiffness) - 1728usize];
    ["Offset of field: mjModel_::jnt_range"]
        [::std::mem::offset_of!(mjModel_, jnt_range) - 1736usize];
    ["Offset of field: mjModel_::jnt_actfrcrange"]
        [::std::mem::offset_of!(mjModel_, jnt_actfrcrange) - 1744usize];
    ["Offset of field: mjModel_::jnt_margin"]
        [::std::mem::offset_of!(mjModel_, jnt_margin) - 1752usize];
    ["Offset of field: mjModel_::jnt_user"][::std::mem::offset_of!(mjModel_, jnt_user) - 1760usize];
    ["Offset of field: mjModel_::dof_bodyid"]
        [::std::mem::offset_of!(mjModel_, dof_bodyid) - 1768usize];
    ["Offset of field: mjModel_::dof_jntid"]
        [::std::mem::offset_of!(mjModel_, dof_jntid) - 1776usize];
    ["Offset of field: mjModel_::dof_parentid"]
        [::std::mem::offset_of!(mjModel_, dof_parentid) - 1784usize];
    ["Offset of field: mjModel_::dof_treeid"]
        [::std::mem::offset_of!(mjModel_, dof_treeid) - 1792usize];
    ["Offset of field: mjModel_::dof_Madr"][::std::mem::offset_of!(mjModel_, dof_Madr) - 1800usize];
    ["Offset of field: mjModel_::dof_simplenum"]
        [::std::mem::offset_of!(mjModel_, dof_simplenum) - 1808usize];
    ["Offset of field: mjModel_::dof_solref"]
        [::std::mem::offset_of!(mjModel_, dof_solref) - 1816usize];
    ["Offset of field: mjModel_::dof_solimp"]
        [::std::mem::offset_of!(mjModel_, dof_solimp) - 1824usize];
    ["Offset of field: mjModel_::dof_frictionloss"]
        [::std::mem::offset_of!(mjModel_, dof_frictionloss) - 1832usize];
    ["Offset of field: mjModel_::dof_armature"]
        [::std::mem::offset_of!(mjModel_, dof_armature) - 1840usize];
    ["Offset of field: mjModel_::dof_damping"]
        [::std::mem::offset_of!(mjModel_, dof_damping) - 1848usize];
    ["Offset of field: mjModel_::dof_invweight0"]
        [::std::mem::offset_of!(mjModel_, dof_invweight0) - 1856usize];
    ["Offset of field: mjModel_::dof_M0"][::std::mem::offset_of!(mjModel_, dof_M0) - 1864usize];
    ["Offset of field: mjModel_::geom_type"]
        [::std::mem::offset_of!(mjModel_, geom_type) - 1872usize];
    ["Offset of field: mjModel_::geom_contype"]
        [::std::mem::offset_of!(mjModel_, geom_contype) - 1880usize];
    ["Offset of field: mjModel_::geom_conaffinity"]
        [::std::mem::offset_of!(mjModel_, geom_conaffinity) - 1888usize];
    ["Offset of field: mjModel_::geom_condim"]
        [::std::mem::offset_of!(mjModel_, geom_condim) - 1896usize];
    ["Offset of field: mjModel_::geom_bodyid"]
        [::std::mem::offset_of!(mjModel_, geom_bodyid) - 1904usize];
    ["Offset of field: mjModel_::geom_dataid"]
        [::std::mem::offset_of!(mjModel_, geom_dataid) - 1912usize];
    ["Offset of field: mjModel_::geom_matid"]
        [::std::mem::offset_of!(mjModel_, geom_matid) - 1920usize];
    ["Offset of field: mjModel_::geom_group"]
        [::std::mem::offset_of!(mjModel_, geom_group) - 1928usize];
    ["Offset of field: mjModel_::geom_priority"]
        [::std::mem::offset_of!(mjModel_, geom_priority) - 1936usize];
    ["Offset of field: mjModel_::geom_plugin"]
        [::std::mem::offset_of!(mjModel_, geom_plugin) - 1944usize];
    ["Offset of field: mjModel_::geom_sameframe"]
        [::std::mem::offset_of!(mjModel_, geom_sameframe) - 1952usize];
    ["Offset of field: mjModel_::geom_solmix"]
        [::std::mem::offset_of!(mjModel_, geom_solmix) - 1960usize];
    ["Offset of field: mjModel_::geom_solref"]
        [::std::mem::offset_of!(mjModel_, geom_solref) - 1968usize];
    ["Offset of field: mjModel_::geom_solimp"]
        [::std::mem::offset_of!(mjModel_, geom_solimp) - 1976usize];
    ["Offset of field: mjModel_::geom_size"]
        [::std::mem::offset_of!(mjModel_, geom_size) - 1984usize];
    ["Offset of field: mjModel_::geom_aabb"]
        [::std::mem::offset_of!(mjModel_, geom_aabb) - 1992usize];
    ["Offset of field: mjModel_::geom_rbound"]
        [::std::mem::offset_of!(mjModel_, geom_rbound) - 2000usize];
    ["Offset of field: mjModel_::geom_pos"][::std::mem::offset_of!(mjModel_, geom_pos) - 2008usize];
    ["Offset of field: mjModel_::geom_quat"]
        [::std::mem::offset_of!(mjModel_, geom_quat) - 2016usize];
    ["Offset of field: mjModel_::geom_friction"]
        [::std::mem::offset_of!(mjModel_, geom_friction) - 2024usize];
    ["Offset of field: mjModel_::geom_margin"]
        [::std::mem::offset_of!(mjModel_, geom_margin) - 2032usize];
    ["Offset of field: mjModel_::geom_gap"][::std::mem::offset_of!(mjModel_, geom_gap) - 2040usize];
    ["Offset of field: mjModel_::geom_fluid"]
        [::std::mem::offset_of!(mjModel_, geom_fluid) - 2048usize];
    ["Offset of field: mjModel_::geom_user"]
        [::std::mem::offset_of!(mjModel_, geom_user) - 2056usize];
    ["Offset of field: mjModel_::geom_rgba"]
        [::std::mem::offset_of!(mjModel_, geom_rgba) - 2064usize];
    ["Offset of field: mjModel_::site_type"]
        [::std::mem::offset_of!(mjModel_, site_type) - 2072usize];
    ["Offset of field: mjModel_::site_bodyid"]
        [::std::mem::offset_of!(mjModel_, site_bodyid) - 2080usize];
    ["Offset of field: mjModel_::site_matid"]
        [::std::mem::offset_of!(mjModel_, site_matid) - 2088usize];
    ["Offset of field: mjModel_::site_group"]
        [::std::mem::offset_of!(mjModel_, site_group) - 2096usize];
    ["Offset of field: mjModel_::site_sameframe"]
        [::std::mem::offset_of!(mjModel_, site_sameframe) - 2104usize];
    ["Offset of field: mjModel_::site_size"]
        [::std::mem::offset_of!(mjModel_, site_size) - 2112usize];
    ["Offset of field: mjModel_::site_pos"][::std::mem::offset_of!(mjModel_, site_pos) - 2120usize];
    ["Offset of field: mjModel_::site_quat"]
        [::std::mem::offset_of!(mjModel_, site_quat) - 2128usize];
    ["Offset of field: mjModel_::site_user"]
        [::std::mem::offset_of!(mjModel_, site_user) - 2136usize];
    ["Offset of field: mjModel_::site_rgba"]
        [::std::mem::offset_of!(mjModel_, site_rgba) - 2144usize];
    ["Offset of field: mjModel_::cam_mode"][::std::mem::offset_of!(mjModel_, cam_mode) - 2152usize];
    ["Offset of field: mjModel_::cam_bodyid"]
        [::std::mem::offset_of!(mjModel_, cam_bodyid) - 2160usize];
    ["Offset of field: mjModel_::cam_targetbodyid"]
        [::std::mem::offset_of!(mjModel_, cam_targetbodyid) - 2168usize];
    ["Offset of field: mjModel_::cam_pos"][::std::mem::offset_of!(mjModel_, cam_pos) - 2176usize];
    ["Offset of field: mjModel_::cam_quat"][::std::mem::offset_of!(mjModel_, cam_quat) - 2184usize];
    ["Offset of field: mjModel_::cam_poscom0"]
        [::std::mem::offset_of!(mjModel_, cam_poscom0) - 2192usize];
    ["Offset of field: mjModel_::cam_pos0"][::std::mem::offset_of!(mjModel_, cam_pos0) - 2200usize];
    ["Offset of field: mjModel_::cam_mat0"][::std::mem::offset_of!(mjModel_, cam_mat0) - 2208usize];
    ["Offset of field: mjModel_::cam_orthographic"]
        [::std::mem::offset_of!(mjModel_, cam_orthographic) - 2216usize];
    ["Offset of field: mjModel_::cam_fovy"][::std::mem::offset_of!(mjModel_, cam_fovy) - 2224usize];
    ["Offset of field: mjModel_::cam_ipd"][::std::mem::offset_of!(mjModel_, cam_ipd) - 2232usize];
    ["Offset of field: mjModel_::cam_resolution"]
        [::std::mem::offset_of!(mjModel_, cam_resolution) - 2240usize];
    ["Offset of field: mjModel_::cam_sensorsize"]
        [::std::mem::offset_of!(mjModel_, cam_sensorsize) - 2248usize];
    ["Offset of field: mjModel_::cam_intrinsic"]
        [::std::mem::offset_of!(mjModel_, cam_intrinsic) - 2256usize];
    ["Offset of field: mjModel_::cam_user"][::std::mem::offset_of!(mjModel_, cam_user) - 2264usize];
    ["Offset of field: mjModel_::light_mode"]
        [::std::mem::offset_of!(mjModel_, light_mode) - 2272usize];
    ["Offset of field: mjModel_::light_bodyid"]
        [::std::mem::offset_of!(mjModel_, light_bodyid) - 2280usize];
    ["Offset of field: mjModel_::light_targetbodyid"]
        [::std::mem::offset_of!(mjModel_, light_targetbodyid) - 2288usize];
    ["Offset of field: mjModel_::light_type"]
        [::std::mem::offset_of!(mjModel_, light_type) - 2296usize];
    ["Offset of field: mjModel_::light_texid"]
        [::std::mem::offset_of!(mjModel_, light_texid) - 2304usize];
    ["Offset of field: mjModel_::light_castshadow"]
        [::std::mem::offset_of!(mjModel_, light_castshadow) - 2312usize];
    ["Offset of field: mjModel_::light_bulbradius"]
        [::std::mem::offset_of!(mjModel_, light_bulbradius) - 2320usize];
    ["Offset of field: mjModel_::light_intensity"]
        [::std::mem::offset_of!(mjModel_, light_intensity) - 2328usize];
    ["Offset of field: mjModel_::light_range"]
        [::std::mem::offset_of!(mjModel_, light_range) - 2336usize];
    ["Offset of field: mjModel_::light_active"]
        [::std::mem::offset_of!(mjModel_, light_active) - 2344usize];
    ["Offset of field: mjModel_::light_pos"]
        [::std::mem::offset_of!(mjModel_, light_pos) - 2352usize];
    ["Offset of field: mjModel_::light_dir"]
        [::std::mem::offset_of!(mjModel_, light_dir) - 2360usize];
    ["Offset of field: mjModel_::light_poscom0"]
        [::std::mem::offset_of!(mjModel_, light_poscom0) - 2368usize];
    ["Offset of field: mjModel_::light_pos0"]
        [::std::mem::offset_of!(mjModel_, light_pos0) - 2376usize];
    ["Offset of field: mjModel_::light_dir0"]
        [::std::mem::offset_of!(mjModel_, light_dir0) - 2384usize];
    ["Offset of field: mjModel_::light_attenuation"]
        [::std::mem::offset_of!(mjModel_, light_attenuation) - 2392usize];
    ["Offset of field: mjModel_::light_cutoff"]
        [::std::mem::offset_of!(mjModel_, light_cutoff) - 2400usize];
    ["Offset of field: mjModel_::light_exponent"]
        [::std::mem::offset_of!(mjModel_, light_exponent) - 2408usize];
    ["Offset of field: mjModel_::light_ambient"]
        [::std::mem::offset_of!(mjModel_, light_ambient) - 2416usize];
    ["Offset of field: mjModel_::light_diffuse"]
        [::std::mem::offset_of!(mjModel_, light_diffuse) - 2424usize];
    ["Offset of field: mjModel_::light_specular"]
        [::std::mem::offset_of!(mjModel_, light_specular) - 2432usize];
    ["Offset of field: mjModel_::flex_contype"]
        [::std::mem::offset_of!(mjModel_, flex_contype) - 2440usize];
    ["Offset of field: mjModel_::flex_conaffinity"]
        [::std::mem::offset_of!(mjModel_, flex_conaffinity) - 2448usize];
    ["Offset of field: mjModel_::flex_condim"]
        [::std::mem::offset_of!(mjModel_, flex_condim) - 2456usize];
    ["Offset of field: mjModel_::flex_priority"]
        [::std::mem::offset_of!(mjModel_, flex_priority) - 2464usize];
    ["Offset of field: mjModel_::flex_solmix"]
        [::std::mem::offset_of!(mjModel_, flex_solmix) - 2472usize];
    ["Offset of field: mjModel_::flex_solref"]
        [::std::mem::offset_of!(mjModel_, flex_solref) - 2480usize];
    ["Offset of field: mjModel_::flex_solimp"]
        [::std::mem::offset_of!(mjModel_, flex_solimp) - 2488usize];
    ["Offset of field: mjModel_::flex_friction"]
        [::std::mem::offset_of!(mjModel_, flex_friction) - 2496usize];
    ["Offset of field: mjModel_::flex_margin"]
        [::std::mem::offset_of!(mjModel_, flex_margin) - 2504usize];
    ["Offset of field: mjModel_::flex_gap"][::std::mem::offset_of!(mjModel_, flex_gap) - 2512usize];
    ["Offset of field: mjModel_::flex_internal"]
        [::std::mem::offset_of!(mjModel_, flex_internal) - 2520usize];
    ["Offset of field: mjModel_::flex_selfcollide"]
        [::std::mem::offset_of!(mjModel_, flex_selfcollide) - 2528usize];
    ["Offset of field: mjModel_::flex_activelayers"]
        [::std::mem::offset_of!(mjModel_, flex_activelayers) - 2536usize];
    ["Offset of field: mjModel_::flex_dim"][::std::mem::offset_of!(mjModel_, flex_dim) - 2544usize];
    ["Offset of field: mjModel_::flex_matid"]
        [::std::mem::offset_of!(mjModel_, flex_matid) - 2552usize];
    ["Offset of field: mjModel_::flex_group"]
        [::std::mem::offset_of!(mjModel_, flex_group) - 2560usize];
    ["Offset of field: mjModel_::flex_interp"]
        [::std::mem::offset_of!(mjModel_, flex_interp) - 2568usize];
    ["Offset of field: mjModel_::flex_nodeadr"]
        [::std::mem::offset_of!(mjModel_, flex_nodeadr) - 2576usize];
    ["Offset of field: mjModel_::flex_nodenum"]
        [::std::mem::offset_of!(mjModel_, flex_nodenum) - 2584usize];
    ["Offset of field: mjModel_::flex_vertadr"]
        [::std::mem::offset_of!(mjModel_, flex_vertadr) - 2592usize];
    ["Offset of field: mjModel_::flex_vertnum"]
        [::std::mem::offset_of!(mjModel_, flex_vertnum) - 2600usize];
    ["Offset of field: mjModel_::flex_edgeadr"]
        [::std::mem::offset_of!(mjModel_, flex_edgeadr) - 2608usize];
    ["Offset of field: mjModel_::flex_edgenum"]
        [::std::mem::offset_of!(mjModel_, flex_edgenum) - 2616usize];
    ["Offset of field: mjModel_::flex_elemadr"]
        [::std::mem::offset_of!(mjModel_, flex_elemadr) - 2624usize];
    ["Offset of field: mjModel_::flex_elemnum"]
        [::std::mem::offset_of!(mjModel_, flex_elemnum) - 2632usize];
    ["Offset of field: mjModel_::flex_elemdataadr"]
        [::std::mem::offset_of!(mjModel_, flex_elemdataadr) - 2640usize];
    ["Offset of field: mjModel_::flex_elemedgeadr"]
        [::std::mem::offset_of!(mjModel_, flex_elemedgeadr) - 2648usize];
    ["Offset of field: mjModel_::flex_shellnum"]
        [::std::mem::offset_of!(mjModel_, flex_shellnum) - 2656usize];
    ["Offset of field: mjModel_::flex_shelldataadr"]
        [::std::mem::offset_of!(mjModel_, flex_shelldataadr) - 2664usize];
    ["Offset of field: mjModel_::flex_evpairadr"]
        [::std::mem::offset_of!(mjModel_, flex_evpairadr) - 2672usize];
    ["Offset of field: mjModel_::flex_evpairnum"]
        [::std::mem::offset_of!(mjModel_, flex_evpairnum) - 2680usize];
    ["Offset of field: mjModel_::flex_texcoordadr"]
        [::std::mem::offset_of!(mjModel_, flex_texcoordadr) - 2688usize];
    ["Offset of field: mjModel_::flex_nodebodyid"]
        [::std::mem::offset_of!(mjModel_, flex_nodebodyid) - 2696usize];
    ["Offset of field: mjModel_::flex_vertbodyid"]
        [::std::mem::offset_of!(mjModel_, flex_vertbodyid) - 2704usize];
    ["Offset of field: mjModel_::flex_edge"]
        [::std::mem::offset_of!(mjModel_, flex_edge) - 2712usize];
    ["Offset of field: mjModel_::flex_edgeflap"]
        [::std::mem::offset_of!(mjModel_, flex_edgeflap) - 2720usize];
    ["Offset of field: mjModel_::flex_elem"]
        [::std::mem::offset_of!(mjModel_, flex_elem) - 2728usize];
    ["Offset of field: mjModel_::flex_elemtexcoord"]
        [::std::mem::offset_of!(mjModel_, flex_elemtexcoord) - 2736usize];
    ["Offset of field: mjModel_::flex_elemedge"]
        [::std::mem::offset_of!(mjModel_, flex_elemedge) - 2744usize];
    ["Offset of field: mjModel_::flex_elemlayer"]
        [::std::mem::offset_of!(mjModel_, flex_elemlayer) - 2752usize];
    ["Offset of field: mjModel_::flex_shell"]
        [::std::mem::offset_of!(mjModel_, flex_shell) - 2760usize];
    ["Offset of field: mjModel_::flex_evpair"]
        [::std::mem::offset_of!(mjModel_, flex_evpair) - 2768usize];
    ["Offset of field: mjModel_::flex_vert"]
        [::std::mem::offset_of!(mjModel_, flex_vert) - 2776usize];
    ["Offset of field: mjModel_::flex_vert0"]
        [::std::mem::offset_of!(mjModel_, flex_vert0) - 2784usize];
    ["Offset of field: mjModel_::flex_node"]
        [::std::mem::offset_of!(mjModel_, flex_node) - 2792usize];
    ["Offset of field: mjModel_::flex_node0"]
        [::std::mem::offset_of!(mjModel_, flex_node0) - 2800usize];
    ["Offset of field: mjModel_::flexedge_length0"]
        [::std::mem::offset_of!(mjModel_, flexedge_length0) - 2808usize];
    ["Offset of field: mjModel_::flexedge_invweight0"]
        [::std::mem::offset_of!(mjModel_, flexedge_invweight0) - 2816usize];
    ["Offset of field: mjModel_::flex_radius"]
        [::std::mem::offset_of!(mjModel_, flex_radius) - 2824usize];
    ["Offset of field: mjModel_::flex_stiffness"]
        [::std::mem::offset_of!(mjModel_, flex_stiffness) - 2832usize];
    ["Offset of field: mjModel_::flex_bending"]
        [::std::mem::offset_of!(mjModel_, flex_bending) - 2840usize];
    ["Offset of field: mjModel_::flex_damping"]
        [::std::mem::offset_of!(mjModel_, flex_damping) - 2848usize];
    ["Offset of field: mjModel_::flex_edgestiffness"]
        [::std::mem::offset_of!(mjModel_, flex_edgestiffness) - 2856usize];
    ["Offset of field: mjModel_::flex_edgedamping"]
        [::std::mem::offset_of!(mjModel_, flex_edgedamping) - 2864usize];
    ["Offset of field: mjModel_::flex_edgeequality"]
        [::std::mem::offset_of!(mjModel_, flex_edgeequality) - 2872usize];
    ["Offset of field: mjModel_::flex_rigid"]
        [::std::mem::offset_of!(mjModel_, flex_rigid) - 2880usize];
    ["Offset of field: mjModel_::flexedge_rigid"]
        [::std::mem::offset_of!(mjModel_, flexedge_rigid) - 2888usize];
    ["Offset of field: mjModel_::flex_centered"]
        [::std::mem::offset_of!(mjModel_, flex_centered) - 2896usize];
    ["Offset of field: mjModel_::flex_flatskin"]
        [::std::mem::offset_of!(mjModel_, flex_flatskin) - 2904usize];
    ["Offset of field: mjModel_::flex_bvhadr"]
        [::std::mem::offset_of!(mjModel_, flex_bvhadr) - 2912usize];
    ["Offset of field: mjModel_::flex_bvhnum"]
        [::std::mem::offset_of!(mjModel_, flex_bvhnum) - 2920usize];
    ["Offset of field: mjModel_::flex_rgba"]
        [::std::mem::offset_of!(mjModel_, flex_rgba) - 2928usize];
    ["Offset of field: mjModel_::flex_texcoord"]
        [::std::mem::offset_of!(mjModel_, flex_texcoord) - 2936usize];
    ["Offset of field: mjModel_::mesh_vertadr"]
        [::std::mem::offset_of!(mjModel_, mesh_vertadr) - 2944usize];
    ["Offset of field: mjModel_::mesh_vertnum"]
        [::std::mem::offset_of!(mjModel_, mesh_vertnum) - 2952usize];
    ["Offset of field: mjModel_::mesh_faceadr"]
        [::std::mem::offset_of!(mjModel_, mesh_faceadr) - 2960usize];
    ["Offset of field: mjModel_::mesh_facenum"]
        [::std::mem::offset_of!(mjModel_, mesh_facenum) - 2968usize];
    ["Offset of field: mjModel_::mesh_bvhadr"]
        [::std::mem::offset_of!(mjModel_, mesh_bvhadr) - 2976usize];
    ["Offset of field: mjModel_::mesh_bvhnum"]
        [::std::mem::offset_of!(mjModel_, mesh_bvhnum) - 2984usize];
    ["Offset of field: mjModel_::mesh_normaladr"]
        [::std::mem::offset_of!(mjModel_, mesh_normaladr) - 2992usize];
    ["Offset of field: mjModel_::mesh_normalnum"]
        [::std::mem::offset_of!(mjModel_, mesh_normalnum) - 3000usize];
    ["Offset of field: mjModel_::mesh_texcoordadr"]
        [::std::mem::offset_of!(mjModel_, mesh_texcoordadr) - 3008usize];
    ["Offset of field: mjModel_::mesh_texcoordnum"]
        [::std::mem::offset_of!(mjModel_, mesh_texcoordnum) - 3016usize];
    ["Offset of field: mjModel_::mesh_graphadr"]
        [::std::mem::offset_of!(mjModel_, mesh_graphadr) - 3024usize];
    ["Offset of field: mjModel_::mesh_vert"]
        [::std::mem::offset_of!(mjModel_, mesh_vert) - 3032usize];
    ["Offset of field: mjModel_::mesh_normal"]
        [::std::mem::offset_of!(mjModel_, mesh_normal) - 3040usize];
    ["Offset of field: mjModel_::mesh_texcoord"]
        [::std::mem::offset_of!(mjModel_, mesh_texcoord) - 3048usize];
    ["Offset of field: mjModel_::mesh_face"]
        [::std::mem::offset_of!(mjModel_, mesh_face) - 3056usize];
    ["Offset of field: mjModel_::mesh_facenormal"]
        [::std::mem::offset_of!(mjModel_, mesh_facenormal) - 3064usize];
    ["Offset of field: mjModel_::mesh_facetexcoord"]
        [::std::mem::offset_of!(mjModel_, mesh_facetexcoord) - 3072usize];
    ["Offset of field: mjModel_::mesh_graph"]
        [::std::mem::offset_of!(mjModel_, mesh_graph) - 3080usize];
    ["Offset of field: mjModel_::mesh_scale"]
        [::std::mem::offset_of!(mjModel_, mesh_scale) - 3088usize];
    ["Offset of field: mjModel_::mesh_pos"][::std::mem::offset_of!(mjModel_, mesh_pos) - 3096usize];
    ["Offset of field: mjModel_::mesh_quat"]
        [::std::mem::offset_of!(mjModel_, mesh_quat) - 3104usize];
    ["Offset of field: mjModel_::mesh_pathadr"]
        [::std::mem::offset_of!(mjModel_, mesh_pathadr) - 3112usize];
    ["Offset of field: mjModel_::mesh_polynum"]
        [::std::mem::offset_of!(mjModel_, mesh_polynum) - 3120usize];
    ["Offset of field: mjModel_::mesh_polyadr"]
        [::std::mem::offset_of!(mjModel_, mesh_polyadr) - 3128usize];
    ["Offset of field: mjModel_::mesh_polynormal"]
        [::std::mem::offset_of!(mjModel_, mesh_polynormal) - 3136usize];
    ["Offset of field: mjModel_::mesh_polyvertadr"]
        [::std::mem::offset_of!(mjModel_, mesh_polyvertadr) - 3144usize];
    ["Offset of field: mjModel_::mesh_polyvertnum"]
        [::std::mem::offset_of!(mjModel_, mesh_polyvertnum) - 3152usize];
    ["Offset of field: mjModel_::mesh_polyvert"]
        [::std::mem::offset_of!(mjModel_, mesh_polyvert) - 3160usize];
    ["Offset of field: mjModel_::mesh_polymapadr"]
        [::std::mem::offset_of!(mjModel_, mesh_polymapadr) - 3168usize];
    ["Offset of field: mjModel_::mesh_polymapnum"]
        [::std::mem::offset_of!(mjModel_, mesh_polymapnum) - 3176usize];
    ["Offset of field: mjModel_::mesh_polymap"]
        [::std::mem::offset_of!(mjModel_, mesh_polymap) - 3184usize];
    ["Offset of field: mjModel_::skin_matid"]
        [::std::mem::offset_of!(mjModel_, skin_matid) - 3192usize];
    ["Offset of field: mjModel_::skin_group"]
        [::std::mem::offset_of!(mjModel_, skin_group) - 3200usize];
    ["Offset of field: mjModel_::skin_rgba"]
        [::std::mem::offset_of!(mjModel_, skin_rgba) - 3208usize];
    ["Offset of field: mjModel_::skin_inflate"]
        [::std::mem::offset_of!(mjModel_, skin_inflate) - 3216usize];
    ["Offset of field: mjModel_::skin_vertadr"]
        [::std::mem::offset_of!(mjModel_, skin_vertadr) - 3224usize];
    ["Offset of field: mjModel_::skin_vertnum"]
        [::std::mem::offset_of!(mjModel_, skin_vertnum) - 3232usize];
    ["Offset of field: mjModel_::skin_texcoordadr"]
        [::std::mem::offset_of!(mjModel_, skin_texcoordadr) - 3240usize];
    ["Offset of field: mjModel_::skin_faceadr"]
        [::std::mem::offset_of!(mjModel_, skin_faceadr) - 3248usize];
    ["Offset of field: mjModel_::skin_facenum"]
        [::std::mem::offset_of!(mjModel_, skin_facenum) - 3256usize];
    ["Offset of field: mjModel_::skin_boneadr"]
        [::std::mem::offset_of!(mjModel_, skin_boneadr) - 3264usize];
    ["Offset of field: mjModel_::skin_bonenum"]
        [::std::mem::offset_of!(mjModel_, skin_bonenum) - 3272usize];
    ["Offset of field: mjModel_::skin_vert"]
        [::std::mem::offset_of!(mjModel_, skin_vert) - 3280usize];
    ["Offset of field: mjModel_::skin_texcoord"]
        [::std::mem::offset_of!(mjModel_, skin_texcoord) - 3288usize];
    ["Offset of field: mjModel_::skin_face"]
        [::std::mem::offset_of!(mjModel_, skin_face) - 3296usize];
    ["Offset of field: mjModel_::skin_bonevertadr"]
        [::std::mem::offset_of!(mjModel_, skin_bonevertadr) - 3304usize];
    ["Offset of field: mjModel_::skin_bonevertnum"]
        [::std::mem::offset_of!(mjModel_, skin_bonevertnum) - 3312usize];
    ["Offset of field: mjModel_::skin_bonebindpos"]
        [::std::mem::offset_of!(mjModel_, skin_bonebindpos) - 3320usize];
    ["Offset of field: mjModel_::skin_bonebindquat"]
        [::std::mem::offset_of!(mjModel_, skin_bonebindquat) - 3328usize];
    ["Offset of field: mjModel_::skin_bonebodyid"]
        [::std::mem::offset_of!(mjModel_, skin_bonebodyid) - 3336usize];
    ["Offset of field: mjModel_::skin_bonevertid"]
        [::std::mem::offset_of!(mjModel_, skin_bonevertid) - 3344usize];
    ["Offset of field: mjModel_::skin_bonevertweight"]
        [::std::mem::offset_of!(mjModel_, skin_bonevertweight) - 3352usize];
    ["Offset of field: mjModel_::skin_pathadr"]
        [::std::mem::offset_of!(mjModel_, skin_pathadr) - 3360usize];
    ["Offset of field: mjModel_::hfield_size"]
        [::std::mem::offset_of!(mjModel_, hfield_size) - 3368usize];
    ["Offset of field: mjModel_::hfield_nrow"]
        [::std::mem::offset_of!(mjModel_, hfield_nrow) - 3376usize];
    ["Offset of field: mjModel_::hfield_ncol"]
        [::std::mem::offset_of!(mjModel_, hfield_ncol) - 3384usize];
    ["Offset of field: mjModel_::hfield_adr"]
        [::std::mem::offset_of!(mjModel_, hfield_adr) - 3392usize];
    ["Offset of field: mjModel_::hfield_data"]
        [::std::mem::offset_of!(mjModel_, hfield_data) - 3400usize];
    ["Offset of field: mjModel_::hfield_pathadr"]
        [::std::mem::offset_of!(mjModel_, hfield_pathadr) - 3408usize];
    ["Offset of field: mjModel_::tex_type"][::std::mem::offset_of!(mjModel_, tex_type) - 3416usize];
    ["Offset of field: mjModel_::tex_colorspace"]
        [::std::mem::offset_of!(mjModel_, tex_colorspace) - 3424usize];
    ["Offset of field: mjModel_::tex_height"]
        [::std::mem::offset_of!(mjModel_, tex_height) - 3432usize];
    ["Offset of field: mjModel_::tex_width"]
        [::std::mem::offset_of!(mjModel_, tex_width) - 3440usize];
    ["Offset of field: mjModel_::tex_nchannel"]
        [::std::mem::offset_of!(mjModel_, tex_nchannel) - 3448usize];
    ["Offset of field: mjModel_::tex_adr"][::std::mem::offset_of!(mjModel_, tex_adr) - 3456usize];
    ["Offset of field: mjModel_::tex_data"][::std::mem::offset_of!(mjModel_, tex_data) - 3464usize];
    ["Offset of field: mjModel_::tex_pathadr"]
        [::std::mem::offset_of!(mjModel_, tex_pathadr) - 3472usize];
    ["Offset of field: mjModel_::mat_texid"]
        [::std::mem::offset_of!(mjModel_, mat_texid) - 3480usize];
    ["Offset of field: mjModel_::mat_texuniform"]
        [::std::mem::offset_of!(mjModel_, mat_texuniform) - 3488usize];
    ["Offset of field: mjModel_::mat_texrepeat"]
        [::std::mem::offset_of!(mjModel_, mat_texrepeat) - 3496usize];
    ["Offset of field: mjModel_::mat_emission"]
        [::std::mem::offset_of!(mjModel_, mat_emission) - 3504usize];
    ["Offset of field: mjModel_::mat_specular"]
        [::std::mem::offset_of!(mjModel_, mat_specular) - 3512usize];
    ["Offset of field: mjModel_::mat_shininess"]
        [::std::mem::offset_of!(mjModel_, mat_shininess) - 3520usize];
    ["Offset of field: mjModel_::mat_reflectance"]
        [::std::mem::offset_of!(mjModel_, mat_reflectance) - 3528usize];
    ["Offset of field: mjModel_::mat_metallic"]
        [::std::mem::offset_of!(mjModel_, mat_metallic) - 3536usize];
    ["Offset of field: mjModel_::mat_roughness"]
        [::std::mem::offset_of!(mjModel_, mat_roughness) - 3544usize];
    ["Offset of field: mjModel_::mat_rgba"][::std::mem::offset_of!(mjModel_, mat_rgba) - 3552usize];
    ["Offset of field: mjModel_::pair_dim"][::std::mem::offset_of!(mjModel_, pair_dim) - 3560usize];
    ["Offset of field: mjModel_::pair_geom1"]
        [::std::mem::offset_of!(mjModel_, pair_geom1) - 3568usize];
    ["Offset of field: mjModel_::pair_geom2"]
        [::std::mem::offset_of!(mjModel_, pair_geom2) - 3576usize];
    ["Offset of field: mjModel_::pair_signature"]
        [::std::mem::offset_of!(mjModel_, pair_signature) - 3584usize];
    ["Offset of field: mjModel_::pair_solref"]
        [::std::mem::offset_of!(mjModel_, pair_solref) - 3592usize];
    ["Offset of field: mjModel_::pair_solreffriction"]
        [::std::mem::offset_of!(mjModel_, pair_solreffriction) - 3600usize];
    ["Offset of field: mjModel_::pair_solimp"]
        [::std::mem::offset_of!(mjModel_, pair_solimp) - 3608usize];
    ["Offset of field: mjModel_::pair_margin"]
        [::std::mem::offset_of!(mjModel_, pair_margin) - 3616usize];
    ["Offset of field: mjModel_::pair_gap"][::std::mem::offset_of!(mjModel_, pair_gap) - 3624usize];
    ["Offset of field: mjModel_::pair_friction"]
        [::std::mem::offset_of!(mjModel_, pair_friction) - 3632usize];
    ["Offset of field: mjModel_::exclude_signature"]
        [::std::mem::offset_of!(mjModel_, exclude_signature) - 3640usize];
    ["Offset of field: mjModel_::eq_type"][::std::mem::offset_of!(mjModel_, eq_type) - 3648usize];
    ["Offset of field: mjModel_::eq_obj1id"]
        [::std::mem::offset_of!(mjModel_, eq_obj1id) - 3656usize];
    ["Offset of field: mjModel_::eq_obj2id"]
        [::std::mem::offset_of!(mjModel_, eq_obj2id) - 3664usize];
    ["Offset of field: mjModel_::eq_objtype"]
        [::std::mem::offset_of!(mjModel_, eq_objtype) - 3672usize];
    ["Offset of field: mjModel_::eq_active0"]
        [::std::mem::offset_of!(mjModel_, eq_active0) - 3680usize];
    ["Offset of field: mjModel_::eq_solref"]
        [::std::mem::offset_of!(mjModel_, eq_solref) - 3688usize];
    ["Offset of field: mjModel_::eq_solimp"]
        [::std::mem::offset_of!(mjModel_, eq_solimp) - 3696usize];
    ["Offset of field: mjModel_::eq_data"][::std::mem::offset_of!(mjModel_, eq_data) - 3704usize];
    ["Offset of field: mjModel_::tendon_adr"]
        [::std::mem::offset_of!(mjModel_, tendon_adr) - 3712usize];
    ["Offset of field: mjModel_::tendon_num"]
        [::std::mem::offset_of!(mjModel_, tendon_num) - 3720usize];
    ["Offset of field: mjModel_::tendon_matid"]
        [::std::mem::offset_of!(mjModel_, tendon_matid) - 3728usize];
    ["Offset of field: mjModel_::tendon_group"]
        [::std::mem::offset_of!(mjModel_, tendon_group) - 3736usize];
    ["Offset of field: mjModel_::tendon_limited"]
        [::std::mem::offset_of!(mjModel_, tendon_limited) - 3744usize];
    ["Offset of field: mjModel_::tendon_actfrclimited"]
        [::std::mem::offset_of!(mjModel_, tendon_actfrclimited) - 3752usize];
    ["Offset of field: mjModel_::tendon_width"]
        [::std::mem::offset_of!(mjModel_, tendon_width) - 3760usize];
    ["Offset of field: mjModel_::tendon_solref_lim"]
        [::std::mem::offset_of!(mjModel_, tendon_solref_lim) - 3768usize];
    ["Offset of field: mjModel_::tendon_solimp_lim"]
        [::std::mem::offset_of!(mjModel_, tendon_solimp_lim) - 3776usize];
    ["Offset of field: mjModel_::tendon_solref_fri"]
        [::std::mem::offset_of!(mjModel_, tendon_solref_fri) - 3784usize];
    ["Offset of field: mjModel_::tendon_solimp_fri"]
        [::std::mem::offset_of!(mjModel_, tendon_solimp_fri) - 3792usize];
    ["Offset of field: mjModel_::tendon_range"]
        [::std::mem::offset_of!(mjModel_, tendon_range) - 3800usize];
    ["Offset of field: mjModel_::tendon_actfrcrange"]
        [::std::mem::offset_of!(mjModel_, tendon_actfrcrange) - 3808usize];
    ["Offset of field: mjModel_::tendon_margin"]
        [::std::mem::offset_of!(mjModel_, tendon_margin) - 3816usize];
    ["Offset of field: mjModel_::tendon_stiffness"]
        [::std::mem::offset_of!(mjModel_, tendon_stiffness) - 3824usize];
    ["Offset of field: mjModel_::tendon_damping"]
        [::std::mem::offset_of!(mjModel_, tendon_damping) - 3832usize];
    ["Offset of field: mjModel_::tendon_armature"]
        [::std::mem::offset_of!(mjModel_, tendon_armature) - 3840usize];
    ["Offset of field: mjModel_::tendon_frictionloss"]
        [::std::mem::offset_of!(mjModel_, tendon_frictionloss) - 3848usize];
    ["Offset of field: mjModel_::tendon_lengthspring"]
        [::std::mem::offset_of!(mjModel_, tendon_lengthspring) - 3856usize];
    ["Offset of field: mjModel_::tendon_length0"]
        [::std::mem::offset_of!(mjModel_, tendon_length0) - 3864usize];
    ["Offset of field: mjModel_::tendon_invweight0"]
        [::std::mem::offset_of!(mjModel_, tendon_invweight0) - 3872usize];
    ["Offset of field: mjModel_::tendon_user"]
        [::std::mem::offset_of!(mjModel_, tendon_user) - 3880usize];
    ["Offset of field: mjModel_::tendon_rgba"]
        [::std::mem::offset_of!(mjModel_, tendon_rgba) - 3888usize];
    ["Offset of field: mjModel_::wrap_type"]
        [::std::mem::offset_of!(mjModel_, wrap_type) - 3896usize];
    ["Offset of field: mjModel_::wrap_objid"]
        [::std::mem::offset_of!(mjModel_, wrap_objid) - 3904usize];
    ["Offset of field: mjModel_::wrap_prm"][::std::mem::offset_of!(mjModel_, wrap_prm) - 3912usize];
    ["Offset of field: mjModel_::actuator_trntype"]
        [::std::mem::offset_of!(mjModel_, actuator_trntype) - 3920usize];
    ["Offset of field: mjModel_::actuator_dyntype"]
        [::std::mem::offset_of!(mjModel_, actuator_dyntype) - 3928usize];
    ["Offset of field: mjModel_::actuator_gaintype"]
        [::std::mem::offset_of!(mjModel_, actuator_gaintype) - 3936usize];
    ["Offset of field: mjModel_::actuator_biastype"]
        [::std::mem::offset_of!(mjModel_, actuator_biastype) - 3944usize];
    ["Offset of field: mjModel_::actuator_trnid"]
        [::std::mem::offset_of!(mjModel_, actuator_trnid) - 3952usize];
    ["Offset of field: mjModel_::actuator_actadr"]
        [::std::mem::offset_of!(mjModel_, actuator_actadr) - 3960usize];
    ["Offset of field: mjModel_::actuator_actnum"]
        [::std::mem::offset_of!(mjModel_, actuator_actnum) - 3968usize];
    ["Offset of field: mjModel_::actuator_group"]
        [::std::mem::offset_of!(mjModel_, actuator_group) - 3976usize];
    ["Offset of field: mjModel_::actuator_ctrllimited"]
        [::std::mem::offset_of!(mjModel_, actuator_ctrllimited) - 3984usize];
    ["Offset of field: mjModel_::actuator_forcelimited"]
        [::std::mem::offset_of!(mjModel_, actuator_forcelimited) - 3992usize];
    ["Offset of field: mjModel_::actuator_actlimited"]
        [::std::mem::offset_of!(mjModel_, actuator_actlimited) - 4000usize];
    ["Offset of field: mjModel_::actuator_dynprm"]
        [::std::mem::offset_of!(mjModel_, actuator_dynprm) - 4008usize];
    ["Offset of field: mjModel_::actuator_gainprm"]
        [::std::mem::offset_of!(mjModel_, actuator_gainprm) - 4016usize];
    ["Offset of field: mjModel_::actuator_biasprm"]
        [::std::mem::offset_of!(mjModel_, actuator_biasprm) - 4024usize];
    ["Offset of field: mjModel_::actuator_actearly"]
        [::std::mem::offset_of!(mjModel_, actuator_actearly) - 4032usize];
    ["Offset of field: mjModel_::actuator_ctrlrange"]
        [::std::mem::offset_of!(mjModel_, actuator_ctrlrange) - 4040usize];
    ["Offset of field: mjModel_::actuator_forcerange"]
        [::std::mem::offset_of!(mjModel_, actuator_forcerange) - 4048usize];
    ["Offset of field: mjModel_::actuator_actrange"]
        [::std::mem::offset_of!(mjModel_, actuator_actrange) - 4056usize];
    ["Offset of field: mjModel_::actuator_gear"]
        [::std::mem::offset_of!(mjModel_, actuator_gear) - 4064usize];
    ["Offset of field: mjModel_::actuator_cranklength"]
        [::std::mem::offset_of!(mjModel_, actuator_cranklength) - 4072usize];
    ["Offset of field: mjModel_::actuator_acc0"]
        [::std::mem::offset_of!(mjModel_, actuator_acc0) - 4080usize];
    ["Offset of field: mjModel_::actuator_length0"]
        [::std::mem::offset_of!(mjModel_, actuator_length0) - 4088usize];
    ["Offset of field: mjModel_::actuator_lengthrange"]
        [::std::mem::offset_of!(mjModel_, actuator_lengthrange) - 4096usize];
    ["Offset of field: mjModel_::actuator_user"]
        [::std::mem::offset_of!(mjModel_, actuator_user) - 4104usize];
    ["Offset of field: mjModel_::actuator_plugin"]
        [::std::mem::offset_of!(mjModel_, actuator_plugin) - 4112usize];
    ["Offset of field: mjModel_::sensor_type"]
        [::std::mem::offset_of!(mjModel_, sensor_type) - 4120usize];
    ["Offset of field: mjModel_::sensor_datatype"]
        [::std::mem::offset_of!(mjModel_, sensor_datatype) - 4128usize];
    ["Offset of field: mjModel_::sensor_needstage"]
        [::std::mem::offset_of!(mjModel_, sensor_needstage) - 4136usize];
    ["Offset of field: mjModel_::sensor_objtype"]
        [::std::mem::offset_of!(mjModel_, sensor_objtype) - 4144usize];
    ["Offset of field: mjModel_::sensor_objid"]
        [::std::mem::offset_of!(mjModel_, sensor_objid) - 4152usize];
    ["Offset of field: mjModel_::sensor_reftype"]
        [::std::mem::offset_of!(mjModel_, sensor_reftype) - 4160usize];
    ["Offset of field: mjModel_::sensor_refid"]
        [::std::mem::offset_of!(mjModel_, sensor_refid) - 4168usize];
    ["Offset of field: mjModel_::sensor_dim"]
        [::std::mem::offset_of!(mjModel_, sensor_dim) - 4176usize];
    ["Offset of field: mjModel_::sensor_adr"]
        [::std::mem::offset_of!(mjModel_, sensor_adr) - 4184usize];
    ["Offset of field: mjModel_::sensor_cutoff"]
        [::std::mem::offset_of!(mjModel_, sensor_cutoff) - 4192usize];
    ["Offset of field: mjModel_::sensor_noise"]
        [::std::mem::offset_of!(mjModel_, sensor_noise) - 4200usize];
    ["Offset of field: mjModel_::sensor_user"]
        [::std::mem::offset_of!(mjModel_, sensor_user) - 4208usize];
    ["Offset of field: mjModel_::sensor_plugin"]
        [::std::mem::offset_of!(mjModel_, sensor_plugin) - 4216usize];
    ["Offset of field: mjModel_::plugin"][::std::mem::offset_of!(mjModel_, plugin) - 4224usize];
    ["Offset of field: mjModel_::plugin_stateadr"]
        [::std::mem::offset_of!(mjModel_, plugin_stateadr) - 4232usize];
    ["Offset of field: mjModel_::plugin_statenum"]
        [::std::mem::offset_of!(mjModel_, plugin_statenum) - 4240usize];
    ["Offset of field: mjModel_::plugin_attr"]
        [::std::mem::offset_of!(mjModel_, plugin_attr) - 4248usize];
    ["Offset of field: mjModel_::plugin_attradr"]
        [::std::mem::offset_of!(mjModel_, plugin_attradr) - 4256usize];
    ["Offset of field: mjModel_::numeric_adr"]
        [::std::mem::offset_of!(mjModel_, numeric_adr) - 4264usize];
    ["Offset of field: mjModel_::numeric_size"]
        [::std::mem::offset_of!(mjModel_, numeric_size) - 4272usize];
    ["Offset of field: mjModel_::numeric_data"]
        [::std::mem::offset_of!(mjModel_, numeric_data) - 4280usize];
    ["Offset of field: mjModel_::text_adr"][::std::mem::offset_of!(mjModel_, text_adr) - 4288usize];
    ["Offset of field: mjModel_::text_size"]
        [::std::mem::offset_of!(mjModel_, text_size) - 4296usize];
    ["Offset of field: mjModel_::text_data"]
        [::std::mem::offset_of!(mjModel_, text_data) - 4304usize];
    ["Offset of field: mjModel_::tuple_adr"]
        [::std::mem::offset_of!(mjModel_, tuple_adr) - 4312usize];
    ["Offset of field: mjModel_::tuple_size"]
        [::std::mem::offset_of!(mjModel_, tuple_size) - 4320usize];
    ["Offset of field: mjModel_::tuple_objtype"]
        [::std::mem::offset_of!(mjModel_, tuple_objtype) - 4328usize];
    ["Offset of field: mjModel_::tuple_objid"]
        [::std::mem::offset_of!(mjModel_, tuple_objid) - 4336usize];
    ["Offset of field: mjModel_::tuple_objprm"]
        [::std::mem::offset_of!(mjModel_, tuple_objprm) - 4344usize];
    ["Offset of field: mjModel_::key_time"][::std::mem::offset_of!(mjModel_, key_time) - 4352usize];
    ["Offset of field: mjModel_::key_qpos"][::std::mem::offset_of!(mjModel_, key_qpos) - 4360usize];
    ["Offset of field: mjModel_::key_qvel"][::std::mem::offset_of!(mjModel_, key_qvel) - 4368usize];
    ["Offset of field: mjModel_::key_act"][::std::mem::offset_of!(mjModel_, key_act) - 4376usize];
    ["Offset of field: mjModel_::key_mpos"][::std::mem::offset_of!(mjModel_, key_mpos) - 4384usize];
    ["Offset of field: mjModel_::key_mquat"]
        [::std::mem::offset_of!(mjModel_, key_mquat) - 4392usize];
    ["Offset of field: mjModel_::key_ctrl"][::std::mem::offset_of!(mjModel_, key_ctrl) - 4400usize];
    ["Offset of field: mjModel_::name_bodyadr"]
        [::std::mem::offset_of!(mjModel_, name_bodyadr) - 4408usize];
    ["Offset of field: mjModel_::name_jntadr"]
        [::std::mem::offset_of!(mjModel_, name_jntadr) - 4416usize];
    ["Offset of field: mjModel_::name_geomadr"]
        [::std::mem::offset_of!(mjModel_, name_geomadr) - 4424usize];
    ["Offset of field: mjModel_::name_siteadr"]
        [::std::mem::offset_of!(mjModel_, name_siteadr) - 4432usize];
    ["Offset of field: mjModel_::name_camadr"]
        [::std::mem::offset_of!(mjModel_, name_camadr) - 4440usize];
    ["Offset of field: mjModel_::name_lightadr"]
        [::std::mem::offset_of!(mjModel_, name_lightadr) - 4448usize];
    ["Offset of field: mjModel_::name_flexadr"]
        [::std::mem::offset_of!(mjModel_, name_flexadr) - 4456usize];
    ["Offset of field: mjModel_::name_meshadr"]
        [::std::mem::offset_of!(mjModel_, name_meshadr) - 4464usize];
    ["Offset of field: mjModel_::name_skinadr"]
        [::std::mem::offset_of!(mjModel_, name_skinadr) - 4472usize];
    ["Offset of field: mjModel_::name_hfieldadr"]
        [::std::mem::offset_of!(mjModel_, name_hfieldadr) - 4480usize];
    ["Offset of field: mjModel_::name_texadr"]
        [::std::mem::offset_of!(mjModel_, name_texadr) - 4488usize];
    ["Offset of field: mjModel_::name_matadr"]
        [::std::mem::offset_of!(mjModel_, name_matadr) - 4496usize];
    ["Offset of field: mjModel_::name_pairadr"]
        [::std::mem::offset_of!(mjModel_, name_pairadr) - 4504usize];
    ["Offset of field: mjModel_::name_excludeadr"]
        [::std::mem::offset_of!(mjModel_, name_excludeadr) - 4512usize];
    ["Offset of field: mjModel_::name_eqadr"]
        [::std::mem::offset_of!(mjModel_, name_eqadr) - 4520usize];
    ["Offset of field: mjModel_::name_tendonadr"]
        [::std::mem::offset_of!(mjModel_, name_tendonadr) - 4528usize];
    ["Offset of field: mjModel_::name_actuatoradr"]
        [::std::mem::offset_of!(mjModel_, name_actuatoradr) - 4536usize];
    ["Offset of field: mjModel_::name_sensoradr"]
        [::std::mem::offset_of!(mjModel_, name_sensoradr) - 4544usize];
    ["Offset of field: mjModel_::name_numericadr"]
        [::std::mem::offset_of!(mjModel_, name_numericadr) - 4552usize];
    ["Offset of field: mjModel_::name_textadr"]
        [::std::mem::offset_of!(mjModel_, name_textadr) - 4560usize];
    ["Offset of field: mjModel_::name_tupleadr"]
        [::std::mem::offset_of!(mjModel_, name_tupleadr) - 4568usize];
    ["Offset of field: mjModel_::name_keyadr"]
        [::std::mem::offset_of!(mjModel_, name_keyadr) - 4576usize];
    ["Offset of field: mjModel_::name_pluginadr"]
        [::std::mem::offset_of!(mjModel_, name_pluginadr) - 4584usize];
    ["Offset of field: mjModel_::names"][::std::mem::offset_of!(mjModel_, names) - 4592usize];
    ["Offset of field: mjModel_::names_map"]
        [::std::mem::offset_of!(mjModel_, names_map) - 4600usize];
    ["Offset of field: mjModel_::paths"][::std::mem::offset_of!(mjModel_, paths) - 4608usize];
    ["Offset of field: mjModel_::signature"]
        [::std::mem::offset_of!(mjModel_, signature) - 4616usize];
};
pub type mjModel = mjModel_;
pub const mjtTaskStatus__mjTASK_NEW: mjtTaskStatus_ = 0;
pub const mjtTaskStatus__mjTASK_QUEUED: mjtTaskStatus_ = 1;
pub const mjtTaskStatus__mjTASK_COMPLETED: mjtTaskStatus_ = 2;
pub type mjtTaskStatus_ = ::std::os::raw::c_uint;
pub use self::mjtTaskStatus_ as mjtTaskStatus;
pub type mjfTask = ::std::option::Option<
    unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void) -> *mut ::std::os::raw::c_void,
>;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjThreadPool_ {
    pub nworker: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjThreadPool_"][::std::mem::size_of::<mjThreadPool_>() - 4usize];
    ["Alignment of mjThreadPool_"][::std::mem::align_of::<mjThreadPool_>() - 4usize];
    ["Offset of field: mjThreadPool_::nworker"]
        [::std::mem::offset_of!(mjThreadPool_, nworker) - 0usize];
};
pub type mjThreadPool = mjThreadPool_;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjTask_ {
    pub func: mjfTask,
    pub args: *mut ::std::os::raw::c_void,
    pub status: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjTask_"][::std::mem::size_of::<mjTask_>() - 24usize];
    ["Alignment of mjTask_"][::std::mem::align_of::<mjTask_>() - 8usize];
    ["Offset of field: mjTask_::func"][::std::mem::offset_of!(mjTask_, func) - 0usize];
    ["Offset of field: mjTask_::args"][::std::mem::offset_of!(mjTask_, args) - 8usize];
    ["Offset of field: mjTask_::status"][::std::mem::offset_of!(mjTask_, status) - 16usize];
};
pub type mjTask = mjTask_;
pub const mjtState__mjSTATE_TIME: mjtState_ = 1;
pub const mjtState__mjSTATE_QPOS: mjtState_ = 2;
pub const mjtState__mjSTATE_QVEL: mjtState_ = 4;
pub const mjtState__mjSTATE_ACT: mjtState_ = 8;
pub const mjtState__mjSTATE_WARMSTART: mjtState_ = 16;
pub const mjtState__mjSTATE_CTRL: mjtState_ = 32;
pub const mjtState__mjSTATE_QFRC_APPLIED: mjtState_ = 64;
pub const mjtState__mjSTATE_XFRC_APPLIED: mjtState_ = 128;
pub const mjtState__mjSTATE_EQ_ACTIVE: mjtState_ = 256;
pub const mjtState__mjSTATE_MOCAP_POS: mjtState_ = 512;
pub const mjtState__mjSTATE_MOCAP_QUAT: mjtState_ = 1024;
pub const mjtState__mjSTATE_USERDATA: mjtState_ = 2048;
pub const mjtState__mjSTATE_PLUGIN: mjtState_ = 4096;
pub const mjtState__mjNSTATE: mjtState_ = 13;
pub const mjtState__mjSTATE_PHYSICS: mjtState_ = 14;
pub const mjtState__mjSTATE_FULLPHYSICS: mjtState_ = 4111;
pub const mjtState__mjSTATE_USER: mjtState_ = 4064;
pub const mjtState__mjSTATE_INTEGRATION: mjtState_ = 8191;
pub type mjtState_ = ::std::os::raw::c_uint;
pub use self::mjtState_ as mjtState;
pub const mjtWarning__mjWARN_INERTIA: mjtWarning_ = 0;
pub const mjtWarning__mjWARN_CONTACTFULL: mjtWarning_ = 1;
pub const mjtWarning__mjWARN_CNSTRFULL: mjtWarning_ = 2;
pub const mjtWarning__mjWARN_VGEOMFULL: mjtWarning_ = 3;
pub const mjtWarning__mjWARN_BADQPOS: mjtWarning_ = 4;
pub const mjtWarning__mjWARN_BADQVEL: mjtWarning_ = 5;
pub const mjtWarning__mjWARN_BADQACC: mjtWarning_ = 6;
pub const mjtWarning__mjWARN_BADCTRL: mjtWarning_ = 7;
pub const mjtWarning__mjNWARNING: mjtWarning_ = 8;
pub type mjtWarning_ = ::std::os::raw::c_uint;
pub use self::mjtWarning_ as mjtWarning;
pub const mjtTimer__mjTIMER_STEP: mjtTimer_ = 0;
pub const mjtTimer__mjTIMER_FORWARD: mjtTimer_ = 1;
pub const mjtTimer__mjTIMER_INVERSE: mjtTimer_ = 2;
pub const mjtTimer__mjTIMER_POSITION: mjtTimer_ = 3;
pub const mjtTimer__mjTIMER_VELOCITY: mjtTimer_ = 4;
pub const mjtTimer__mjTIMER_ACTUATION: mjtTimer_ = 5;
pub const mjtTimer__mjTIMER_CONSTRAINT: mjtTimer_ = 6;
pub const mjtTimer__mjTIMER_ADVANCE: mjtTimer_ = 7;
pub const mjtTimer__mjTIMER_POS_KINEMATICS: mjtTimer_ = 8;
pub const mjtTimer__mjTIMER_POS_INERTIA: mjtTimer_ = 9;
pub const mjtTimer__mjTIMER_POS_COLLISION: mjtTimer_ = 10;
pub const mjtTimer__mjTIMER_POS_MAKE: mjtTimer_ = 11;
pub const mjtTimer__mjTIMER_POS_PROJECT: mjtTimer_ = 12;
pub const mjtTimer__mjTIMER_COL_BROAD: mjtTimer_ = 13;
pub const mjtTimer__mjTIMER_COL_NARROW: mjtTimer_ = 14;
pub const mjtTimer__mjNTIMER: mjtTimer_ = 15;
pub type mjtTimer_ = ::std::os::raw::c_uint;
pub use self::mjtTimer_ as mjtTimer;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjContact_ {
    pub dist: mjtNum,
    pub pos: [mjtNum; 3usize],
    pub frame: [mjtNum; 9usize],
    pub includemargin: mjtNum,
    pub friction: [mjtNum; 5usize],
    pub solref: [mjtNum; 2usize],
    pub solreffriction: [mjtNum; 2usize],
    pub solimp: [mjtNum; 5usize],
    pub mu: mjtNum,
    pub H: [mjtNum; 36usize],
    pub dim: ::std::os::raw::c_int,
    pub geom1: ::std::os::raw::c_int,
    pub geom2: ::std::os::raw::c_int,
    pub geom: [::std::os::raw::c_int; 2usize],
    pub flex: [::std::os::raw::c_int; 2usize],
    pub elem: [::std::os::raw::c_int; 2usize],
    pub vert: [::std::os::raw::c_int; 2usize],
    pub exclude: ::std::os::raw::c_int,
    pub efc_address: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjContact_"][::std::mem::size_of::<mjContact_>() - 576usize];
    ["Alignment of mjContact_"][::std::mem::align_of::<mjContact_>() - 8usize];
    ["Offset of field: mjContact_::dist"][::std::mem::offset_of!(mjContact_, dist) - 0usize];
    ["Offset of field: mjContact_::pos"][::std::mem::offset_of!(mjContact_, pos) - 8usize];
    ["Offset of field: mjContact_::frame"][::std::mem::offset_of!(mjContact_, frame) - 32usize];
    ["Offset of field: mjContact_::includemargin"]
        [::std::mem::offset_of!(mjContact_, includemargin) - 104usize];
    ["Offset of field: mjContact_::friction"]
        [::std::mem::offset_of!(mjContact_, friction) - 112usize];
    ["Offset of field: mjContact_::solref"][::std::mem::offset_of!(mjContact_, solref) - 152usize];
    ["Offset of field: mjContact_::solreffriction"]
        [::std::mem::offset_of!(mjContact_, solreffriction) - 168usize];
    ["Offset of field: mjContact_::solimp"][::std::mem::offset_of!(mjContact_, solimp) - 184usize];
    ["Offset of field: mjContact_::mu"][::std::mem::offset_of!(mjContact_, mu) - 224usize];
    ["Offset of field: mjContact_::H"][::std::mem::offset_of!(mjContact_, H) - 232usize];
    ["Offset of field: mjContact_::dim"][::std::mem::offset_of!(mjContact_, dim) - 520usize];
    ["Offset of field: mjContact_::geom1"][::std::mem::offset_of!(mjContact_, geom1) - 524usize];
    ["Offset of field: mjContact_::geom2"][::std::mem::offset_of!(mjContact_, geom2) - 528usize];
    ["Offset of field: mjContact_::geom"][::std::mem::offset_of!(mjContact_, geom) - 532usize];
    ["Offset of field: mjContact_::flex"][::std::mem::offset_of!(mjContact_, flex) - 540usize];
    ["Offset of field: mjContact_::elem"][::std::mem::offset_of!(mjContact_, elem) - 548usize];
    ["Offset of field: mjContact_::vert"][::std::mem::offset_of!(mjContact_, vert) - 556usize];
    ["Offset of field: mjContact_::exclude"]
        [::std::mem::offset_of!(mjContact_, exclude) - 564usize];
    ["Offset of field: mjContact_::efc_address"]
        [::std::mem::offset_of!(mjContact_, efc_address) - 568usize];
};
pub type mjContact = mjContact_;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjWarningStat_ {
    pub lastinfo: ::std::os::raw::c_int,
    pub number: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjWarningStat_"][::std::mem::size_of::<mjWarningStat_>() - 8usize];
    ["Alignment of mjWarningStat_"][::std::mem::align_of::<mjWarningStat_>() - 4usize];
    ["Offset of field: mjWarningStat_::lastinfo"]
        [::std::mem::offset_of!(mjWarningStat_, lastinfo) - 0usize];
    ["Offset of field: mjWarningStat_::number"]
        [::std::mem::offset_of!(mjWarningStat_, number) - 4usize];
};
pub type mjWarningStat = mjWarningStat_;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjTimerStat_ {
    pub duration: mjtNum,
    pub number: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjTimerStat_"][::std::mem::size_of::<mjTimerStat_>() - 16usize];
    ["Alignment of mjTimerStat_"][::std::mem::align_of::<mjTimerStat_>() - 8usize];
    ["Offset of field: mjTimerStat_::duration"]
        [::std::mem::offset_of!(mjTimerStat_, duration) - 0usize];
    ["Offset of field: mjTimerStat_::number"]
        [::std::mem::offset_of!(mjTimerStat_, number) - 8usize];
};
pub type mjTimerStat = mjTimerStat_;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjSolverStat_ {
    pub improvement: mjtNum,
    pub gradient: mjtNum,
    pub lineslope: mjtNum,
    pub nactive: ::std::os::raw::c_int,
    pub nchange: ::std::os::raw::c_int,
    pub neval: ::std::os::raw::c_int,
    pub nupdate: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjSolverStat_"][::std::mem::size_of::<mjSolverStat_>() - 40usize];
    ["Alignment of mjSolverStat_"][::std::mem::align_of::<mjSolverStat_>() - 8usize];
    ["Offset of field: mjSolverStat_::improvement"]
        [::std::mem::offset_of!(mjSolverStat_, improvement) - 0usize];
    ["Offset of field: mjSolverStat_::gradient"]
        [::std::mem::offset_of!(mjSolverStat_, gradient) - 8usize];
    ["Offset of field: mjSolverStat_::lineslope"]
        [::std::mem::offset_of!(mjSolverStat_, lineslope) - 16usize];
    ["Offset of field: mjSolverStat_::nactive"]
        [::std::mem::offset_of!(mjSolverStat_, nactive) - 24usize];
    ["Offset of field: mjSolverStat_::nchange"]
        [::std::mem::offset_of!(mjSolverStat_, nchange) - 28usize];
    ["Offset of field: mjSolverStat_::neval"]
        [::std::mem::offset_of!(mjSolverStat_, neval) - 32usize];
    ["Offset of field: mjSolverStat_::nupdate"]
        [::std::mem::offset_of!(mjSolverStat_, nupdate) - 36usize];
};
pub type mjSolverStat = mjSolverStat_;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mjData_ {
    pub narena: usize,
    pub nbuffer: usize,
    pub nplugin: ::std::os::raw::c_int,
    pub pstack: usize,
    pub pbase: usize,
    pub parena: usize,
    pub maxuse_stack: usize,
    pub maxuse_threadstack: [usize; 128usize],
    pub maxuse_arena: usize,
    pub maxuse_con: ::std::os::raw::c_int,
    pub maxuse_efc: ::std::os::raw::c_int,
    pub solver: [mjSolverStat; 4000usize],
    pub solver_niter: [::std::os::raw::c_int; 20usize],
    pub solver_nnz: [::std::os::raw::c_int; 20usize],
    pub solver_fwdinv: [mjtNum; 2usize],
    pub warning: [mjWarningStat; 8usize],
    pub timer: [mjTimerStat; 15usize],
    pub ncon: ::std::os::raw::c_int,
    pub ne: ::std::os::raw::c_int,
    pub nf: ::std::os::raw::c_int,
    pub nl: ::std::os::raw::c_int,
    pub nefc: ::std::os::raw::c_int,
    pub nJ: ::std::os::raw::c_int,
    pub nA: ::std::os::raw::c_int,
    pub nisland: ::std::os::raw::c_int,
    pub nidof: ::std::os::raw::c_int,
    pub time: mjtNum,
    pub energy: [mjtNum; 2usize],
    pub buffer: *mut ::std::os::raw::c_void,
    pub arena: *mut ::std::os::raw::c_void,
    pub qpos: *mut mjtNum,
    pub qvel: *mut mjtNum,
    pub act: *mut mjtNum,
    pub qacc_warmstart: *mut mjtNum,
    pub plugin_state: *mut mjtNum,
    pub ctrl: *mut mjtNum,
    pub qfrc_applied: *mut mjtNum,
    pub xfrc_applied: *mut mjtNum,
    pub eq_active: *mut mjtByte,
    pub mocap_pos: *mut mjtNum,
    pub mocap_quat: *mut mjtNum,
    pub qacc: *mut mjtNum,
    pub act_dot: *mut mjtNum,
    pub userdata: *mut mjtNum,
    pub sensordata: *mut mjtNum,
    pub plugin: *mut ::std::os::raw::c_int,
    pub plugin_data: *mut usize,
    pub xpos: *mut mjtNum,
    pub xquat: *mut mjtNum,
    pub xmat: *mut mjtNum,
    pub xipos: *mut mjtNum,
    pub ximat: *mut mjtNum,
    pub xanchor: *mut mjtNum,
    pub xaxis: *mut mjtNum,
    pub geom_xpos: *mut mjtNum,
    pub geom_xmat: *mut mjtNum,
    pub site_xpos: *mut mjtNum,
    pub site_xmat: *mut mjtNum,
    pub cam_xpos: *mut mjtNum,
    pub cam_xmat: *mut mjtNum,
    pub light_xpos: *mut mjtNum,
    pub light_xdir: *mut mjtNum,
    pub subtree_com: *mut mjtNum,
    pub cdof: *mut mjtNum,
    pub cinert: *mut mjtNum,
    pub flexvert_xpos: *mut mjtNum,
    pub flexelem_aabb: *mut mjtNum,
    pub flexedge_J_rownnz: *mut ::std::os::raw::c_int,
    pub flexedge_J_rowadr: *mut ::std::os::raw::c_int,
    pub flexedge_J_colind: *mut ::std::os::raw::c_int,
    pub flexedge_J: *mut mjtNum,
    pub flexedge_length: *mut mjtNum,
    pub ten_wrapadr: *mut ::std::os::raw::c_int,
    pub ten_wrapnum: *mut ::std::os::raw::c_int,
    pub ten_J_rownnz: *mut ::std::os::raw::c_int,
    pub ten_J_rowadr: *mut ::std::os::raw::c_int,
    pub ten_J_colind: *mut ::std::os::raw::c_int,
    pub ten_J: *mut mjtNum,
    pub ten_length: *mut mjtNum,
    pub wrap_obj: *mut ::std::os::raw::c_int,
    pub wrap_xpos: *mut mjtNum,
    pub actuator_length: *mut mjtNum,
    pub moment_rownnz: *mut ::std::os::raw::c_int,
    pub moment_rowadr: *mut ::std::os::raw::c_int,
    pub moment_colind: *mut ::std::os::raw::c_int,
    pub actuator_moment: *mut mjtNum,
    pub crb: *mut mjtNum,
    pub qM: *mut mjtNum,
    pub M: *mut mjtNum,
    pub qLD: *mut mjtNum,
    pub qLDiagInv: *mut mjtNum,
    pub bvh_aabb_dyn: *mut mjtNum,
    pub bvh_active: *mut mjtByte,
    pub flexedge_velocity: *mut mjtNum,
    pub ten_velocity: *mut mjtNum,
    pub actuator_velocity: *mut mjtNum,
    pub cvel: *mut mjtNum,
    pub cdof_dot: *mut mjtNum,
    pub qfrc_bias: *mut mjtNum,
    pub qfrc_spring: *mut mjtNum,
    pub qfrc_damper: *mut mjtNum,
    pub qfrc_gravcomp: *mut mjtNum,
    pub qfrc_fluid: *mut mjtNum,
    pub qfrc_passive: *mut mjtNum,
    pub subtree_linvel: *mut mjtNum,
    pub subtree_angmom: *mut mjtNum,
    pub qH: *mut mjtNum,
    pub qHDiagInv: *mut mjtNum,
    pub B_rownnz: *mut ::std::os::raw::c_int,
    pub B_rowadr: *mut ::std::os::raw::c_int,
    pub B_colind: *mut ::std::os::raw::c_int,
    pub M_rownnz: *mut ::std::os::raw::c_int,
    pub M_rowadr: *mut ::std::os::raw::c_int,
    pub M_colind: *mut ::std::os::raw::c_int,
    pub mapM2M: *mut ::std::os::raw::c_int,
    pub D_rownnz: *mut ::std::os::raw::c_int,
    pub D_rowadr: *mut ::std::os::raw::c_int,
    pub D_diag: *mut ::std::os::raw::c_int,
    pub D_colind: *mut ::std::os::raw::c_int,
    pub mapM2D: *mut ::std::os::raw::c_int,
    pub mapD2M: *mut ::std::os::raw::c_int,
    pub qDeriv: *mut mjtNum,
    pub qLU: *mut mjtNum,
    pub actuator_force: *mut mjtNum,
    pub qfrc_actuator: *mut mjtNum,
    pub qfrc_smooth: *mut mjtNum,
    pub qacc_smooth: *mut mjtNum,
    pub qfrc_constraint: *mut mjtNum,
    pub qfrc_inverse: *mut mjtNum,
    pub cacc: *mut mjtNum,
    pub cfrc_int: *mut mjtNum,
    pub cfrc_ext: *mut mjtNum,
    pub contact: *mut mjContact,
    pub efc_type: *mut ::std::os::raw::c_int,
    pub efc_id: *mut ::std::os::raw::c_int,
    pub efc_J_rownnz: *mut ::std::os::raw::c_int,
    pub efc_J_rowadr: *mut ::std::os::raw::c_int,
    pub efc_J_rowsuper: *mut ::std::os::raw::c_int,
    pub efc_J_colind: *mut ::std::os::raw::c_int,
    pub efc_JT_rownnz: *mut ::std::os::raw::c_int,
    pub efc_JT_rowadr: *mut ::std::os::raw::c_int,
    pub efc_JT_rowsuper: *mut ::std::os::raw::c_int,
    pub efc_JT_colind: *mut ::std::os::raw::c_int,
    pub efc_J: *mut mjtNum,
    pub efc_JT: *mut mjtNum,
    pub efc_pos: *mut mjtNum,
    pub efc_margin: *mut mjtNum,
    pub efc_frictionloss: *mut mjtNum,
    pub efc_diagApprox: *mut mjtNum,
    pub efc_KBIP: *mut mjtNum,
    pub efc_D: *mut mjtNum,
    pub efc_R: *mut mjtNum,
    pub tendon_efcadr: *mut ::std::os::raw::c_int,
    pub dof_island: *mut ::std::os::raw::c_int,
    pub island_nv: *mut ::std::os::raw::c_int,
    pub island_idofadr: *mut ::std::os::raw::c_int,
    pub island_dofadr: *mut ::std::os::raw::c_int,
    pub map_dof2idof: *mut ::std::os::raw::c_int,
    pub map_idof2dof: *mut ::std::os::raw::c_int,
    pub ifrc_smooth: *mut mjtNum,
    pub iacc_smooth: *mut mjtNum,
    pub iM_rownnz: *mut ::std::os::raw::c_int,
    pub iM_rowadr: *mut ::std::os::raw::c_int,
    pub iM_colind: *mut ::std::os::raw::c_int,
    pub iM: *mut mjtNum,
    pub iLD: *mut mjtNum,
    pub iLDiagInv: *mut mjtNum,
    pub iacc: *mut mjtNum,
    pub efc_island: *mut ::std::os::raw::c_int,
    pub island_ne: *mut ::std::os::raw::c_int,
    pub island_nf: *mut ::std::os::raw::c_int,
    pub island_nefc: *mut ::std::os::raw::c_int,
    pub island_iefcadr: *mut ::std::os::raw::c_int,
    pub map_efc2iefc: *mut ::std::os::raw::c_int,
    pub map_iefc2efc: *mut ::std::os::raw::c_int,
    pub iefc_type: *mut ::std::os::raw::c_int,
    pub iefc_id: *mut ::std::os::raw::c_int,
    pub iefc_J_rownnz: *mut ::std::os::raw::c_int,
    pub iefc_J_rowadr: *mut ::std::os::raw::c_int,
    pub iefc_J_rowsuper: *mut ::std::os::raw::c_int,
    pub iefc_J_colind: *mut ::std::os::raw::c_int,
    pub iefc_JT_rownnz: *mut ::std::os::raw::c_int,
    pub iefc_JT_rowadr: *mut ::std::os::raw::c_int,
    pub iefc_JT_rowsuper: *mut ::std::os::raw::c_int,
    pub iefc_JT_colind: *mut ::std::os::raw::c_int,
    pub iefc_J: *mut mjtNum,
    pub iefc_JT: *mut mjtNum,
    pub iefc_frictionloss: *mut mjtNum,
    pub iefc_D: *mut mjtNum,
    pub iefc_R: *mut mjtNum,
    pub efc_AR_rownnz: *mut ::std::os::raw::c_int,
    pub efc_AR_rowadr: *mut ::std::os::raw::c_int,
    pub efc_AR_colind: *mut ::std::os::raw::c_int,
    pub efc_AR: *mut mjtNum,
    pub efc_vel: *mut mjtNum,
    pub efc_aref: *mut mjtNum,
    pub efc_b: *mut mjtNum,
    pub iefc_aref: *mut mjtNum,
    pub iefc_state: *mut ::std::os::raw::c_int,
    pub iefc_force: *mut mjtNum,
    pub efc_state: *mut ::std::os::raw::c_int,
    pub efc_force: *mut mjtNum,
    pub ifrc_constraint: *mut mjtNum,
    pub threadpool: usize,
    pub signature: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mjData_"][::std::mem::size_of::<mjData_>() - 163056usize];
    ["Alignment of mjData_"][::std::mem::align_of::<mjData_>() - 8usize];
    ["Offset of field: mjData_::narena"][::std::mem::offset_of!(mjData_, narena) - 0usize];
    ["Offset of field: mjData_::nbuffer"][::std::mem::offset_of!(mjData_, nbuffer) - 8usize];
    ["Offset of field: mjData_::nplugin"][::std::mem::offset_of!(mjData_, nplugin) - 16usize];
    ["Offset of field: mjData_::pstack"][::std::mem::offset_of!(mjData_, pstack) - 24usize];
    ["Offset of field: mjData_::pbase"][::std::mem::offset_of!(mjData_, pbase) - 32usize];
    ["Offset of field: mjData_::parena"][::std::mem::offset_of!(mjData_, parena) - 40usize];
    ["Offset of field: mjData_::maxuse_stack"]
        [::std::mem::offset_of!(mjData_, maxuse_stack) - 48usize];
    ["Offset of field: mjData_::maxuse_threadstack"]
        [::std::mem::offset_of!(mjData_, maxuse_threadstack) - 56usize];
    ["Offset of field: mjData_::maxuse_arena"]
        [::std::mem::offset_of!(mjData_, maxuse_arena) - 1080usize];
    ["Offset of field: mjData_::maxuse_con"]
        [::std::mem::offset_of!(mjData_, maxuse_con) - 1088usize];
    ["Offset of field: mjData_::maxuse_efc"]
        [::std::mem::offset_of!(mjData_, maxuse_efc) - 1092usize];
    ["Offset of field: mjData_::solver"][::std::mem::offset_of!(mjData_, solver) - 1096usize];
    ["Offset of field: mjData_::solver_niter"]
        [::std::mem::offset_of!(mjData_, solver_niter) - 161096usize];
    ["Offset of field: mjData_::solver_nnz"]
        [::std::mem::offset_of!(mjData_, solver_nnz) - 161176usize];
    ["Offset of field: mjData_::solver_fwdinv"]
        [::std::mem::offset_of!(mjData_, solver_fwdinv) - 161256usize];
    ["Offset of field: mjData_::warning"][::std::mem::offset_of!(mjData_, warning) - 161272usize];
    ["Offset of field: mjData_::timer"][::std::mem::offset_of!(mjData_, timer) - 161336usize];
    ["Offset of field: mjData_::ncon"][::std::mem::offset_of!(mjData_, ncon) - 161576usize];
    ["Offset of field: mjData_::ne"][::std::mem::offset_of!(mjData_, ne) - 161580usize];
    ["Offset of field: mjData_::nf"][::std::mem::offset_of!(mjData_, nf) - 161584usize];
    ["Offset of field: mjData_::nl"][::std::mem::offset_of!(mjData_, nl) - 161588usize];
    ["Offset of field: mjData_::nefc"][::std::mem::offset_of!(mjData_, nefc) - 161592usize];
    ["Offset of field: mjData_::nJ"][::std::mem::offset_of!(mjData_, nJ) - 161596usize];
    ["Offset of field: mjData_::nA"][::std::mem::offset_of!(mjData_, nA) - 161600usize];
    ["Offset of field: mjData_::nisland"][::std::mem::offset_of!(mjData_, nisland) - 161604usize];
    ["Offset of field: mjData_::nidof"][::std::mem::offset_of!(mjData_, nidof) - 161608usize];
    ["Offset of field: mjData_::time"][::std::mem::offset_of!(mjData_, time) - 161616usize];
    ["Offset of field: mjData_::energy"][::std::mem::offset_of!(mjData_, energy) - 161624usize];
    ["Offset of field: mjData_::buffer"][::std::mem::offset_of!(mjData_, buffer) - 161640usize];
    ["Offset of field: mjData_::arena"][::std::mem::offset_of!(mjData_, arena) - 161648usize];
    ["Offset of field: mjData_::qpos"][::std::mem::offset_of!(mjData_, qpos) - 161656usize];
    ["Offset of field: mjData_::qvel"][::std::mem::offset_of!(mjData_, qvel) - 161664usize];
    ["Offset of field: mjData_::act"][::std::mem::offset_of!(mjData_, act) - 161672usize];
    ["Offset of field: mjData_::qacc_warmstart"]
        [::std::mem::offset_of!(mjData_, qacc_warmstart) - 161680usize];
    ["Offset of field: mjData_::plugin_state"]
        [::std::mem::offset_of!(mjData_, plugin_state) - 161688usize];
    ["Offset of field: mjData_::ctrl"][::std::mem::offset_of!(mjData_, ctrl) - 161696usize];
    ["Offset of field: mjData_::qfrc_applied"]
        [::std::mem::offset_of!(mjData_, qfrc_applied) - 161704usize];
    ["Offset of field: mjData_::xfrc_applied"]
        [::std::mem::offset_of!(mjData_, xfrc_applied) - 161712usize];
    ["Offset of field: mjData_::eq_active"]
        [::std::mem::offset_of!(mjData_, eq_active) - 161720usize];
    ["Offset of field: mjData_::mocap_pos"]
        [::std::mem::offset_of!(mjData_, mocap_pos) - 161728usize];
    ["Offset of field: mjData_::mocap_quat"]
        [::std::mem::offset_of!(mjData_, mocap_quat) - 161736usize];
    ["Offset of field: mjData_::qacc"][::std::mem::offset_of!(mjData_, qacc) - 161744usize];
    ["Offset of field: mjData_::act_dot"][::std::mem::offset_of!(mjData_, act_dot) - 161752usize];
    ["Offset of field: mjData_::userdata"][::std::mem::offset_of!(mjData_, userdata) - 161760usize];
    ["Offset of field: mjData_::sensordata"]
        [::std::mem::offset_of!(mjData_, sensordata) - 161768usize];
    ["Offset of field: mjData_::plugin"][::std::mem::offset_of!(mjData_, plugin) - 161776usize];
    ["Offset of field: mjData_::plugin_data"]
        [::std::mem::offset_of!(mjData_, plugin_data) - 161784usize];
    ["Offset of field: mjData_::xpos"][::std::mem::offset_of!(mjData_, xpos) - 161792usize];
    ["Offset of field: mjData_::xquat"][::std::mem::offset_of!(mjData_, xquat) - 161800usize];
    ["Offset of field: mjData_::xmat"][::std::mem::offset_of!(mjData_, xmat) - 161808usize];
    ["Offset of field: mjData_::xipos"][::std::mem::offset_of!(mjData_, xipos) - 161816usize];
    ["Offset of field: mjData_::ximat"][::std::mem::offset_of!(mjData_, ximat) - 161824usize];
    ["Offset of field: mjData_::xanchor"][::std::mem::offset_of!(mjData_, xanchor) - 161832usize];
    ["Offset of field: mjData_::xaxis"][::std::mem::offset_of!(mjData_, xaxis) - 161840usize];
    ["Offset of field: mjData_::geom_xpos"]
        [::std::mem::offset_of!(mjData_, geom_xpos) - 161848usize];
    ["Offset of field: mjData_::geom_xmat"]
        [::std::mem::offset_of!(mjData_, geom_xmat) - 161856usize];
    ["Offset of field: mjData_::site_xpos"]
        [::std::mem::offset_of!(mjData_, site_xpos) - 161864usize];
    ["Offset of field: mjData_::site_xmat"]
        [::std::mem::offset_of!(mjData_, site_xmat) - 161872usize];
    ["Offset of field: mjData_::cam_xpos"][::std::mem::offset_of!(mjData_, cam_xpos) - 161880usize];
    ["Offset of field: mjData_::cam_xmat"][::std::mem::offset_of!(mjData_, cam_xmat) - 161888usize];
    ["Offset of field: mjData_::light_xpos"]
        [::std::mem::offset_of!(mjData_, light_xpos) - 161896usize];
    ["Offset of field: mjData_::light_xdir"]
        [::std::mem::offset_of!(mjData_, light_xdir) - 161904usize];
    ["Offset of field: mjData_::subtree_com"]
        [::std::mem::offset_of!(mjData_, subtree_com) - 161912usize];
    ["Offset of field: mjData_::cdof"][::std::mem::offset_of!(mjData_, cdof) - 161920usize];
    ["Offset of field: mjData_::cinert"][::std::mem::offset_of!(mjData_, cinert) - 161928usize];
    ["Offset of field: mjData_::flexvert_xpos"]
        [::std::mem::offset_of!(mjData_, flexvert_xpos) - 161936usize];
    ["Offset of field: mjData_::flexelem_aabb"]
        [::std::mem::offset_of!(mjData_, flexelem_aabb) - 161944usize];
    ["Offset of field: mjData_::flexedge_J_rownnz"]
        [::std::mem::offset_of!(mjData_, flexedge_J_rownnz) - 161952usize];
    ["Offset of field: mjData_::flexedge_J_rowadr"]
        [::std::mem::offset_of!(mjData_, flexedge_J_rowadr) - 161960usize];
    ["Offset of field: mjData_::flexedge_J_colind"]
        [::std::mem::offset_of!(mjData_, flexedge_J_colind) - 161968usize];
    ["Offset of field: mjData_::flexedge_J"]
        [::std::mem::offset_of!(mjData_, flexedge_J) - 161976usize];
    ["Offset of field: mjData_::flexedge_length"]
        [::std::mem::offset_of!(mjData_, flexedge_length) - 161984usize];
    ["Offset of field: mjData_::ten_wrapadr"]
        [::std::mem::offset_of!(mjData_, ten_wrapadr) - 161992usize];
    ["Offset of field: mjData_::ten_wrapnum"]
        [::std::mem::offset_of!(mjData_, ten_wrapnum) - 162000usize];
    ["Offset of field: mjData_::ten_J_rownnz"]
        [::std::mem::offset_of!(mjData_, ten_J_rownnz) - 162008usize];
    ["Offset of field: mjData_::ten_J_rowadr"]
        [::std::mem::offset_of!(mjData_, ten_J_rowadr) - 162016usize];
    ["Offset of field: mjData_::ten_J_colind"]
        [::std::mem::offset_of!(mjData_, ten_J_colind) - 162024usize];
    ["Offset of field: mjData_::ten_J"][::std::mem::offset_of!(mjData_, ten_J) - 162032usize];
    ["Offset of field: mjData_::ten_length"]
        [::std::mem::offset_of!(mjData_, ten_length) - 162040usize];
    ["Offset of field: mjData_::wrap_obj"][::std::mem::offset_of!(mjData_, wrap_obj) - 162048usize];
    ["Offset of field: mjData_::wrap_xpos"]
        [::std::mem::offset_of!(mjData_, wrap_xpos) - 162056usize];
    ["Offset of field: mjData_::actuator_length"]
        [::std::mem::offset_of!(mjData_, actuator_length) - 162064usize];
    ["Offset of field: mjData_::moment_rownnz"]
        [::std::mem::offset_of!(mjData_, moment_rownnz) - 162072usize];
    ["Offset of field: mjData_::moment_rowadr"]
        [::std::mem::offset_of!(mjData_, moment_rowadr) - 162080usize];
    ["Offset of field: mjData_::moment_colind"]
        [::std::mem::offset_of!(mjData_, moment_colind) - 162088usize];
    ["Offset of field: mjData_::actuator_moment"]
        [::std::mem::offset_of!(mjData_, actuator_moment) - 162096usize];
    ["Offset of field: mjData_::crb"][::std::mem::offset_of!(mjData_, crb) - 162104usize];
    ["Offset of field: mjData_::qM"][::std::mem::offset_of!(mjData_, qM) - 162112usize];
    ["Offset of field: mjData_::M"][::std::mem::offset_of!(mjData_, M) - 162120usize];
    ["Offset of field: mjData_::qLD"][::std::mem::offset_of!(mjData_, qLD) - 162128usize];
    ["Offset of field: mjData_::qLDiagInv"]
        [::std::mem::offset_of!(mjData_, qLDiagInv) - 162136usize];
    ["Offset of field: mjData_::bvh_aabb_dyn"]
        [::std::mem::offset_of!(mjData_, bvh_aabb_dyn) - 162144usize];
    ["Offset of field: mjData_::bvh_active"]
        [::std::mem::offset_of!(mjData_, bvh_active) - 162152usize];
    ["Offset of field: mjData_::flexedge_velocity"]
        [::std::mem::offset_of!(mjData_, flexedge_velocity) - 162160usize];
    ["Offset of field: mjData_::ten_velocity"]
        [::std::mem::offset_of!(mjData_, ten_velocity) - 162168usize];
    ["Offset of field: mjData_::actuator_velocity"]
        [::std::mem::offset_of!(mjData_, actuator_velocity) - 162176usize];
    ["Offset of field: mjData_::cvel"][::std::mem::offset_of!(mjData_, cvel) - 162184usize];
    ["Offset of field: mjData_::cdof_dot"][::std::mem::offset_of!(mjData_, cdof_dot) - 162192usize];
    ["Offset of field: mjData_::qfrc_bias"]
        [::std::mem::offset_of!(mjData_, qfrc_bias) - 162200usize];
    ["Offset of field: mjData_::qfrc_spring"]
        [::std::mem::offset_of!(mjData_, qfrc_spring) - 162208usize];
    ["Offset of field: mjData_::qfrc_damper"]
        [::std::mem::offset_of!(mjData_, qfrc_damper) - 162216usize];
    ["Offset of field: mjData_::qfrc_gravcomp"]
        [::std::mem::offset_of!(mjData_, qfrc_gravcomp) - 162224usize];
    ["Offset of field: mjData_::qfrc_fluid"]
        [::std::mem::offset_of!(mjData_, qfrc_fluid) - 162232usize];
    ["Offset of field: mjData_::qfrc_passive"]
        [::std::mem::offset_of!(mjData_, qfrc_passive) - 162240usize];
    ["Offset of field: mjData_::subtree_linvel"]
        [::std::mem::offset_of!(mjData_, subtree_linvel) - 162248usize];
    ["Offset of field: mjData_::subtree_angmom"]
        [::std::mem::offset_of!(mjData_, subtree_angmom) - 162256usize];
    ["Offset of field: mjData_::qH"][::std::mem::offset_of!(mjData_, qH) - 162264usize];
    ["Offset of field: mjData_::qHDiagInv"]
        [::std::mem::offset_of!(mjData_, qHDiagInv) - 162272usize];
    ["Offset of field: mjData_::B_rownnz"][::std::mem::offset_of!(mjData_, B_rownnz) - 162280usize];
    ["Offset of field: mjData_::B_rowadr"][::std::mem::offset_of!(mjData_, B_rowadr) - 162288usize];
    ["Offset of field: mjData_::B_colind"][::std::mem::offset_of!(mjData_, B_colind) - 162296usize];
    ["Offset of field: mjData_::M_rownnz"][::std::mem::offset_of!(mjData_, M_rownnz) - 162304usize];
    ["Offset of field: mjData_::M_rowadr"][::std::mem::offset_of!(mjData_, M_rowadr) - 162312usize];
    ["Offset of field: mjData_::M_colind"][::std::mem::offset_of!(mjData_, M_colind) - 162320usize];
    ["Offset of field: mjData_::mapM2M"][::std::mem::offset_of!(mjData_, mapM2M) - 162328usize];
    ["Offset of field: mjData_::D_rownnz"][::std::mem::offset_of!(mjData_, D_rownnz) - 162336usize];
    ["Offset of field: mjData_::D_rowadr"][::std::mem::offset_of!(mjData_, D_rowadr) - 162344usize];
    ["Offset of field: mjData_::D_diag"][::std::mem::offset_of!(mjData_, D_diag) - 162352usize];
    ["Offset of field: mjData_::D_colind"][::std::mem::offset_of!(mjData_, D_colind) - 162360usize];
    ["Offset of field: mjData_::mapM2D"][::std::mem::offset_of!(mjData_, mapM2D) - 162368usize];
    ["Offset of field: mjData_::mapD2M"][::std::mem::offset_of!(mjData_, mapD2M) - 162376usize];
    ["Offset of field: mjData_::qDeriv"][::std::mem::offset_of!(mjData_, qDeriv) - 162384usize];
    ["Offset of field: mjData_::qLU"][::std::mem::offset_of!(mjData_, qLU) - 162392usize];
    ["Offset of field: mjData_::actuator_force"]
        [::std::mem::offset_of!(mjData_, actuator_force) - 162400usize];
    ["Offset of field: mjData_::qfrc_actuator"]
        [::std::mem::offset_of!(mjData_, qfrc_actuator) - 162408usize];
    ["Offset of field: mjData_::qfrc_smooth"]
        [::std::mem::offset_of!(mjData_, qfrc_smooth) - 162416usize];
    ["Offset of field: mjData_::qacc_smooth"]
        [::std::mem::offset_of!(mjData_, qacc_smooth) - 162424usize];
    ["Offset of field: mjData_::qfrc_constraint"]
        [::std::mem::offset_of!(mjData_, qfrc_constraint) - 162432usize];
    ["Offset of field: mjData_::qfrc_inverse"]
        [::std::mem::offset_of!(mjData_, qfrc_inverse) - 162440usize];
    ["Offset of field: mjData_::cacc"][::std::mem::offset_of!(mjData_, cacc) - 162448usize];
    ["Offset of field: mjData_::cfrc_int"][::std::mem::offset_of!(mjData_, cfrc_int) - 162456usize];
    ["Offset of field: mjData_::cfrc_ext"][::std::mem::offset_of!(mjData_, cfrc_ext) - 162464usize];
    ["Offset of field: mjData_::contact"][::std::mem::offset_of!(mjData_, contact) - 162472usize];
    ["Offset of field: mjData_::efc_type"][::std::mem::offset_of!(mjData_, efc_type) - 162480usize];
    ["Offset of field: mjData_::efc_id"][::std::mem::offset_of!(mjData_, efc_id) - 162488usize];
    ["Offset of field: mjData_::efc_J_rownnz"]
        [::std::mem::offset_of!(mjData_, efc_J_rownnz) - 162496usize];
    ["Offset of field: mjData_::efc_J_rowadr"]
        [::std::mem::offset_of!(mjData_, efc_J_rowadr) - 162504usize];
    ["Offset of field: mjData_::efc_J_rowsuper"]
        [::std::mem::offset_of!(mjData_, efc_J_rowsuper) - 162512usize];
    ["Offset of field: mjData_::efc_J_colind"]
        [::std::mem::offset_of!(mjData_, efc_J_colind) - 162520usize];
    ["Offset of field: mjData_::efc_JT_rownnz"]
        [::std::mem::offset_of!(mjData_, efc_JT_rownnz) - 162528usize];
    ["Offset of field: mjData_::efc_JT_rowadr"]
        [::std::mem::offset_of!(mjData_, efc_JT_rowadr) - 162536usize];
    ["Offset of field: mjData_::efc_JT_rowsuper"]
        [::std::mem::offset_of!(mjData_, efc_JT_rowsuper) - 162544usize];
    ["Offset of field: mjData_::efc_JT_colind"]
        [::std::mem::offset_of!(mjData_, efc_JT_colind) - 162552usize];
    ["Offset of field: mjData_::efc_J"][::std::mem::offset_of!(mjData_, efc_J) - 162560usize];
    ["Offset of field: mjData_::efc_JT"][::std::mem::offset_of!(mjData_, efc_JT) - 162568usize];
    ["Offset of field: mjData_::efc_pos"][::std::mem::offset_of!(mjData_, efc_pos) - 162576usize];
    ["Offset of field: mjData_::efc_margin"]
        [::std::mem::offset_of!(mjData_, efc_margin) - 162584usize];
    ["Offset of field: mjData_::efc_frictionloss"]
        [::std::mem::offset_of!(mjData_, efc_frictionloss) - 162592usize];
    ["Offset of field: mjData_::efc_diagApprox"]
        [::std::mem::offset_of!(mjData_, efc_diagApprox) - 162600usize];
    ["Offset of field: mjData_::efc_KBIP"][::std::mem::offset_of!(mjData_, efc_KBIP) - 162608usize];
    ["Offset of field: mjData_::efc_D"][::std::mem::offset_of!(mjData_, efc_D) - 162616usize];
    ["Offset of field: mjData_::efc_R"][::std::mem::offset_of!(mjData_, efc_R) - 162624usize];
    ["Offset of field: mjData_::tendon_efcadr"]
        [::std::mem::offset_of!(mjData_, tendon_efcadr) - 162632usize];
    ["Offset of field: mjData_::dof_island"]
        [::std::mem::offset_of!(mjData_, dof_island) - 162640usize];
    ["Offset of field: mjData_::island_nv"]
        [::std::mem::offset_of!(mjData_, island_nv) - 162648usize];
    ["Offset of field: mjData_::island_idofadr"]
        [::std::mem::offset_of!(mjData_, island_idofadr) - 162656usize];
    ["Offset of field: mjData_::island_dofadr"]
        [::std::mem::offset_of!(mjData_, island_dofadr) - 162664usize];
    ["Offset of field: mjData_::map_dof2idof"]
        [::std::mem::offset_of!(mjData_, map_dof2idof) - 162672usize];
    ["Offset of field: mjData_::map_idof2dof"]
        [::std::mem::offset_of!(mjData_, map_idof2dof) - 162680usize];
    ["Offset of field: mjData_::ifrc_smooth"]
        [::std::mem::offset_of!(mjData_, ifrc_smooth) - 162688usize];
    ["Offset of field: mjData_::iacc_smooth"]
        [::std::mem::offset_of!(mjData_, iacc_smooth) - 162696usize];
    ["Offset of field: mjData_::iM_rownnz"]
        [::std::mem::offset_of!(mjData_, iM_rownnz) - 162704usize];
    ["Offset of field: mjData_::iM_rowadr"]
        [::std::mem::offset_of!(mjData_, iM_rowadr) - 162712usize];
    ["Offset of field: mjData_::iM_colind"]
        [::std::mem::offset_of!(mjData_, iM_colind) - 162720usize];
    ["Offset of field: mjData_::iM"][::std::mem::offset_of!(mjData_, iM) - 162728usize];
    ["Offset of field: mjData_::iLD"][::std::mem::offset_of!(mjData_, iLD) - 162736usize];
    ["Offset of field: mjData_::iLDiagInv"]
        [::std::mem::offset_of!(mjData_, iLDiagInv) - 162744usize];
    ["Offset of field: mjData_::iacc"][::std::mem::offset_of!(mjData_, iacc) - 162752usize];
    ["Offset of field: mjData_::efc_island"]
        [::std::mem::offset_of!(mjData_, efc_island) - 162760usize];
    ["Offset of field: mjData_::island_ne"]
        [::std::mem::offset_of!(mjData_, island_ne) - 162768usize];
    ["Offset of field: mjData_::island_nf"]
        [::std::mem::offset_of!(mjData_, island_nf) - 162776usize];
    ["Offset of field: mjData_::island_nefc"]
        [::std::mem::offset_of!(mjData_, island_nefc) - 162784usize];
    ["Offset of field: mjData_::island_iefcadr"]
        [::std::mem::offset_of!(mjData_, island_iefcadr) - 162792usize];
    ["Offset of field: mjData_::map_efc2iefc"]
        [::std::mem::offset_of!(mjData_, map_efc2iefc) - 162800usize];
    ["Offset of field: mjData_::map_iefc2efc"]
        [::std::mem::offset_of!(mjData_, map_iefc2efc) - 162808usize];
    ["Offset of field: mjData_::iefc_type"]
        [::std::mem::offset_of!(mjData_, iefc_type) - 162816usize];
    ["Offset of field: mjData_::iefc_id"][::std::mem::offset_of!(mjData_, iefc_id) - 162824usize];
    ["Offset of field: mjData_::iefc_J_rownnz"]
        [::std::mem::offset_of!(mjData_, iefc_J_rownnz) - 162832usize];
    ["Offset of field: mjData_::iefc_J_rowadr"]
        [::std::mem::offset_of!(mjData_, iefc_J_rowadr) - 162840usize];
    ["Offset of field: mjData_::iefc_J_rowsuper"]
        [::std::mem::offset_of!(mjData_, iefc_J_rowsuper) - 162848usize];
    ["Offset of field: mjData_::iefc_J_colind"]
        [::std::mem::offset_of!(mjData_, iefc_J_colind) - 162856usize];
    ["Offset of field: mjData_::iefc_JT_rownnz"]
        [::std::mem::offset_of!(mjData_, iefc_JT_rownnz) - 162864usize];
    ["Offset of field: mjData_::iefc_JT_rowadr"]
        [::std::mem::offset_of!(mjData_, iefc_JT_rowadr) - 162872usize];
    ["Offset of field: mjData_::iefc_JT_rowsuper"]
        [::std::mem::offset_of!(mjData_, iefc_JT_rowsuper) - 162880usize];
    ["Offset of field: mjData_::iefc_JT_colind"]
        [::std::mem::offset_of!(mjData_, iefc_JT_colind) - 162888usize];
    ["Offset of field: mjData_::iefc_J"][::std::mem::offset_of!(mjData_, iefc_J) - 162896usize];
    ["Offset of field: mjData_::iefc_JT"][::std::mem::offset_of!(mjData_, iefc_JT) - 162904usize];
    ["Offset of field: mjData_::iefc_frictionloss"]
        [::std::mem::offset_of!(mjData_, iefc_frictionloss) - 162912usize];
    ["Offset of field: mjData_::iefc_D"][::std::mem::offset_of!(mjData_, iefc_D) - 162920usize];
    ["Offset of field: mjData_::iefc_R"][::std::mem::offset_of!(mjData_, iefc_R) - 162928usize];
    ["Offset of field: mjData_::efc_AR_rownnz"]
        [::std::mem::offset_of!(mjData_, efc_AR_rownnz) - 162936usize];
    ["Offset of field: mjData_::efc_AR_rowadr"]
        [::std::mem::offset_of!(mjData_, efc_AR_rowadr) - 162944usize];
    ["Offset of field: mjData_::efc_AR_colind"]
        [::std::mem::offset_of!(mjData_, efc_AR_colind) - 162952usize];
    ["Offset of field: mjData_::efc_AR"][::std::mem::offset_of!(mjData_, efc_AR) - 162960usize];
    ["Offset of field: mjData_::efc_vel"][::std::mem::offset_of!(mjData_, efc_vel) - 162968usize];
    ["Offset of field: mjData_::efc_aref"][::std::mem::offset_of!(mjData_, efc_aref) - 162976usize];
    ["Offset of field: mjData_::efc_b"][::std::mem::offset_of!(mjData_, efc_b) - 162984usize];
    ["Offset of field: mjData_::iefc_aref"]
        [::std::mem::offset_of!(mjData_, iefc_aref) - 162992usize];
    ["Offset of field: mjData_::iefc_state"]
        [::std::mem::offset_of!(mjData_, iefc_state) - 163000usize];
    ["Offset of field: mjData_::iefc_force"]
        [::std::mem::offset_of!(mjData_, iefc_force) - 163008usize];
    ["Offset of field: mjData_::efc_state"]
        [::std::mem::offset_of!(mjData_, efc_state) - 163016usize];
    ["Offset of field: mjData_::efc_force"]
        [::std::mem::offset_of!(mjData_, efc_force) - 163024usize];
    ["Offset of field: mjData_::ifrc_constraint"]
        [::std::mem::offset_of!(mjData_, ifrc_constraint) - 163032usize];
    ["Offset of field: mjData_::threadpool"]
        [::std::mem::offset_of!(mjData_, threadpool) - 163040usize];
    ["Offset of field: mjData_::signature"]
        [::std::mem::offset_of!(mjData_, signature) - 163048usize];
};
pub type mjData = mjData_;
pub type mjfGeneric =
    ::std::option::Option<unsafe extern "C" fn(m: *const mjModel, d: *mut mjData)>;
pub type mjfConFilt = ::std::option::Option<
    unsafe extern "C" fn(
        m: *const mjModel,
        d: *mut mjData,
        geom1: ::std::os::raw::c_int,
        geom2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int,
>;
pub type mjfSensor = ::std::option::Option<
    unsafe extern "C" fn(m: *const mjModel, d: *mut mjData, stage: ::std::os::raw::c_int),
>;
pub type mjfTime = ::std::option::Option<unsafe extern "C" fn() -> mjtNum>;
pub type mjfAct = ::std::option::Option<
    unsafe extern "C" fn(m: *const mjModel, d: *const mjData, id: ::std::os::raw::c_int) -> mjtNum,
>;
pub type mjfCollision = ::std::option::Option<
    unsafe extern "C" fn(
        m: *const mjModel,
        d: *const mjData,
        con: *mut mjContact,
        g1: ::std::os::raw::c_int,
        g2: ::std::os::raw::c_int,
        margin: mjtNum,
    ) -> ::std::os::raw::c_int,
>;
pub type __builtin_va_list = *mut ::std::os::raw::c_char;
